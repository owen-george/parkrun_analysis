<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <_.fcp.ObjectModelSharedDimensions.true...ObjectModelSharedDimensions />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='cleaned_parkrun_no_outliers+' inline='true' name='federated.04038vy13vqevb15babf610d55b3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_parkrun_no_outliers' name='textscan.00wma8a1awugja174t3y80muj0oj'>
            <connection class='textscan' directory='C:/Users/olgeo/Documents/IronHack/Week8/Final_project/data/clean' filename='cleaned_parkrun_no_outliers.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.00wma8a1awugja174t3y80muj0oj' name='cleaned_parkrun.csv' table='[cleaned_parkrun#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='integer' name='Position' ordinal='1' />
              <column datatype='real' name='Position_score' ordinal='2' />
              <column datatype='string' name='Name' ordinal='3' />
              <column datatype='integer' name='Runner_id' ordinal='4' />
              <column datatype='integer' name='Parkrun_count' ordinal='5' />
              <column datatype='string' name='Gender' ordinal='6' />
              <column datatype='string' name='Age_group' ordinal='7' />
              <column datatype='real' name='Time_in_minutes' ordinal='8' />
              <column datatype='real' name='temperature' ordinal='9' />
              <column datatype='real' name='windspeed' ordinal='10' />
              <column datatype='real' name='precipitation' ordinal='11' />
              <column datatype='integer' name='Total_Appearances' ordinal='12' />
              <column datatype='integer' name='Appearance_Instance' ordinal='13' />
              <column datatype='real' name='Days_since_last_parkrun' ordinal='14' />
              <column datatype='integer' name='Total_event_runners' ordinal='15' />
              <column datatype='real' name='PB_mins' ordinal='16' />
              <column datatype='real' name='ave_mins' ordinal='17' />
              <column datatype='real' name='prev_run_time' ordinal='18' />
              <column datatype='real' name='prev_PB' ordinal='19' />
              <column datatype='real' name='avg_prev_run_times' ordinal='20' />
            </columns>
          </relation>
          <relation connection='textscan.00wma8a1awugja174t3y80muj0oj' name='event_data.csv1' table='[event_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Total_event_runners' ordinal='1' />
              <column datatype='real' name='temperature' ordinal='2' />
              <column datatype='real' name='windspeed' ordinal='3' />
              <column datatype='real' name='precipitation' ordinal='4' />
              <column datatype='real' name='ave_run_time' ordinal='5' />
              <column datatype='real' name='best_time' ordinal='6' />
              <column datatype='real' name='worst_time' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.00wma8a1awugja174t3y80muj0oj' name='runner_stats.csv1' table='[runner_stats#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='integer' name='Runner_id' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
              <column datatype='string' name='Gender' ordinal='2' />
              <column datatype='string' name='Age_group' ordinal='3' />
              <column datatype='integer' name='Parkrun_count' ordinal='4' />
              <column datatype='integer' name='Total_event_appearances' ordinal='5' />
              <column datatype='date' name='first_event_date' ordinal='6' />
              <column datatype='date' name='most_recent_event_date' ordinal='7' />
              <column datatype='date' name='PB_date' ordinal='8' />
              <column datatype='real' name='mean_time' ordinal='9' />
              <column datatype='real' name='median_time' ordinal='10' />
              <column datatype='real' name='best_time' ordinal='11' />
              <column datatype='real' name='worst_time' ordinal='12' />
              <column datatype='real' name='first_time' ordinal='13' />
              <column datatype='real' name='most_recent_time' ordinal='14' />
            </columns>
          </relation>
          <_.fcp.ObjectModelSharedDimensions.true...relation connection='textscan.00wma8a1awugja174t3y80muj0oj' name='cleaned_parkrun_no_outliers.csv' table='[cleaned_parkrun_no_outliers#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='integer' name='Position' ordinal='1' />
              <column datatype='real' name='Position_score' ordinal='2' />
              <column datatype='string' name='Name' ordinal='3' />
              <column datatype='integer' name='Runner_id' ordinal='4' />
              <column datatype='integer' name='Parkrun_count' ordinal='5' />
              <column datatype='string' name='Gender' ordinal='6' />
              <column datatype='string' name='Age_group' ordinal='7' />
              <column datatype='real' name='Time_in_minutes' ordinal='8' />
              <column datatype='real' name='temperature' ordinal='9' />
              <column datatype='real' name='windspeed' ordinal='10' />
              <column datatype='real' name='precipitation' ordinal='11' />
              <column datatype='integer' name='Total_Appearances' ordinal='12' />
              <column datatype='integer' name='Appearance_Instance' ordinal='13' />
              <column datatype='real' name='Days_since_last_parkrun' ordinal='14' />
              <column datatype='integer' name='Total_event_runners' ordinal='15' />
              <column datatype='real' name='PB_mins' ordinal='16' />
              <column datatype='real' name='ave_mins' ordinal='17' />
              <column datatype='real' name='prev_run_time' ordinal='18' />
              <column datatype='real' name='prev_PB' ordinal='19' />
              <column datatype='real' name='avg_prev_run_times' ordinal='20' />
            </columns>
          </_.fcp.ObjectModelSharedDimensions.true...relation>
        </relation>
        <cols>
          <map key='[Age_group (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Age_group]' />
          <map key='[Age_group (runner_stats.csv1)]' value='[runner_stats.csv1].[Age_group]' />
          <map key='[Age_group]' value='[cleaned_parkrun_no_outliers.csv].[Age_group]' />
          <map key='[Appearance_Instance (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Appearance_Instance]' />
          <map key='[Appearance_Instance]' value='[cleaned_parkrun_no_outliers.csv].[Appearance_Instance]' />
          <map key='[Date (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Date]' />
          <map key='[Date (event_data.csv1)]' value='[event_data.csv1].[Date]' />
          <map key='[Date]' value='[cleaned_parkrun_no_outliers.csv].[Date]' />
          <map key='[Days_since_last_parkrun (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Days_since_last_parkrun]' />
          <map key='[Days_since_last_parkrun]' value='[cleaned_parkrun_no_outliers.csv].[Days_since_last_parkrun]' />
          <map key='[Gender (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Gender]' />
          <map key='[Gender (runner_stats.csv1)]' value='[runner_stats.csv1].[Gender]' />
          <map key='[Gender]' value='[cleaned_parkrun_no_outliers.csv].[Gender]' />
          <map key='[Name (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Name]' />
          <map key='[Name (runner_stats.csv1)]' value='[runner_stats.csv1].[Name]' />
          <map key='[Name]' value='[cleaned_parkrun_no_outliers.csv].[Name]' />
          <map key='[PB_date (runner_stats.csv1)]' value='[runner_stats.csv1].[PB_date]' />
          <map key='[PB_mins (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[PB_mins]' />
          <map key='[PB_mins]' value='[cleaned_parkrun_no_outliers.csv].[PB_mins]' />
          <map key='[Parkrun_count (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Parkrun_count]' />
          <map key='[Parkrun_count (runner_stats.csv1)]' value='[runner_stats.csv1].[Parkrun_count]' />
          <map key='[Parkrun_count]' value='[cleaned_parkrun_no_outliers.csv].[Parkrun_count]' />
          <map key='[Position (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Position]' />
          <map key='[Position]' value='[cleaned_parkrun_no_outliers.csv].[Position]' />
          <map key='[Position_score (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Position_score]' />
          <map key='[Position_score]' value='[cleaned_parkrun_no_outliers.csv].[Position_score]' />
          <map key='[Runner_id (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Runner_id]' />
          <map key='[Runner_id (runner_stats.csv1)]' value='[runner_stats.csv1].[Runner_id]' />
          <map key='[Runner_id]' value='[cleaned_parkrun_no_outliers.csv].[Runner_id]' />
          <map key='[Time_in_minutes (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Time_in_minutes]' />
          <map key='[Time_in_minutes]' value='[cleaned_parkrun_no_outliers.csv].[Time_in_minutes]' />
          <map key='[Total_Appearances (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Total_Appearances]' />
          <map key='[Total_Appearances]' value='[cleaned_parkrun_no_outliers.csv].[Total_Appearances]' />
          <map key='[Total_event_appearances (runner_stats.csv1)]' value='[runner_stats.csv1].[Total_event_appearances]' />
          <map key='[Total_event_runners (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[Total_event_runners]' />
          <map key='[Total_event_runners (event_data.csv1)]' value='[event_data.csv1].[Total_event_runners]' />
          <map key='[Total_event_runners]' value='[cleaned_parkrun_no_outliers.csv].[Total_event_runners]' />
          <map key='[ave_mins (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[ave_mins]' />
          <map key='[ave_mins]' value='[cleaned_parkrun_no_outliers.csv].[ave_mins]' />
          <map key='[ave_run_time (event_data.csv1)]' value='[event_data.csv1].[ave_run_time]' />
          <map key='[avg_prev_run_times (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[avg_prev_run_times]' />
          <map key='[avg_prev_run_times]' value='[cleaned_parkrun_no_outliers.csv].[avg_prev_run_times]' />
          <map key='[best_time (event_data.csv1)]' value='[event_data.csv1].[best_time]' />
          <map key='[best_time (runner_stats.csv1)]' value='[runner_stats.csv1].[best_time]' />
          <map key='[first_event_date (runner_stats.csv1)]' value='[runner_stats.csv1].[first_event_date]' />
          <map key='[first_time (runner_stats.csv1)]' value='[runner_stats.csv1].[first_time]' />
          <map key='[mean_time (runner_stats.csv1)]' value='[runner_stats.csv1].[mean_time]' />
          <map key='[median_time (runner_stats.csv1)]' value='[runner_stats.csv1].[median_time]' />
          <map key='[most_recent_event_date (runner_stats.csv1)]' value='[runner_stats.csv1].[most_recent_event_date]' />
          <map key='[most_recent_time (runner_stats.csv1)]' value='[runner_stats.csv1].[most_recent_time]' />
          <map key='[precipitation (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[precipitation]' />
          <map key='[precipitation (event_data.csv1)]' value='[event_data.csv1].[precipitation]' />
          <map key='[precipitation]' value='[cleaned_parkrun_no_outliers.csv].[precipitation]' />
          <map key='[prev_PB (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[prev_PB]' />
          <map key='[prev_PB]' value='[cleaned_parkrun_no_outliers.csv].[prev_PB]' />
          <map key='[prev_run_time (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[prev_run_time]' />
          <map key='[prev_run_time]' value='[cleaned_parkrun_no_outliers.csv].[prev_run_time]' />
          <map key='[temperature (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[temperature]' />
          <map key='[temperature (event_data.csv1)]' value='[event_data.csv1].[temperature]' />
          <map key='[temperature]' value='[cleaned_parkrun_no_outliers.csv].[temperature]' />
          <map key='[windspeed (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv].[windspeed]' />
          <map key='[windspeed (event_data.csv1)]' value='[event_data.csv1].[windspeed]' />
          <map key='[windspeed]' value='[cleaned_parkrun_no_outliers.csv].[windspeed]' />
          <map key='[worst_time (event_data.csv1)]' value='[event_data.csv1].[worst_time]' />
          <map key='[worst_time (runner_stats.csv1)]' value='[runner_stats.csv1].[worst_time]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[event_data.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Position (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Position_score (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Position_score</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runner_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Runner_id (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Runner_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parkrun_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parkrun_count (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Parkrun_count</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age_group (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Age_group</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time_in_minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Time_in_minutes (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Time_in_minutes</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>windspeed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[windspeed (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>windspeed</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precipitation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precipitation (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>precipitation</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Appearances</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Appearances (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Total_Appearances</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Appearance_Instance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Appearance_Instance (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Appearance_Instance</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days_since_last_parkrun</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Days_since_last_parkrun (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Days_since_last_parkrun</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_event_runners</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_event_runners (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>Total_event_runners</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PB_mins</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PB_mins (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>PB_mins</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ave_mins</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ave_mins (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>ave_mins</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prev_run_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prev_run_time (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>prev_run_time</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prev_PB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prev_PB (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>prev_PB</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_prev_run_times</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_prev_run_times (cleaned_parkrun.csv)]</local-name>
            <parent-name>[cleaned_parkrun.csv]</parent-name>
            <remote-alias>avg_prev_run_times</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date (event_data.csv1)]</local-name>
            <parent-name>[event_data.csv1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>21</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_event_runners</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_event_runners (event_data.csv1)]</local-name>
            <parent-name>[event_data.csv1]</parent-name>
            <remote-alias>Total_event_runners</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature (event_data.csv1)]</local-name>
            <parent-name>[event_data.csv1]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>windspeed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[windspeed (event_data.csv1)]</local-name>
            <parent-name>[event_data.csv1]</parent-name>
            <remote-alias>windspeed</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precipitation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precipitation (event_data.csv1)]</local-name>
            <parent-name>[event_data.csv1]</parent-name>
            <remote-alias>precipitation</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ave_run_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ave_run_time (event_data.csv1)]</local-name>
            <parent-name>[event_data.csv1]</parent-name>
            <remote-alias>ave_run_time</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>best_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[best_time (event_data.csv1)]</local-name>
            <parent-name>[event_data.csv1]</parent-name>
            <remote-alias>best_time</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>worst_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[worst_time (event_data.csv1)]</local-name>
            <parent-name>[event_data.csv1]</parent-name>
            <remote-alias>worst_time</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runner_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Runner_id (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>Runner_id</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age_group (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>Age_group</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parkrun_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parkrun_count (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>Parkrun_count</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_event_appearances</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_event_appearances (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>Total_event_appearances</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_event_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[first_event_date (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>first_event_date</remote-alias>
            <ordinal>35</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>most_recent_event_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[most_recent_event_date (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>most_recent_event_date</remote-alias>
            <ordinal>36</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PB_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[PB_date (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>PB_date</remote-alias>
            <ordinal>37</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_time (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>mean_time</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_time (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>median_time</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>best_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[best_time (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>best_time</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>worst_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[worst_time (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>worst_time</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[first_time (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>first_time</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>most_recent_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[most_recent_time (runner_stats.csv1)]</local-name>
            <parent-name>[runner_stats.csv1]</parent-name>
            <remote-alias>most_recent_time</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
          </metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>44</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Position_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Position_score]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Position_score</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Runner_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Runner_id]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Runner_id</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Parkrun_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parkrun_count]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Parkrun_count</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Age_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age_group]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Age_group</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Time_in_minutes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Time_in_minutes]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Time_in_minutes</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>windspeed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[windspeed]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>windspeed</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>precipitation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precipitation]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>precipitation</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Total_Appearances</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Appearances]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Total_Appearances</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Appearance_Instance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Appearance_Instance]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Appearance_Instance</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Days_since_last_parkrun</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Days_since_last_parkrun]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Days_since_last_parkrun</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>Total_event_runners</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_event_runners]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>Total_event_runners</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>PB_mins</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PB_mins]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>PB_mins</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>ave_mins</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ave_mins]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>ave_mins</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>prev_run_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prev_run_time]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>prev_run_time</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>prev_PB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[prev_PB]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>prev_PB</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
            <remote-name>avg_prev_run_times</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_prev_run_times]</local-name>
            <parent-name>[cleaned_parkrun_no_outliers.csv]</parent-name>
            <remote-alias>avg_prev_run_times</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
          </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age group (cleaned parkrun.csv)' datatype='string' hidden='true' name='[Age_group (cleaned_parkrun.csv)]' role='dimension' type='nominal' />
      <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
      <column caption='Age group' datatype='string' hidden='true' name='[Age_group]' role='dimension' type='nominal' />
      <column caption='Appearance Instance (cleaned parkrun.csv)' datatype='integer' name='[Appearance_Instance (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Appearance Instance' datatype='integer' name='[Appearance_Instance]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(AVG([Time_in_minutes])) - LOOKUP(ZN(AVG([Time_in_minutes])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Time index' datatype='real' name='[Calculation_1901926444201914372]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Time_in_minutes (cleaned_parkrun.csv)]/[prev_run_time (cleaned_parkrun.csv)]' />
      </column>
      <column caption='Weeks since last parkrun' datatype='real' name='[Calculation_1901926444206850054]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Days_since_last_parkrun]/7' />
      </column>
      <column caption='Windy' datatype='boolean' name='[Calculation_2000724160674611200]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[windspeed (event_data.csv1)] &gt; 25' />
      </column>
      <column caption='Rain' datatype='boolean' name='[Calculation_2000724160675123201]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[precipitation (event_data.csv1)]&gt;0' />
      </column>
      <column caption='Count' datatype='integer' name='[Calculation_2000724160678371330]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([Runner_id])' />
      </column>
      <column caption='Unique runners' datatype='integer' name='[Calculation_2000724160678682627]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Runner_id])' />
      </column>
      <column caption='Distinct Runners' datatype='integer' name='[Calculation_2000724160679550980]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Runner_id (cleaned_parkrun.csv)])' />
      </column>
      <column caption='current / previous' datatype='real' name='[Calculation_2000724160689209353]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Time_in_minutes]/[prev_run_time]' />
      </column>
      <column caption='Runner Count' datatype='integer' name='[Calculation_2000724160694947850]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([Runner_id])' />
      </column>
      <column caption='Date (cleaned parkrun.csv)' datatype='date' name='[Date (cleaned_parkrun.csv)]' role='dimension' type='ordinal' />
      <column caption='Date (event data.csv1)' datatype='date' name='[Date (event_data.csv1)]' role='dimension' type='ordinal' />
      <column caption='Days since last parkrun (cleaned parkrun.csv)' datatype='real' name='[Days_since_last_parkrun (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='Days since last parkrun' datatype='real' name='[Days_since_last_parkrun]' role='measure' type='quantitative' />
      <column caption='Gender (cleaned parkrun.csv)' datatype='string' hidden='true' name='[Gender (cleaned_parkrun.csv)]' role='dimension' type='nominal' />
      <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Gender]' role='dimension' type='nominal' />
      <column caption='Name (cleaned parkrun.csv)' datatype='string' hidden='true' name='[Name (cleaned_parkrun.csv)]' role='dimension' type='nominal' />
      <column caption='Name (runner stats.csv1)' datatype='string' name='[Name (runner_stats.csv1)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Name]' role='dimension' type='nominal' />
      <column caption='PB date (runner stats.csv1)' datatype='date' name='[PB_date (runner_stats.csv1)]' role='dimension' type='ordinal' />
      <column caption='PB mins (cleaned parkrun.csv)' datatype='real' hidden='true' name='[PB_mins (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='PB mins' datatype='real' hidden='true' name='[PB_mins]' role='measure' type='quantitative' />
      <column caption='Parkrun count (cleaned parkrun.csv)' datatype='integer' hidden='true' name='[Parkrun_count (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='Parkrun count (runner stats.csv1)' datatype='integer' name='[Parkrun_count (runner_stats.csv1)]' role='measure' type='quantitative' />
      <column caption='Parkrun count' datatype='integer' hidden='true' name='[Parkrun_count]' role='measure' type='quantitative' />
      <column caption='Position (cleaned parkrun.csv)' datatype='integer' name='[Position (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Position]' role='measure' type='ordinal' />
      <column caption='Position score (cleaned parkrun.csv)' datatype='real' name='[Position_score (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='Position score' datatype='real' name='[Position_score]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Precipitation (Event Data.Csv1) (bin)' datatype='integer' name='[Precipitation (Event Data.Csv1) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[precipitation (event_data.csv1)]' peg='0' size='0.5' />
      </column>
      <column datatype='string' name='[Precipitation (Event Data.Csv1) (group)]' role='dimension' type='ordinal'>
        <calculation class='categorical-bin' column='[precipitation (event_data.csv1)]' new-bin='true'>
          <bin default-name='true' value='&quot;0&quot;'>
            <value>0.0</value>
          </bin>
          <bin default-name='false' value='&quot;0.1-0.4&quot;'>
            <value>0.10000000000000001</value>
            <value>0.10000000000000002</value>
            <value>0.20000000000000001</value>
            <value>0.20000000000000004</value>
            <value>0.29999999999999999</value>
            <value>0.40000000000000002</value>
          </bin>
          <bin default-name='false' value='&quot;0.1-0.9&quot;'>
            <value>0.5</value>
            <value>0.59999999999999998</value>
            <value>0.69999999999999984</value>
            <value>0.69999999999999996</value>
            <value>0.80000000000000004</value>
            <value>0.80000000000000016</value>
            <value>0.90000000000000002</value>
            <value>0.90000000000000013</value>
          </bin>
          <bin default-name='false' value='&quot;1.0-1.4&quot;'>
            <value>1.0</value>
            <value>1.1000000000000001</value>
            <value>1.2</value>
            <value>1.3</value>
            <value>1.3999999999999999</value>
          </bin>
          <bin default-name='false' value='&quot;1.5-1.9&quot;'>
            <value>1.5</value>
            <value>1.6000000000000001</value>
            <value>1.7</value>
          </bin>
          <bin default-name='false' value='&quot;2.0-2.4&quot;'>
            <value>2.2000000000000002</value>
            <value>2.2999999999999998</value>
            <value>2.5</value>
          </bin>
          <bin default-name='false' value='&quot;2.5+&quot;'>
            <value>2.7000000000000006</value>
            <value>2.7999999999999998</value>
            <value>3.5</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='None' caption='Prev Run Time (Cleaned Parkrun.Csv) (bin)' datatype='integer' name='[Prev Run Time (Cleaned Parkrun.Csv) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[prev_run_time (cleaned_parkrun.csv)]' peg='0' size='1' />
      </column>
      <column aggregation='None' caption='Prev Run Time (bin)' datatype='integer' name='[Prev Run Time (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[prev_run_time]' peg='0' size='1' />
      </column>
      <column caption='Runner id (cleaned parkrun.csv)' datatype='integer' name='[Runner_id (cleaned_parkrun.csv)]' role='dimension' type='ordinal' />
      <column caption='Runner id (runner stats.csv1)' datatype='integer' name='[Runner_id (runner_stats.csv1)]' role='dimension' type='ordinal' />
      <column caption='Runner id' datatype='integer' name='[Runner_id]' role='dimension' type='ordinal' />
      <column aggregation='None' caption='Temperature (Event Data.Csv1) (bin)' datatype='integer' name='[Temperature (Event Data.Csv1) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[temperature (event_data.csv1)]' peg='0' size='5' />
      </column>
      <column aggregation='None' caption='Time in minutes (bin)' datatype='integer' name='[Time in minutes (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Time_in_minutes]' peg='0' size='1' />
      </column>
      <column aggregation='None' caption='Time in minutes (cleaned parkrun.csv) (bin)' datatype='integer' name='[Time in minutes (cleaned parkrun.csv) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Time_in_minutes (cleaned_parkrun.csv)]' peg='0' size='1' />
      </column>
      <column caption='Time in minutes (cleaned parkrun.csv)' datatype='real' name='[Time_in_minutes (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
      <column caption='Total Appearances (cleaned parkrun.csv)' datatype='integer' hidden='true' name='[Total_Appearances (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='Total Appearances' datatype='integer' name='[Total_Appearances]' role='measure' type='ordinal' />
      <column caption='Total event appearances (runner stats.csv1)' datatype='integer' name='[Total_event_appearances (runner_stats.csv1)]' role='measure' type='quantitative' />
      <column caption='Total event runners (cleaned parkrun.csv)' datatype='integer' hidden='true' name='[Total_event_runners (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='Total event runners (event data.csv1)' datatype='real' name='[Total_event_runners (event_data.csv1)]' role='measure' type='quantitative' />
      <column caption='Total event runners' datatype='integer' hidden='true' name='[Total_event_runners]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Weeks since last parkrun (bin)' datatype='integer' name='[Weeks since last parkrun (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Calculation_1901926444206850054]' peg='0' size='1' />
      </column>
      <column aggregation='None' caption='Windspeed (Event Data.Csv1) (bin)' datatype='integer' name='[Windspeed (Event Data.Csv1) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[windspeed (event_data.csv1)]' peg='0' size='10' />
      </column>
      <column caption='cleaned_parkrun.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]' role='measure' type='quantitative' />
      <column caption='cleaned_parkrun_no_outliers.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]' role='measure' type='quantitative' />
      <column caption='event_data.csv1' datatype='table' name='[__tableau_internal_object_id__].[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]' role='measure' type='quantitative' />
      <column caption='runner_stats.csv1' datatype='table' name='[__tableau_internal_object_id__].[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]' role='measure' type='quantitative' />
      <column caption='Ave Mins (Cleaned Parkrun.Csv)' datatype='real' hidden='true' name='[ave_mins (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='Ave Mins' datatype='real' hidden='true' name='[ave_mins]' role='measure' type='quantitative' />
      <column caption='Ave Run Time (Event Data.Csv1)' datatype='real' name='[ave_run_time (event_data.csv1)]' role='measure' type='quantitative' />
      <column caption='Avg Prev Run Times (Cleaned Parkrun.Csv)' datatype='real' name='[avg_prev_run_times (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='Avg Prev Run Times' datatype='real' name='[avg_prev_run_times]' role='measure' type='quantitative' />
      <column caption='Best Time (Event Data.Csv1)' datatype='real' name='[best_time (event_data.csv1)]' role='measure' type='quantitative' />
      <column caption='Best Time (Runner Stats.Csv1)' datatype='real' name='[best_time (runner_stats.csv1)]' role='measure' type='quantitative' />
      <column caption='Change vs Previous' datatype='real' name='[current / previous (copy)_1901926444206120965]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Time_in_minutes]/[prev_run_time])-1' />
      </column>
      <column caption='First Event Date (Runner Stats.Csv1)' datatype='date' name='[first_event_date (runner_stats.csv1)]' role='dimension' type='ordinal' />
      <column caption='First Time (Runner Stats.Csv1)' datatype='real' name='[first_time (runner_stats.csv1)]' role='measure' type='quantitative' />
      <column caption='Mean Time (Runner Stats.Csv1)' datatype='real' name='[mean_time (runner_stats.csv1)]' role='measure' type='quantitative' />
      <column caption='Median Time (Runner Stats.Csv1)' datatype='real' name='[median_time (runner_stats.csv1)]' role='measure' type='quantitative' />
      <column caption='Most Recent Event Date (Runner Stats.Csv1)' datatype='date' name='[most_recent_event_date (runner_stats.csv1)]' role='dimension' type='ordinal' />
      <column caption='Most Recent Time (Runner Stats.Csv1)' datatype='real' name='[most_recent_time (runner_stats.csv1)]' role='measure' type='quantitative' />
      <column caption='Precipitation (Cleaned Parkrun.Csv)' datatype='real' hidden='true' name='[precipitation (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='Precipitation (Event Data.Csv1)' datatype='real' name='[precipitation (event_data.csv1)]' role='measure' type='quantitative' />
      <column caption='Precipitation' datatype='real' hidden='true' name='[precipitation]' role='measure' type='quantitative' />
      <column caption='prev PB (cleaned parkrun.csv)' datatype='real' name='[prev_PB (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='prev PB' datatype='real' name='[prev_PB]' role='measure' type='quantitative' />
      <column caption='Prev Run Time (Cleaned Parkrun.Csv)' datatype='real' name='[prev_run_time (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='Prev Run Time' datatype='real' name='[prev_run_time]' role='measure' type='quantitative' />
      <column caption='Temperature (Cleaned Parkrun.Csv)' datatype='real' hidden='true' name='[temperature (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='Temperature (Event Data.Csv1)' datatype='real' name='[temperature (event_data.csv1)]' role='measure' type='quantitative' />
      <column caption='Temperature' datatype='real' hidden='true' name='[temperature]' role='measure' type='quantitative' />
      <column caption='Windspeed (Cleaned Parkrun.Csv)' datatype='real' hidden='true' name='[windspeed (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
      <column caption='Windspeed (Event Data.Csv1)' datatype='real' name='[windspeed (event_data.csv1)]' role='measure' type='quantitative' />
      <column caption='Windspeed' datatype='real' hidden='true' name='[windspeed]' role='measure' type='quantitative' />
      <column caption='Worst Time (Event Data.Csv1)' datatype='real' name='[worst_time (event_data.csv1)]' role='measure' type='quantitative' />
      <column caption='Worst Time (Runner Stats.Csv1)' datatype='real' name='[worst_time (runner_stats.csv1)]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_2000724160689209353]' derivation='Avg' name='[avg:Calculation_2000724160689209353:qk]' pivot='key' type='quantitative' />
      <column-instance column='[current / previous (copy)_1901926444206120965]' derivation='Avg' name='[avg:current / previous (copy)_1901926444206120965:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
      <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
      <column-instance column='[Precipitation (Event Data.Csv1) (bin)]' derivation='None' name='[none:Precipitation (Event Data.Csv1) (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[precipitation (event_data.csv1)]' derivation='Sum' name='[sum:precipitation (event_data.csv1):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date (event_data.csv1)]' derivation='Year' name='[yr:Date (event_data.csv1):ok]' pivot='key' type='ordinal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/olgeo/AppData/Local/Temp/TableauTemp/#TableauTemp_0tmvnl71ibrsd51bnd1gq0gx276y.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='12/17/2024 04:23:17 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198' table='[Extract].[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]' type='table' />
            <relation name='event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65' table='[Extract].[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]' type='table' />
            <relation name='runner_stats.csv_805616C17CC24EB5998A74FCF048CD72' table='[Extract].[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]' type='table' />
            <_.fcp.ObjectModelSharedDimensions.true...relation name='cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44' table='[Extract].[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]' type='table' />
          </relation>
          <cols>
            <map key='[Age_group (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[Age_group]' />
            <map key='[Appearance_Instance (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198].[Appearance_Instance]' />
            <map key='[Appearance_Instance]' value='[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44].[Appearance_Instance]' />
            <map key='[Date (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198].[Date]' />
            <map key='[Date (event_data.csv1)]' value='[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65].[Date]' />
            <map key='[Date]' value='[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44].[Date]' />
            <map key='[Days_since_last_parkrun (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198].[Days_since_last_parkrun]' />
            <map key='[Days_since_last_parkrun]' value='[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44].[Days_since_last_parkrun]' />
            <map key='[Gender (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[Gender]' />
            <map key='[Name (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[Name]' />
            <map key='[PB_date (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[PB_date]' />
            <map key='[Parkrun_count (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[Parkrun_count]' />
            <map key='[Position (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198].[Position]' />
            <map key='[Position]' value='[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44].[Position]' />
            <map key='[Position_score (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198].[Position_score]' />
            <map key='[Position_score]' value='[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44].[Position_score]' />
            <map key='[Runner_id (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198].[Runner_id]' />
            <map key='[Runner_id (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[Runner_id]' />
            <map key='[Runner_id]' value='[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44].[Runner_id]' />
            <map key='[Time_in_minutes (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198].[Time_in_minutes]' />
            <map key='[Time_in_minutes]' value='[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44].[Time_in_minutes]' />
            <map key='[Total_Appearances]' value='[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44].[Total_Appearances]' />
            <map key='[Total_event_appearances (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[Total_event_appearances]' />
            <map key='[Total_event_runners (event_data.csv1)]' value='[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65].[Total_event_runners]' />
            <map key='[ave_run_time (event_data.csv1)]' value='[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65].[ave_run_time]' />
            <map key='[avg_prev_run_times (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198].[avg_prev_run_times]' />
            <map key='[avg_prev_run_times]' value='[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44].[avg_prev_run_times]' />
            <map key='[best_time (event_data.csv1)]' value='[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65].[best_time]' />
            <map key='[best_time (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[best_time]' />
            <map key='[first_event_date (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[first_event_date]' />
            <map key='[first_time (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[first_time]' />
            <map key='[mean_time (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[mean_time]' />
            <map key='[median_time (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[median_time]' />
            <map key='[most_recent_event_date (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[most_recent_event_date]' />
            <map key='[most_recent_time (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[most_recent_time]' />
            <map key='[precipitation (event_data.csv1)]' value='[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65].[precipitation]' />
            <map key='[prev_PB (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198].[prev_PB]' />
            <map key='[prev_PB]' value='[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44].[prev_PB]' />
            <map key='[prev_run_time (cleaned_parkrun.csv)]' value='[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198].[prev_run_time]' />
            <map key='[prev_run_time]' value='[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44].[prev_run_time]' />
            <map key='[temperature (event_data.csv1)]' value='[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65].[temperature]' />
            <map key='[windspeed (event_data.csv1)]' value='[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65].[windspeed]' />
            <map key='[worst_time (event_data.csv1)]' value='[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65].[worst_time]' />
            <map key='[worst_time (runner_stats.csv1)]' value='[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72].[worst_time]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date (cleaned_parkrun.csv)]</local-name>
              <parent-name>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>cleaned_parkrun.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3541</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Position</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Position (cleaned_parkrun.csv)]</local-name>
              <parent-name>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</parent-name>
              <remote-alias>Position</remote-alias>
              <ordinal>1</ordinal>
              <family>cleaned_parkrun.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1638</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Position_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Position_score (cleaned_parkrun.csv)]</local-name>
              <parent-name>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</parent-name>
              <remote-alias>Position_score</remote-alias>
              <ordinal>2</ordinal>
              <family>cleaned_parkrun.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>67617</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Runner_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Runner_id (cleaned_parkrun.csv)]</local-name>
              <parent-name>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</parent-name>
              <remote-alias>Runner_id</remote-alias>
              <ordinal>3</ordinal>
              <family>cleaned_parkrun.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9392</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Time_in_minutes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Time_in_minutes (cleaned_parkrun.csv)]</local-name>
              <parent-name>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</parent-name>
              <remote-alias>Time_in_minutes</remote-alias>
              <ordinal>4</ordinal>
              <family>cleaned_parkrun.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5192</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Appearance_Instance</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Appearance_Instance (cleaned_parkrun.csv)]</local-name>
              <parent-name>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</parent-name>
              <remote-alias>Appearance_Instance</remote-alias>
              <ordinal>5</ordinal>
              <family>cleaned_parkrun.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1351</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Days_since_last_parkrun</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Days_since_last_parkrun (cleaned_parkrun.csv)]</local-name>
              <parent-name>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</parent-name>
              <remote-alias>Days_since_last_parkrun</remote-alias>
              <ordinal>6</ordinal>
              <family>cleaned_parkrun.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>595</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>prev_run_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[prev_run_time (cleaned_parkrun.csv)]</local-name>
              <parent-name>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</parent-name>
              <remote-alias>prev_run_time</remote-alias>
              <ordinal>7</ordinal>
              <family>cleaned_parkrun.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6128</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>prev_PB</remote-name>
              <remote-type>5</remote-type>
              <local-name>[prev_PB (cleaned_parkrun.csv)]</local-name>
              <parent-name>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</parent-name>
              <remote-alias>prev_PB</remote-alias>
              <ordinal>8</ordinal>
              <family>cleaned_parkrun.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4272</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_prev_run_times</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_prev_run_times (cleaned_parkrun.csv)]</local-name>
              <parent-name>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</parent-name>
              <remote-alias>avg_prev_run_times</remote-alias>
              <ordinal>9</ordinal>
              <family>cleaned_parkrun.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>141106</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date (event_data.csv1)]</local-name>
              <parent-name>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>10</ordinal>
              <family>event_data.csv1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>825</approx-count>
              <contains-null>true</contains-null>
              <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total_event_runners</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Total_event_runners (event_data.csv1)]</local-name>
              <parent-name>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</parent-name>
              <remote-alias>Total_event_runners</remote-alias>
              <ordinal>11</ordinal>
              <family>event_data.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>360</approx-count>
              <contains-null>true</contains-null>
              <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature (event_data.csv1)]</local-name>
              <parent-name>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</parent-name>
              <remote-alias>temperature</remote-alias>
              <ordinal>12</ordinal>
              <family>event_data.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>257</approx-count>
              <contains-null>true</contains-null>
              <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>windspeed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[windspeed (event_data.csv1)]</local-name>
              <parent-name>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</parent-name>
              <remote-alias>windspeed</remote-alias>
              <ordinal>13</ordinal>
              <family>event_data.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>390</approx-count>
              <contains-null>true</contains-null>
              <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>precipitation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[precipitation (event_data.csv1)]</local-name>
              <parent-name>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</parent-name>
              <remote-alias>precipitation</remote-alias>
              <ordinal>14</ordinal>
              <family>event_data.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>29</approx-count>
              <contains-null>true</contains-null>
              <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ave_run_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ave_run_time (event_data.csv1)]</local-name>
              <parent-name>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</parent-name>
              <remote-alias>ave_run_time</remote-alias>
              <ordinal>15</ordinal>
              <family>event_data.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>825</approx-count>
              <contains-null>true</contains-null>
              <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>best_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[best_time (event_data.csv1)]</local-name>
              <parent-name>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</parent-name>
              <remote-alias>best_time</remote-alias>
              <ordinal>16</ordinal>
              <family>event_data.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
              <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>worst_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[worst_time (event_data.csv1)]</local-name>
              <parent-name>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</parent-name>
              <remote-alias>worst_time</remote-alias>
              <ordinal>17</ordinal>
              <family>event_data.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>633</approx-count>
              <contains-null>true</contains-null>
              <object-id>[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Runner_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Runner_id (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>Runner_id</remote-alias>
              <ordinal>18</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7519</approx-count>
              <contains-null>true</contains-null>
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>Name</remote-alias>
              <ordinal>19</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6682</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>20</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age_group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Age_group (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>Age_group</remote-alias>
              <ordinal>21</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Parkrun_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Parkrun_count (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>Parkrun_count</remote-alias>
              <ordinal>22</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>268</approx-count>
              <contains-null>true</contains-null>
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total_event_appearances</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total_event_appearances (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>Total_event_appearances</remote-alias>
              <ordinal>23</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>220</approx-count>
              <contains-null>true</contains-null>
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>first_event_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[first_event_date (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>first_event_date</remote-alias>
              <ordinal>24</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1049</approx-count>
              <contains-null>true</contains-null>
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>most_recent_event_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[most_recent_event_date (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>most_recent_event_date</remote-alias>
              <ordinal>25</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>981</approx-count>
              <contains-null>true</contains-null>
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PB_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[PB_date (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>PB_date</remote-alias>
              <ordinal>26</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>956</approx-count>
              <contains-null>true</contains-null>
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mean_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mean_time (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>mean_time</remote-alias>
              <ordinal>27</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3773</approx-count>
              <contains-null>true</contains-null>
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_time (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>median_time</remote-alias>
              <ordinal>28</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2312</approx-count>
              <contains-null>true</contains-null>
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>best_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[best_time (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>best_time</remote-alias>
              <ordinal>29</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1299</approx-count>
              <contains-null>true</contains-null>
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>worst_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[worst_time (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>worst_time</remote-alias>
              <ordinal>30</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1573</approx-count>
              <contains-null>true</contains-null>
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>first_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[first_time (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>first_time</remote-alias>
              <ordinal>31</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1468</approx-count>
              <contains-null>true</contains-null>
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>most_recent_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[most_recent_time (runner_stats.csv1)]</local-name>
              <parent-name>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</parent-name>
              <remote-alias>most_recent_time</remote-alias>
              <ordinal>32</ordinal>
              <family>runner_stats.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1445</approx-count>
              <contains-null>true</contains-null>
              <object-id>[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]</object-id>
            </metadata-record>
            <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>33</ordinal>
              <family>cleaned_parkrun_no_outliers.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3738</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
            </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
            <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
              <remote-name>Position</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Position]</local-name>
              <parent-name>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</parent-name>
              <remote-alias>Position</remote-alias>
              <ordinal>34</ordinal>
              <family>cleaned_parkrun_no_outliers.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1496</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
            </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
            <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
              <remote-name>Position_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Position_score]</local-name>
              <parent-name>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</parent-name>
              <remote-alias>Position_score</remote-alias>
              <ordinal>35</ordinal>
              <family>cleaned_parkrun_no_outliers.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>66044</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
            </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
            <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
              <remote-name>Runner_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Runner_id]</local-name>
              <parent-name>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</parent-name>
              <remote-alias>Runner_id</remote-alias>
              <ordinal>36</ordinal>
              <family>cleaned_parkrun_no_outliers.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8430</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
            </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
            <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
              <remote-name>Time_in_minutes</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Time_in_minutes]</local-name>
              <parent-name>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</parent-name>
              <remote-alias>Time_in_minutes</remote-alias>
              <ordinal>37</ordinal>
              <family>cleaned_parkrun_no_outliers.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4852</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
            </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
            <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
              <remote-name>Total_Appearances</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total_Appearances]</local-name>
              <parent-name>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</parent-name>
              <remote-alias>Total_Appearances</remote-alias>
              <ordinal>38</ordinal>
              <family>cleaned_parkrun_no_outliers.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>808</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
            </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
            <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
              <remote-name>Appearance_Instance</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Appearance_Instance]</local-name>
              <parent-name>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</parent-name>
              <remote-alias>Appearance_Instance</remote-alias>
              <ordinal>39</ordinal>
              <family>cleaned_parkrun_no_outliers.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1210</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
            </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
            <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
              <remote-name>Days_since_last_parkrun</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Days_since_last_parkrun]</local-name>
              <parent-name>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</parent-name>
              <remote-alias>Days_since_last_parkrun</remote-alias>
              <ordinal>40</ordinal>
              <family>cleaned_parkrun_no_outliers.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>548</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
            </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
            <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
              <remote-name>prev_run_time</remote-name>
              <remote-type>5</remote-type>
              <local-name>[prev_run_time]</local-name>
              <parent-name>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</parent-name>
              <remote-alias>prev_run_time</remote-alias>
              <ordinal>41</ordinal>
              <family>cleaned_parkrun_no_outliers.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5143</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
            </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
            <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
              <remote-name>prev_PB</remote-name>
              <remote-type>5</remote-type>
              <local-name>[prev_PB]</local-name>
              <parent-name>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</parent-name>
              <remote-alias>prev_PB</remote-alias>
              <ordinal>42</ordinal>
              <family>cleaned_parkrun_no_outliers.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4257</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
            </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
            <_.fcp.ObjectModelSharedDimensions.true...metadata-record class='column'>
              <remote-name>avg_prev_run_times</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_prev_run_times]</local-name>
              <parent-name>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</parent-name>
              <remote-alias>avg_prev_run_times</remote-alias>
              <ordinal>43</ordinal>
              <family>cleaned_parkrun_no_outliers.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>104557</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]</object-id>
            </_.fcp.ObjectModelSharedDimensions.true...metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Precipitation (Event Data.Csv1) (bin):ok]' type='palette'>
            <map to='#2a5783'>
              <bucket>7</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>5</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>4</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>3</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>2</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>1</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Age_group (runner_stats.csv1):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;55-59&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;18-19&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;35-39&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;60-64&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;40-44&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;20-24&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;45-49&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;65-69&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;50-54&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;25-29&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;70-74&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;30-34&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender (runner_stats.csv1):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date (event_data.csv1):ok]' type='palette'>
            <map to='#499894'>
              <bucket>2015</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2007</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2011</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2019</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2016</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2012</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2008</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2023</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2013</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2020</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2021</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2024</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2017</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2014</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2009</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2022</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2018</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2010</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04038vy13vqevb15babf610d55b3]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[Parameters].[Parameter 1]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.04038vy13vqevb15babf610d55b3].[avg:Calculation_2000724160689209353:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.04038vy13vqevb15babf610d55b3].[avg:current / previous (copy)_1901926444206120965:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04038vy13vqevb15babf610d55b3].[sum:precipitation (event_data.csv1):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Date (cleaned_parkrun.csv)' />
        <field-sort-custom-order field='Position (cleaned_parkrun.csv)' />
        <field-sort-custom-order field='Position_score (cleaned_parkrun.csv)' />
        <field-sort-custom-order field='Runner_id (cleaned_parkrun.csv)' />
        <field-sort-custom-order field='Runner id (cleaned parkrun.csv) (copy)_1901926444188585984' />
        <field-sort-custom-order field='Calculation_2000724160679550980' />
        <field-sort-custom-order field='Time_in_minutes (cleaned_parkrun.csv)' />
        <field-sort-custom-order field='Calculation_1901926444201914372' />
        <field-sort-custom-order field='Appearance_Instance (cleaned_parkrun.csv)' />
        <field-sort-custom-order field='Days_since_last_parkrun (cleaned_parkrun.csv)' />
        <field-sort-custom-order field='prev_run_time (cleaned_parkrun.csv)' />
        <field-sort-custom-order field='prev_PB (cleaned_parkrun.csv)' />
        <field-sort-custom-order field='avg_prev_run_times (cleaned_parkrun.csv)' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='cleaned_parkrun.csv' id='cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198'>
            <properties context=''>
              <relation connection='textscan.00wma8a1awugja174t3y80muj0oj' name='cleaned_parkrun.csv' table='[cleaned_parkrun#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Position' ordinal='1' />
                  <column datatype='real' name='Position_score' ordinal='2' />
                  <column datatype='string' name='Name' ordinal='3' />
                  <column datatype='integer' name='Runner_id' ordinal='4' />
                  <column datatype='integer' name='Parkrun_count' ordinal='5' />
                  <column datatype='string' name='Gender' ordinal='6' />
                  <column datatype='string' name='Age_group' ordinal='7' />
                  <column datatype='real' name='Time_in_minutes' ordinal='8' />
                  <column datatype='real' name='temperature' ordinal='9' />
                  <column datatype='real' name='windspeed' ordinal='10' />
                  <column datatype='real' name='precipitation' ordinal='11' />
                  <column datatype='integer' name='Total_Appearances' ordinal='12' />
                  <column datatype='integer' name='Appearance_Instance' ordinal='13' />
                  <column datatype='real' name='Days_since_last_parkrun' ordinal='14' />
                  <column datatype='integer' name='Total_event_runners' ordinal='15' />
                  <column datatype='real' name='PB_mins' ordinal='16' />
                  <column datatype='real' name='ave_mins' ordinal='17' />
                  <column datatype='real' name='prev_run_time' ordinal='18' />
                  <column datatype='real' name='prev_PB' ordinal='19' />
                  <column datatype='real' name='avg_prev_run_times' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198' table='[Extract].[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]' type='table' />
            </properties>
          </object>
          <_.fcp.ObjectModelSharedDimensions.true...object caption='cleaned_parkrun_no_outliers.csv' id='cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44'>
            <properties context=''>
              <relation connection='textscan.00wma8a1awugja174t3y80muj0oj' name='cleaned_parkrun_no_outliers.csv' table='[cleaned_parkrun_no_outliers#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Position' ordinal='1' />
                  <column datatype='real' name='Position_score' ordinal='2' />
                  <column datatype='string' name='Name' ordinal='3' />
                  <column datatype='integer' name='Runner_id' ordinal='4' />
                  <column datatype='integer' name='Parkrun_count' ordinal='5' />
                  <column datatype='string' name='Gender' ordinal='6' />
                  <column datatype='string' name='Age_group' ordinal='7' />
                  <column datatype='real' name='Time_in_minutes' ordinal='8' />
                  <column datatype='real' name='temperature' ordinal='9' />
                  <column datatype='real' name='windspeed' ordinal='10' />
                  <column datatype='real' name='precipitation' ordinal='11' />
                  <column datatype='integer' name='Total_Appearances' ordinal='12' />
                  <column datatype='integer' name='Appearance_Instance' ordinal='13' />
                  <column datatype='real' name='Days_since_last_parkrun' ordinal='14' />
                  <column datatype='integer' name='Total_event_runners' ordinal='15' />
                  <column datatype='real' name='PB_mins' ordinal='16' />
                  <column datatype='real' name='ave_mins' ordinal='17' />
                  <column datatype='real' name='prev_run_time' ordinal='18' />
                  <column datatype='real' name='prev_PB' ordinal='19' />
                  <column datatype='real' name='avg_prev_run_times' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44' table='[Extract].[cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44]' type='table' />
            </properties>
          </_.fcp.ObjectModelSharedDimensions.true...object>
          <object caption='event_data.csv1' id='event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65'>
            <properties context=''>
              <relation connection='textscan.00wma8a1awugja174t3y80muj0oj' name='event_data.csv1' table='[event_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='real' name='Total_event_runners' ordinal='1' />
                  <column datatype='real' name='temperature' ordinal='2' />
                  <column datatype='real' name='windspeed' ordinal='3' />
                  <column datatype='real' name='precipitation' ordinal='4' />
                  <column datatype='real' name='ave_run_time' ordinal='5' />
                  <column datatype='real' name='best_time' ordinal='6' />
                  <column datatype='real' name='worst_time' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65' table='[Extract].[event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65]' type='table' />
            </properties>
          </object>
          <object caption='runner_stats.csv1' id='runner_stats.csv_805616C17CC24EB5998A74FCF048CD72'>
            <properties context=''>
              <relation connection='textscan.00wma8a1awugja174t3y80muj0oj' name='runner_stats.csv1' table='[runner_stats#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='integer' name='Runner_id' ordinal='0' />
                  <column datatype='string' name='Name' ordinal='1' />
                  <column datatype='string' name='Gender' ordinal='2' />
                  <column datatype='string' name='Age_group' ordinal='3' />
                  <column datatype='integer' name='Parkrun_count' ordinal='4' />
                  <column datatype='integer' name='Total_event_appearances' ordinal='5' />
                  <column datatype='date' name='first_event_date' ordinal='6' />
                  <column datatype='date' name='most_recent_event_date' ordinal='7' />
                  <column datatype='date' name='PB_date' ordinal='8' />
                  <column datatype='real' name='mean_time' ordinal='9' />
                  <column datatype='real' name='median_time' ordinal='10' />
                  <column datatype='real' name='best_time' ordinal='11' />
                  <column datatype='real' name='worst_time' ordinal='12' />
                  <column datatype='real' name='first_time' ordinal='13' />
                  <column datatype='real' name='most_recent_time' ordinal='14' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='runner_stats.csv_805616C17CC24EB5998A74FCF048CD72' table='[Extract].[runner_stats.csv_805616C17CC24EB5998A74FCF048CD72]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Date (cleaned_parkrun.csv)]' />
              <expression op='[Date (event_data.csv1)]' />
            </expression>
            <first-end-point object-id='cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198' />
            <second-end-point object-id='event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65' />
          </relationship>
          <_.fcp.ObjectModelSharedDimensions.true...relationship>
            <expression op='='>
              <expression op='[Date]' />
              <expression op='[Date (event_data.csv1)]' />
            </expression>
            <first-end-point object-id='cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44' />
            <second-end-point object-id='event_data.csv_837E2AB4BFD947819DFC9DED35C5CB65' />
          </_.fcp.ObjectModelSharedDimensions.true...relationship>
          <relationship>
            <expression op='='>
              <expression op='[Runner_id (cleaned_parkrun.csv)]' />
              <expression op='[Runner_id (runner_stats.csv1)]' />
            </expression>
            <first-end-point object-id='cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198' />
            <second-end-point object-id='runner_stats.csv_805616C17CC24EB5998A74FCF048CD72' />
          </relationship>
          <_.fcp.ObjectModelSharedDimensions.true...relationship>
            <expression op='='>
              <expression op='[Runner_id]' />
              <expression op='[Runner_id (runner_stats.csv1)]' />
            </expression>
            <first-end-point object-id='cleaned_parkrun_no_outliers.csv_9A8D87E07CA5499CAE17DA6B0C7F2B44' />
            <second-end-point object-id='runner_stats.csv_805616C17CC24EB5998A74FCF048CD72' />
          </_.fcp.ObjectModelSharedDimensions.true...relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Avg. Time by appearance (age) '>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Appearance Instance' datatype='integer' name='[Appearance_Instance]' role='dimension' type='ordinal' />
            <column caption='Count' datatype='integer' name='[Calculation_2000724160678371330]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([Runner_id])' />
            </column>
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Runner id' datatype='integer' name='[Runner_id]' role='dimension' type='ordinal' />
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column-instance column='[Time_in_minutes]' derivation='Avg' name='[avg:Time_in_minutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Appearance_Instance]' derivation='None' name='[none:Appearance_Instance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2000724160678371330]' derivation='User' name='[usr:Calculation_2000724160678371330:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;25-29&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;30-34&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;35-39&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;40-44&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;45-49&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;50-54&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;55-59&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;60-64&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]'>
            <groupfilter function='member' level='[none:Gender (runner_stats.csv1):nk]' member='&quot;Male&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160678371330:qk]' included-values='in-range'>
            <min>0</min>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160678371330:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04038vy13vqevb15babf610d55b3].[none:Appearance_Instance:qk]' field-type='quantitative' max='102' min='0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.04038vy13vqevb15babf610d55b3].[avg:Time_in_minutes:qk]' field-type='quantitative' max='32.550012892888518' min='20.226388349260905' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[avg:Time_in_minutes:qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Appearance_Instance:qk]</cols>
      </table>
      <simple-id uuid='{B800EEE2-D5ED-437B-86CA-5F5076CF4A2A}' />
    </worksheet>
    <worksheet name='Avg. Time by appearance (age) (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Appearance Instance' datatype='integer' name='[Appearance_Instance]' role='dimension' type='ordinal' />
            <column caption='Runner Count' datatype='integer' name='[Calculation_2000724160694947850]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([Runner_id])' />
            </column>
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Runner id' datatype='integer' name='[Runner_id]' role='dimension' type='ordinal' />
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column-instance column='[Time_in_minutes]' derivation='Avg' name='[avg:Time_in_minutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Appearance_Instance]' derivation='None' name='[none:Appearance_Instance:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2000724160694947850]' derivation='User' name='[usr:Calculation_2000724160694947850:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;25-29&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;30-34&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;35-39&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;40-44&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160694947850:qk]' included-values='in-range'>
            <min>50</min>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160694947850:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:Time_in_minutes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[none:Appearance_Instance:ok]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</cols>
      </table>
      <simple-id uuid='{B3EE56F1-C840-461C-BEC2-A1BE719FDD06}' />
    </worksheet>
    <worksheet name='Avg. Time by appearance (gender)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Appearance Instance' datatype='integer' name='[Appearance_Instance]' role='dimension' type='ordinal' />
            <column caption='Count' datatype='integer' name='[Calculation_2000724160678371330]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([Runner_id])' />
            </column>
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Runner id' datatype='integer' name='[Runner_id]' role='dimension' type='ordinal' />
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column-instance column='[Time_in_minutes]' derivation='Avg' name='[avg:Time_in_minutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Appearance_Instance]' derivation='None' name='[none:Appearance_Instance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2000724160678371330]' derivation='User' name='[usr:Calculation_2000724160678371330:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;25-29&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;30-34&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;35-39&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;40-44&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Gender (runner_stats.csv1):nk]' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160678371330:qk]' included-values='in-range'>
            <min>20</min>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160678371330:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04038vy13vqevb15babf610d55b3].[none:Appearance_Instance:qk]' field-type='quantitative' max='102' min='0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.04038vy13vqevb15babf610d55b3].[avg:Time_in_minutes:qk]' field-type='quantitative' max='34.668491788558335' min='13.5292615177886' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[avg:Time_in_minutes:qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Appearance_Instance:qk]</cols>
      </table>
      <simple-id uuid='{22AAE0D4-499C-497A-A0CA-A1E21B76CBA2}' />
    </worksheet>
    <worksheet name='Change vs previous by appearances'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column aggregation='Sum' caption='Appearance Instance' datatype='integer' name='[Appearance_Instance]' role='dimension' type='ordinal' />
            <column caption='Count' datatype='integer' name='[Calculation_2000724160678371330]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([Runner_id])' />
            </column>
            <column caption='current / previous' datatype='real' name='[Calculation_2000724160689209353]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Time_in_minutes]/[prev_run_time]' />
            </column>
            <column caption='Runner id' datatype='integer' name='[Runner_id]' role='dimension' type='ordinal' />
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2000724160689209353]' derivation='Avg' name='[avg:Calculation_2000724160689209353:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Appearance_Instance]' derivation='None' name='[none:Appearance_Instance:qk]' pivot='key' type='quantitative' />
            <column caption='Prev Run Time' datatype='real' name='[prev_run_time]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2000724160678371330]' derivation='User' name='[usr:Calculation_2000724160678371330:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160678371330:qk]' included-values='in-range'>
            <min>100</min>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160678371330:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04038vy13vqevb15babf610d55b3].[none:Appearance_Instance:qk]' field-type='quantitative' max='238' min='0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.04038vy13vqevb15babf610d55b3].[avg:Calculation_2000724160689209353:qk]' field-type='quantitative' max='1.0135610997432523' min='0.97376640912006207' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[avg:Calculation_2000724160689209353:qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Appearance_Instance:qk]</cols>
      </table>
      <simple-id uuid='{E7F67ED1-8CA4-4B89-B00E-DD76F1F50616}' />
    </worksheet>
    <worksheet name='Improvement by days since last run (exc. outliers))'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Weeks since last parkrun' datatype='real' name='[Calculation_1901926444206850054]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Days_since_last_parkrun]/7' />
            </column>
            <column caption='current / previous' datatype='real' name='[Calculation_2000724160689209353]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Time_in_minutes]/[prev_run_time]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Days since last parkrun' datatype='real' name='[Days_since_last_parkrun]' role='measure' type='quantitative' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Weeks since last parkrun (bin)' datatype='integer' name='[Weeks since last parkrun (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_1901926444206850054]' peg='0' size='1' />
            </column>
            <column-instance column='[Calculation_2000724160689209353]' derivation='Avg' name='[avg:Calculation_2000724160689209353:qk]' pivot='key' type='quantitative' />
            <column-instance column='[current / previous (copy)_1901926444206120965]' derivation='Avg' name='[avg:current / previous (copy)_1901926444206120965:qk]' pivot='key' type='quantitative' />
            <column caption='Change vs Previous' datatype='real' name='[current / previous (copy)_1901926444206120965]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Time_in_minutes]/[prev_run_time])-1' />
            </column>
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1901926444206850054]' derivation='None' name='[none:Calculation_1901926444206850054:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Weeks since last parkrun (bin)]' derivation='None' name='[none:Weeks since last parkrun (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[prev_run_time]' derivation='None' name='[none:prev_run_time:qk]' pivot='key' type='quantitative' />
            <column caption='Prev Run Time' datatype='real' name='[prev_run_time]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Age_group (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_1901926444206850054:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>20.0</max>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Gender (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' included-values='all' />
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_1901926444206850054:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.04038vy13vqevb15babf610d55b3].[avg:Calculation_2000724160689209353:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:Calculation_2000724160689209353:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk] * [federated.04038vy13vqevb15babf610d55b3].[avg:current / previous (copy)_1901926444206120965:qk])</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Weeks since last parkrun (bin):ok]</cols>
        <show-full-range>
          <column>[federated.04038vy13vqevb15babf610d55b3].[Weeks since last parkrun (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{56F45223-8EC1-4E34-8A2D-D5761D46B946}' />
    </worksheet>
    <worksheet name='Improvement by days since last run (exc. outliers)) (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Weeks since last parkrun' datatype='real' name='[Calculation_1901926444206850054]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Days_since_last_parkrun]/7' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Days since last parkrun' datatype='real' name='[Days_since_last_parkrun]' role='measure' type='quantitative' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Weeks since last parkrun (bin)' datatype='integer' name='[Weeks since last parkrun (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_1901926444206850054]' peg='0' size='1' />
            </column>
            <column-instance column='[current / previous (copy)_1901926444206120965]' derivation='Avg' name='[avg:current / previous (copy)_1901926444206120965:qk]' pivot='key' type='quantitative' />
            <column caption='Change vs Previous' datatype='real' name='[current / previous (copy)_1901926444206120965]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Time_in_minutes]/[prev_run_time])-1' />
            </column>
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1901926444206850054]' derivation='None' name='[none:Calculation_1901926444206850054:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Weeks since last parkrun (bin)]' derivation='None' name='[none:Weeks since last parkrun (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[prev_run_time]' derivation='None' name='[none:prev_run_time:qk]' pivot='key' type='quantitative' />
            <column caption='Prev Run Time' datatype='real' name='[prev_run_time]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Age_group (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_1901926444206850054:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>20.0</max>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Gender (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' included-values='all' />
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_1901926444206850054:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:current / previous (copy)_1901926444206120965:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[none:Weeks since last parkrun (bin):ok]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</cols>
        <show-full-range>
          <column>[federated.04038vy13vqevb15babf610d55b3].[Weeks since last parkrun (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{9B7E45BA-AE8A-4E37-B5BD-0B416881A2AD}' />
    </worksheet>
    <worksheet name='Improvement by precip (exc. outliers)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Precipitation (Event Data.Csv1) (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[precipitation (event_data.csv1)]' new-bin='true'>
                <bin default-name='true' value='&quot;0&quot;'>
                  <value>0.0</value>
                </bin>
                <bin default-name='false' value='&quot;0.1-0.4&quot;'>
                  <value>0.10000000000000001</value>
                  <value>0.10000000000000002</value>
                  <value>0.20000000000000001</value>
                  <value>0.20000000000000004</value>
                  <value>0.29999999999999999</value>
                  <value>0.40000000000000002</value>
                </bin>
                <bin default-name='false' value='&quot;0.1-0.9&quot;'>
                  <value>0.5</value>
                  <value>0.59999999999999998</value>
                  <value>0.69999999999999984</value>
                  <value>0.69999999999999996</value>
                  <value>0.80000000000000004</value>
                  <value>0.80000000000000016</value>
                  <value>0.90000000000000002</value>
                  <value>0.90000000000000013</value>
                </bin>
                <bin default-name='false' value='&quot;1.0-1.4&quot;'>
                  <value>1.0</value>
                  <value>1.1000000000000001</value>
                  <value>1.2</value>
                  <value>1.3</value>
                  <value>1.3999999999999999</value>
                </bin>
                <bin default-name='false' value='&quot;1.5-1.9&quot;'>
                  <value>1.5</value>
                  <value>1.6000000000000001</value>
                  <value>1.7</value>
                </bin>
                <bin default-name='false' value='&quot;2.0-2.4&quot;'>
                  <value>2.2000000000000002</value>
                  <value>2.2999999999999998</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;2.5+&quot;'>
                  <value>2.7000000000000006</value>
                  <value>2.7999999999999998</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column-instance column='[current / previous (copy)_1901926444206120965]' derivation='Avg' name='[avg:current / previous (copy)_1901926444206120965:qk]' pivot='key' type='quantitative' />
            <column caption='Change vs Previous' datatype='real' name='[current / previous (copy)_1901926444206120965]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Time_in_minutes]/[prev_run_time])-1' />
            </column>
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[prev_run_time]' derivation='None' name='[none:prev_run_time:qk]' pivot='key' type='quantitative' />
            <column caption='Precipitation (Event Data.Csv1)' datatype='real' name='[precipitation (event_data.csv1)]' role='measure' type='quantitative' />
            <column caption='Prev Run Time' datatype='real' name='[prev_run_time]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Age_group (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Gender (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' included-values='in-range-or-null'>
            <min>16.0</min>
            <max>40.0</max>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2009' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2010' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2022' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2023' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:current / previous (copy)_1901926444206120965:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[Precipitation (Event Data.Csv1) (group)]</rows>
        <cols />
      </table>
      <simple-id uuid='{9FE03E4D-BFCA-4E57-9D9D-F3EA90C96695}' />
    </worksheet>
    <worksheet name='Improvement by prev run time (exc. outliers) (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Prev Run Time (bin)' datatype='integer' name='[Prev Run Time (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[prev_run_time]' peg='0' size='1' />
            </column>
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column-instance column='[current / previous (copy)_1901926444206120965]' derivation='Avg' name='[avg:current / previous (copy)_1901926444206120965:qk]' pivot='key' type='quantitative' />
            <column caption='Change vs Previous' datatype='real' name='[current / previous (copy)_1901926444206120965]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Time_in_minutes]/[prev_run_time])-1' />
            </column>
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Prev Run Time (bin)]' derivation='None' name='[none:Prev Run Time (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[prev_run_time]' derivation='None' name='[none:prev_run_time:qk]' pivot='key' type='quantitative' />
            <column caption='Prev Run Time' datatype='real' name='[prev_run_time]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Age_group (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Gender (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' included-values='in-range-or-null'>
            <min>16.0</min>
            <max>40.0</max>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2009' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2010' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2022' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2023' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok]' />
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:current / previous (copy)_1901926444206120965:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk] * [federated.04038vy13vqevb15babf610d55b3].[avg:current / previous (copy)_1901926444206120965:qk])</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok]</cols>
      </table>
      <simple-id uuid='{3AC46F8F-3E4F-4E23-9D84-DA54ACC45D22}' />
    </worksheet>
    <worksheet name='Improvement by prev run time (exc. outliers))'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Weeks since last parkrun' datatype='real' name='[Calculation_1901926444206850054]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Days_since_last_parkrun]/7' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Days since last parkrun' datatype='real' name='[Days_since_last_parkrun]' role='measure' type='quantitative' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Prev Run Time (bin)' datatype='integer' name='[Prev Run Time (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[prev_run_time]' peg='0' size='1' />
            </column>
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column-instance column='[current / previous (copy)_1901926444206120965]' derivation='Avg' name='[avg:current / previous (copy)_1901926444206120965:qk]' pivot='key' type='quantitative' />
            <column caption='Change vs Previous' datatype='real' name='[current / previous (copy)_1901926444206120965]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Time_in_minutes]/[prev_run_time])-1' />
            </column>
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1901926444206850054]' derivation='None' name='[none:Calculation_1901926444206850054:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Prev Run Time (bin)]' derivation='None' name='[none:Prev Run Time (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[prev_run_time]' derivation='None' name='[none:prev_run_time:qk]' pivot='key' type='quantitative' />
            <column caption='Prev Run Time' datatype='real' name='[prev_run_time]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Age_group (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_1901926444206850054:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>20.0</max>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Gender (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' included-values='in-range-or-null'>
            <min>17.0</min>
            <max>40.0</max>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_1901926444206850054:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:current / previous (copy)_1901926444206120965:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</cols>
        <show-full-range>
          <column>[federated.04038vy13vqevb15babf610d55b3].[Weeks since last parkrun (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{7468C558-92EB-43AA-BD66-298895C303CA}' />
    </worksheet>
    <worksheet name='Improvement by previous time'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Time index' datatype='real' name='[Calculation_1901926444201914372]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Time_in_minutes (cleaned_parkrun.csv)]/[prev_run_time (cleaned_parkrun.csv)]' />
            </column>
            <column aggregation='None' caption='Prev Run Time (Cleaned Parkrun.Csv) (bin)' datatype='integer' name='[Prev Run Time (Cleaned Parkrun.Csv) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[prev_run_time (cleaned_parkrun.csv)]' peg='0' size='1' />
            </column>
            <column caption='Time in minutes (cleaned parkrun.csv)' datatype='real' name='[Time_in_minutes (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Prev Run Time (Cleaned Parkrun.Csv) (bin)]' derivation='None' name='[none:Prev Run Time (Cleaned Parkrun.Csv) (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Prev Run Time (Cleaned Parkrun.Csv)' datatype='real' name='[prev_run_time (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1901926444201914372]' derivation='Sum' name='[sum:Calculation_1901926444201914372:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.04038vy13vqevb15babf610d55b3].[sum:Calculation_1901926444201914372:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.04038vy13vqevb15babf610d55b3].[sum:Calculation_1901926444201914372:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[sum:Calculation_1901926444201914372:qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (Cleaned Parkrun.Csv) (bin):ok]</cols>
        <show-full-range>
          <column>[federated.04038vy13vqevb15babf610d55b3].[Prev Run Time (Cleaned Parkrun.Csv) (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{5EA429B3-070C-4CEB-8B30-9679908BDBFD}' />
    </worksheet>
    <worksheet name='Improvement by previous time (exc. outliers)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='current / previous' datatype='real' name='[Calculation_2000724160689209353]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Time_in_minutes]/[prev_run_time]' />
            </column>
            <column aggregation='None' caption='Prev Run Time (bin)' datatype='integer' name='[Prev Run Time (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[prev_run_time]' peg='0' size='1' />
            </column>
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column-instance column='[Prev Run Time (bin)]' derivation='None' name='[none:Prev Run Time (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[prev_run_time]' derivation='None' name='[none:prev_run_time:qk]' pivot='key' type='quantitative' />
            <column caption='Prev Run Time' datatype='real' name='[prev_run_time]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2000724160689209353]' derivation='Sum' name='[sum:Calculation_2000724160689209353:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' included-values='in-range'>
            <min>14.85</min>
            <max>39.990000000000002</max>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04038vy13vqevb15babf610d55b3].[sum:Calculation_2000724160689209353:qk]' field-type='quantitative' max='1.9009530028742094' min='0.4474550914457755' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.04038vy13vqevb15babf610d55b3].[sum:Calculation_2000724160689209353:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.04038vy13vqevb15babf610d55b3].[sum:Calculation_2000724160689209353:qk]' z-order='1' />
            <reference-line axis-column='[federated.04038vy13vqevb15babf610d55b3].[sum:Calculation_2000724160689209353:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[sum:Calculation_2000724160689209353:qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok]</cols>
      </table>
      <simple-id uuid='{FC8376BB-456E-4845-B34B-76754B9B26A9}' />
    </worksheet>
    <worksheet name='Improvement by previous time (exc. outliers) (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='current / previous' datatype='real' name='[Calculation_2000724160689209353]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Time_in_minutes]/[prev_run_time]' />
            </column>
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Prev Run Time (bin)' datatype='integer' name='[Prev Run Time (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[prev_run_time]' peg='0' size='1' />
            </column>
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2000724160689209353]' derivation='Avg' name='[avg:Calculation_2000724160689209353:qk]' pivot='key' type='quantitative' />
            <column-instance column='[current / previous (copy)_1901926444206120965]' derivation='Avg' name='[avg:current / previous (copy)_1901926444206120965:qk]' pivot='key' type='quantitative' />
            <column caption='Change vs Previous' datatype='real' name='[current / previous (copy)_1901926444206120965]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Time_in_minutes]/[prev_run_time])-1' />
            </column>
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Prev Run Time (bin)]' derivation='None' name='[none:Prev Run Time (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[prev_run_time]' derivation='None' name='[none:prev_run_time:qk]' pivot='key' type='quantitative' />
            <column caption='Prev Run Time' datatype='real' name='[prev_run_time]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;20-24&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;25-29&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;30-34&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;35-39&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;40-44&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Gender (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' included-values='in-range'>
            <min>18.0</min>
            <max>39.990000000000002</max>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.04038vy13vqevb15babf610d55b3].[avg:Calculation_2000724160689209353:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' />
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:Calculation_2000724160689209353:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[avg:current / previous (copy)_1901926444206120965:qk]</rows>
        <cols>([federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok] / [federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk])</cols>
      </table>
      <simple-id uuid='{DF1F9DB1-F1FF-42E8-B5F5-B5300B10EF57}' />
    </worksheet>
    <worksheet name='Improvement by temp (exc. outliers)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Temperature (Event Data.Csv1) (bin)' datatype='integer' name='[Temperature (Event Data.Csv1) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[temperature (event_data.csv1)]' peg='0' size='5' />
            </column>
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column-instance column='[current / previous (copy)_1901926444206120965]' derivation='Avg' name='[avg:current / previous (copy)_1901926444206120965:qk]' pivot='key' type='quantitative' />
            <column caption='Change vs Previous' datatype='real' name='[current / previous (copy)_1901926444206120965]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Time_in_minutes]/[prev_run_time])-1' />
            </column>
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Temperature (Event Data.Csv1) (bin)]' derivation='None' name='[none:Temperature (Event Data.Csv1) (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[prev_run_time]' derivation='None' name='[none:prev_run_time:qk]' pivot='key' type='quantitative' />
            <column caption='Prev Run Time' datatype='real' name='[prev_run_time]' role='measure' type='quantitative' />
            <column caption='Temperature (Event Data.Csv1)' datatype='real' name='[temperature (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Age_group (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Gender (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' included-values='in-range-or-null'>
            <min>16.0</min>
            <max>82.230000000000004</max>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2009' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2010' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2022' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2023' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:current / previous (copy)_1901926444206120965:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[avg:current / previous (copy)_1901926444206120965:qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Temperature (Event Data.Csv1) (bin):ok]</cols>
      </table>
      <simple-id uuid='{F96B2005-E5A6-49B5-8858-6582D31FC2C5}' />
    </worksheet>
    <worksheet name='Improvement by wind (exc. outliers)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Windspeed (Event Data.Csv1) (bin)' datatype='integer' name='[Windspeed (Event Data.Csv1) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[windspeed (event_data.csv1)]' peg='0' size='10' />
            </column>
            <column-instance column='[current / previous (copy)_1901926444206120965]' derivation='Avg' name='[avg:current / previous (copy)_1901926444206120965:qk]' pivot='key' type='quantitative' />
            <column caption='Change vs Previous' datatype='real' name='[current / previous (copy)_1901926444206120965]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Time_in_minutes]/[prev_run_time])-1' />
            </column>
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Windspeed (Event Data.Csv1) (bin)]' derivation='None' name='[none:Windspeed (Event Data.Csv1) (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[prev_run_time]' derivation='None' name='[none:prev_run_time:qk]' pivot='key' type='quantitative' />
            <column caption='Prev Run Time' datatype='real' name='[prev_run_time]' role='measure' type='quantitative' />
            <column caption='Windspeed (Event Data.Csv1)' datatype='real' name='[windspeed (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Age_group (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Gender (runner_stats.csv1):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' included-values='in-range-or-null'>
            <min>16.0</min>
            <max>40.0</max>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2009' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2010' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2022' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2023' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:current / previous (copy)_1901926444206120965:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[avg:current / previous (copy)_1901926444206120965:qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Windspeed (Event Data.Csv1) (bin):ok]</cols>
      </table>
      <simple-id uuid='{A934FAB9-2975-4AC7-A0B2-727BB8D30F27}' />
    </worksheet>
    <worksheet name='Participants'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Date (event data.csv1)' datatype='date' name='[Date (event_data.csv1)]' role='dimension' type='ordinal' />
            <column caption='Total event runners (event data.csv1)' datatype='real' name='[Total_event_runners (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Total_event_runners (event_data.csv1)]' derivation='Avg' name='[avg:Total_event_runners (event_data.csv1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date (event_data.csv1)]' derivation='Quarter-Trunc' name='[tqr:Date (event_data.csv1):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[avg:Total_event_runners (event_data.csv1):qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[tqr:Date (event_data.csv1):qk]</cols>
        <show-full-range>
          <column>[federated.04038vy13vqevb15babf610d55b3].[Precipitation (Event Data.Csv1) (bin)]</column>
          <column>[federated.04038vy13vqevb15babf610d55b3].[Temperature (Event Data.Csv1) (bin)]</column>
          <column>[federated.04038vy13vqevb15babf610d55b3].[Windspeed (Event Data.Csv1) (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{7252B2D9-D6F1-4B14-83BF-5B6DB831ED0F}' />
    </worksheet>
    <worksheet name='Participants by Age-Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Distinct Runners' datatype='integer' name='[Calculation_2000724160679550980]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Runner_id (cleaned_parkrun.csv)])' />
            </column>
            <column caption='Date (cleaned parkrun.csv)' datatype='date' name='[Date (cleaned_parkrun.csv)]' role='dimension' type='ordinal' />
            <column caption='Runner id (cleaned parkrun.csv)' datatype='integer' name='[Runner_id (cleaned_parkrun.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Date (cleaned_parkrun.csv)]' derivation='None' name='[none:Date (cleaned_parkrun.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2000724160679550980]' derivation='User' name='[pcto:usr:Calculation_2000724160679550980:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_2000724160679550980]' derivation='User' name='[pcto:usr:Calculation_2000724160679550980:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date (cleaned_parkrun.csv)]' derivation='Year-Trunc' name='[tyr:Date (cleaned_parkrun.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <natural-sort column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' direction='DESC' />
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]' included-values='in-range'>
            <min>#2007-11-10#</min>
            <max>#2024-12-07#</max>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' data-class='subtotal' field='[federated.04038vy13vqevb15babf610d55b3].[pcto:usr:Calculation_2000724160679550980:qk:2]' value='p0%' />
            <format attr='text-format' field='[federated.04038vy13vqevb15babf610d55b3].[pcto:usr:Calculation_2000724160679550980:qk:4]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.04038vy13vqevb15babf610d55b3].[pcto:usr:Calculation_2000724160679550980:qk:4]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' />
              <text column='[federated.04038vy13vqevb15babf610d55b3].[pcto:usr:Calculation_2000724160679550980:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[pcto:usr:Calculation_2000724160679550980:qk:2]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[tyr:Date (cleaned_parkrun.csv):qk]</cols>
      </table>
      <simple-id uuid='{0E890182-1006-4289-AEC5-B1FDD03D3E2F}' />
    </worksheet>
    <worksheet name='Participants by Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Distinct Runners' datatype='integer' name='[Calculation_2000724160679550980]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Runner_id (cleaned_parkrun.csv)])' />
            </column>
            <column caption='Date (cleaned parkrun.csv)' datatype='date' name='[Date (cleaned_parkrun.csv)]' role='dimension' type='ordinal' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Runner id (cleaned parkrun.csv)' datatype='integer' name='[Runner_id (cleaned_parkrun.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Date (cleaned_parkrun.csv)]' derivation='None' name='[none:Date (cleaned_parkrun.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2000724160679550980]' derivation='User' name='[pcto:usr:Calculation_2000724160679550980:qk:13]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date (cleaned_parkrun.csv)]' derivation='Year-Trunc' name='[tyr:Date (cleaned_parkrun.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2000724160679550980]' derivation='User' name='[usr:Calculation_2000724160679550980:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]' included-values='in-range'>
            <min>#2007-11-10#</min>
            <max>#2024-12-07#</max>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.04038vy13vqevb15babf610d55b3].[pcto:usr:Calculation_2000724160679550980:qk:13]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' />
              <text column='[federated.04038vy13vqevb15babf610d55b3].[pcto:usr:Calculation_2000724160679550980:qk:13]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160679550980:qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[tyr:Date (cleaned_parkrun.csv):ok]</cols>
      </table>
      <simple-id uuid='{CF176981-A318-4D74-B10E-343552754AE7}' />
    </worksheet>
    <worksheet name='Participants by precipitation'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Date (cleaned parkrun.csv)' datatype='date' name='[Date (cleaned_parkrun.csv)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Precipitation (Event Data.Csv1) (group)]' role='dimension' type='ordinal'>
              <calculation class='categorical-bin' column='[precipitation (event_data.csv1)]' new-bin='true'>
                <bin default-name='true' value='&quot;0&quot;'>
                  <value>0.0</value>
                </bin>
                <bin default-name='false' value='&quot;0.1-0.4&quot;'>
                  <value>0.10000000000000001</value>
                  <value>0.10000000000000002</value>
                  <value>0.20000000000000001</value>
                  <value>0.20000000000000004</value>
                  <value>0.29999999999999999</value>
                  <value>0.40000000000000002</value>
                </bin>
                <bin default-name='false' value='&quot;0.1-0.9&quot;'>
                  <value>0.5</value>
                  <value>0.59999999999999998</value>
                  <value>0.69999999999999984</value>
                  <value>0.69999999999999996</value>
                  <value>0.80000000000000004</value>
                  <value>0.80000000000000016</value>
                  <value>0.90000000000000002</value>
                  <value>0.90000000000000013</value>
                </bin>
                <bin default-name='false' value='&quot;1.0-1.4&quot;'>
                  <value>1.0</value>
                  <value>1.1000000000000001</value>
                  <value>1.2</value>
                  <value>1.3</value>
                  <value>1.3999999999999999</value>
                </bin>
                <bin default-name='false' value='&quot;1.5-1.9&quot;'>
                  <value>1.5</value>
                  <value>1.6000000000000001</value>
                  <value>1.7</value>
                </bin>
                <bin default-name='false' value='&quot;2.0-2.4&quot;'>
                  <value>2.2000000000000002</value>
                  <value>2.2999999999999998</value>
                  <value>2.5</value>
                </bin>
                <bin default-name='false' value='&quot;2.5+&quot;'>
                  <value>2.7000000000000006</value>
                  <value>2.7999999999999998</value>
                  <value>3.5</value>
                </bin>
              </calculation>
            </column>
            <column caption='Total event runners (event data.csv1)' datatype='real' name='[Total_event_runners (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Total_event_runners (event_data.csv1)]' derivation='Avg' name='[avg:Total_event_runners (event_data.csv1):qk]' pivot='key' type='quantitative' />
            <column caption='Precipitation (Event Data.Csv1)' datatype='real' name='[precipitation (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Date (cleaned_parkrun.csv)]' derivation='Year' name='[yr:Date (cleaned_parkrun.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date (cleaned_parkrun.csv):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date (cleaned_parkrun.csv):ok]' member='2014' />
              <groupfilter function='member' level='[yr:Date (cleaned_parkrun.csv):ok]' member='2015' />
              <groupfilter function='member' level='[yr:Date (cleaned_parkrun.csv):ok]' member='2016' />
              <groupfilter function='member' level='[yr:Date (cleaned_parkrun.csv):ok]' member='2017' />
              <groupfilter function='member' level='[yr:Date (cleaned_parkrun.csv):ok]' member='2018' />
              <groupfilter function='member' level='[yr:Date (cleaned_parkrun.csv):ok]' member='2019' />
              <groupfilter function='member' level='[yr:Date (cleaned_parkrun.csv):ok]' member='2020' />
              <groupfilter function='member' level='[yr:Date (cleaned_parkrun.csv):ok]' member='2021' />
              <groupfilter function='member' level='[yr:Date (cleaned_parkrun.csv):ok]' member='2022' />
              <groupfilter function='member' level='[yr:Date (cleaned_parkrun.csv):ok]' member='2023' />
              <groupfilter function='member' level='[yr:Date (cleaned_parkrun.csv):ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (cleaned_parkrun.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:Total_event_runners (event_data.csv1):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[avg:Total_event_runners (event_data.csv1):qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[Precipitation (Event Data.Csv1) (group)]</cols>
      </table>
      <simple-id uuid='{A416F250-5B0F-49CE-9B86-88149AE4A1E4}' />
    </worksheet>
    <worksheet name='Participants by temperature'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Date (event data.csv1)' datatype='date' name='[Date (event_data.csv1)]' role='dimension' type='ordinal' />
            <column aggregation='None' caption='Temperature (Event Data.Csv1) (bin)' datatype='integer' name='[Temperature (Event Data.Csv1) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[temperature (event_data.csv1)]' peg='0' size='5' />
            </column>
            <column caption='Total event runners (event data.csv1)' datatype='real' name='[Total_event_runners (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Total_event_runners (event_data.csv1)]' derivation='Avg' name='[avg:Total_event_runners (event_data.csv1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Temperature (Event Data.Csv1) (bin)]' derivation='None' name='[none:Temperature (Event Data.Csv1) (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Temperature (Event Data.Csv1)' datatype='real' name='[temperature (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Date (event_data.csv1)]' derivation='Year' name='[yr:Date (event_data.csv1):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2014' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2015' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2016' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2017' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2018' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2019' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2020' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2021' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2022' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2023' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04038vy13vqevb15babf610d55b3].[none:Temperature (Event Data.Csv1) (bin):ok]' />
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:Total_event_runners (event_data.csv1):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[avg:Total_event_runners (event_data.csv1):qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Temperature (Event Data.Csv1) (bin):ok]</cols>
      </table>
      <simple-id uuid='{1E6FE7C1-17EE-4920-8B58-388C7617D7D4}' />
    </worksheet>
    <worksheet name='Participants by wind speed'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Date (event data.csv1)' datatype='date' name='[Date (event_data.csv1)]' role='dimension' type='ordinal' />
            <column caption='Total event runners (event data.csv1)' datatype='real' name='[Total_event_runners (event_data.csv1)]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Windspeed (Event Data.Csv1) (bin)' datatype='integer' name='[Windspeed (Event Data.Csv1) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[windspeed (event_data.csv1)]' peg='0' size='10' />
            </column>
            <column-instance column='[Total_event_runners (event_data.csv1)]' derivation='Avg' name='[avg:Total_event_runners (event_data.csv1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Windspeed (Event Data.Csv1) (bin)]' derivation='None' name='[none:Windspeed (Event Data.Csv1) (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Windspeed (Event Data.Csv1)' datatype='real' name='[windspeed (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Date (event_data.csv1)]' derivation='Year' name='[yr:Date (event_data.csv1):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2014' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2015' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2016' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2017' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2018' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2019' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2020' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2021' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2022' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2023' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:Total_event_runners (event_data.csv1):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[avg:Total_event_runners (event_data.csv1):qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Windspeed (Event Data.Csv1) (bin):ok]</cols>
      </table>
      <simple-id uuid='{B2A1E39E-B92D-4DC3-BB09-5ECF0FFE14CE}' />
    </worksheet>
    <worksheet name='Previous vs Next time'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Time in minutes' datatype='real' name='[Time_in_minutes]' role='measure' type='quantitative' />
            <column-instance column='[Time_in_minutes]' derivation='Avg' name='[avg:Time_in_minutes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_prev_run_times]' derivation='Avg' name='[avg:avg_prev_run_times:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Prev Run Times' datatype='real' name='[avg_prev_run_times]' role='measure' type='quantitative' />
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='2009' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2010' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2022' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2023' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' />
              <shape column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' />
              <lod column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[avg:avg_prev_run_times:qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[avg:Time_in_minutes:qk]</cols>
      </table>
      <simple-id uuid='{0780D8A4-2FA2-4B1F-80C9-A01C801A50F3}' />
    </worksheet>
    <worksheet name='Runner summary chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column-instance column='[mean_time (runner_stats.csv1)]' derivation='Avg' name='[avg:mean_time (runner_stats.csv1):qk]' pivot='key' type='quantitative' />
            <column caption='Mean Time (Runner Stats.Csv1)' datatype='real' name='[mean_time (runner_stats.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' />
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:mean_time (runner_stats.csv1):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[avg:mean_time (runner_stats.csv1):qk]</rows>
        <cols>([federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk] / [federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk])</cols>
      </table>
      <simple-id uuid='{5E2C02F3-620D-4990-A772-35C612557CA4}' />
    </worksheet>
    <worksheet name='Runner summary table'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column-instance column='[mean_time (runner_stats.csv1)]' derivation='Avg' name='[avg:mean_time (runner_stats.csv1):qk]' pivot='key' type='quantitative' />
            <column caption='Mean Time (Runner Stats.Csv1)' datatype='real' name='[mean_time (runner_stats.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04038vy13vqevb15babf610d55b3].[avg:mean_time (runner_stats.csv1):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</cols>
      </table>
      <simple-id uuid='{256D89FB-6C07-44F5-979A-6A0077853629}' />
    </worksheet>
    <worksheet name='Time distribution (Gender)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Date (cleaned parkrun.csv)' datatype='date' name='[Date (cleaned_parkrun.csv)]' role='dimension' type='ordinal' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Time in minutes (cleaned parkrun.csv) (bin)' datatype='integer' name='[Time in minutes (cleaned parkrun.csv) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Time_in_minutes (cleaned_parkrun.csv)]' peg='0' size='1' />
            </column>
            <column caption='Time in minutes (cleaned parkrun.csv)' datatype='real' name='[Time_in_minutes (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
            <column caption='cleaned_parkrun.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Date (cleaned_parkrun.csv)]' derivation='None' name='[none:Date (cleaned_parkrun.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Time in minutes (cleaned parkrun.csv) (bin)]' derivation='None' name='[none:Time in minutes (cleaned parkrun.csv) (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;20-24&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;25-29&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;30-34&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;35-39&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;40-44&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;45-49&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]' included-values='in-range'>
            <min>#2015-12-28#</min>
            <max>#2024-12-07#</max>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]'>
            <groupfilter function='level-members' level='[none:Gender (runner_stats.csv1):nk]' />
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[__tableau_internal_object_id__].[cnt:cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198:qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Time in minutes (cleaned parkrun.csv) (bin):ok]</cols>
      </table>
      <simple-id uuid='{7358A4FA-A9A3-45D4-A07D-09368258CAF8}' />
    </worksheet>
    <worksheet name='Time distribution (age)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Age group (runner stats.csv1)' datatype='string' name='[Age_group (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column caption='Date (cleaned parkrun.csv)' datatype='date' name='[Date (cleaned_parkrun.csv)]' role='dimension' type='ordinal' />
            <column caption='Gender (runner stats.csv1)' datatype='string' name='[Gender (runner_stats.csv1)]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Time in minutes (cleaned parkrun.csv) (bin)' datatype='integer' name='[Time in minutes (cleaned parkrun.csv) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Time_in_minutes (cleaned_parkrun.csv)]' peg='0' size='1' />
            </column>
            <column caption='Time in minutes (cleaned parkrun.csv)' datatype='real' name='[Time_in_minutes (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
            <column caption='cleaned_parkrun.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age_group (runner_stats.csv1)]' derivation='None' name='[none:Age_group (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Date (cleaned_parkrun.csv)]' derivation='None' name='[none:Date (cleaned_parkrun.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender (runner_stats.csv1)]' derivation='None' name='[none:Gender (runner_stats.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Time in minutes (cleaned parkrun.csv) (bin)]' derivation='None' name='[none:Time in minutes (cleaned parkrun.csv) (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;35-39&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;40-44&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;45-49&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;50-54&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;55-59&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;60-64&quot;' />
              <groupfilter function='member' level='[none:Age_group (runner_stats.csv1):nk]' member='&quot;65-69&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]' included-values='in-range'>
            <min>#2008-09-02#</min>
            <max>#2024-12-07#</max>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]'>
            <groupfilter function='member' level='[none:Gender (runner_stats.csv1):nk]' member='&quot;Male&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[__tableau_internal_object_id__].[cnt:cleaned_parkrun.csv_733F76ECFC7848E19FDA3FCFA5FB0198:qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[none:Time in minutes (cleaned parkrun.csv) (bin):ok]</cols>
      </table>
      <simple-id uuid='{0D5AACCE-7D01-4659-8EBF-0DB1A88BBA2E}' />
    </worksheet>
    <worksheet name='Times by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Date (cleaned parkrun.csv)' datatype='date' name='[Date (cleaned_parkrun.csv)]' role='dimension' type='ordinal' />
            <column caption='Time in minutes (cleaned parkrun.csv)' datatype='real' name='[Time_in_minutes (cleaned_parkrun.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Time_in_minutes (cleaned_parkrun.csv)]' derivation='Sum' name='[sum:Time_in_minutes (cleaned_parkrun.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date (cleaned_parkrun.csv)]' derivation='Year-Trunc' name='[tyr:Date (cleaned_parkrun.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.04038vy13vqevb15babf610d55b3].[sum:Time_in_minutes (cleaned_parkrun.csv):qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.04038vy13vqevb15babf610d55b3].[sum:Time_in_minutes (cleaned_parkrun.csv):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[sum:Time_in_minutes (cleaned_parkrun.csv):qk]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[tyr:Date (cleaned_parkrun.csv):ok]</cols>
      </table>
      <simple-id uuid='{408574DF-0E75-4710-9A83-491148F0821B}' />
    </worksheet>
    <worksheet name='Weather analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Date (event data.csv1)' datatype='date' name='[Date (event_data.csv1)]' role='dimension' type='ordinal' />
            <column aggregation='None' caption='Temperature (Event Data.Csv1) (bin)' datatype='integer' name='[Temperature (Event Data.Csv1) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[temperature (event_data.csv1)]' peg='0' size='5' />
            </column>
            <column caption='Total event runners (event data.csv1)' datatype='real' name='[Total_event_runners (event_data.csv1)]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Windspeed (Event Data.Csv1) (bin)' datatype='integer' name='[Windspeed (Event Data.Csv1) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[windspeed (event_data.csv1)]' peg='0' size='10' />
            </column>
            <column caption='Ave Run Time (Event Data.Csv1)' datatype='real' name='[ave_run_time (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Date (event_data.csv1)]' derivation='None' name='[none:Date (event_data.csv1):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Temperature (Event Data.Csv1) (bin)]' derivation='None' name='[none:Temperature (Event Data.Csv1) (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Total_event_runners (event_data.csv1)]' derivation='None' name='[none:Total_event_runners (event_data.csv1):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Windspeed (Event Data.Csv1) (bin)]' derivation='None' name='[none:Windspeed (Event Data.Csv1) (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Precipitation (Event Data.Csv1)' datatype='real' name='[precipitation (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[ave_run_time (event_data.csv1)]' derivation='Sum' name='[sum:ave_run_time (event_data.csv1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[precipitation (event_data.csv1)]' derivation='Sum' name='[sum:precipitation (event_data.csv1):qk]' pivot='key' type='quantitative' />
            <column caption='Temperature (Event Data.Csv1)' datatype='real' name='[temperature (event_data.csv1)]' role='measure' type='quantitative' />
            <column caption='Windspeed (Event Data.Csv1)' datatype='real' name='[windspeed (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Date (event_data.csv1)]' derivation='Year' name='[yr:Date (event_data.csv1):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04038vy13vqevb15babf610d55b3].[sum:ave_run_time (event_data.csv1):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04038vy13vqevb15babf610d55b3].[sum:precipitation (event_data.csv1):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2014' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2015' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2016' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2017' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2018' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2019' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2020' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2021' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2022' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2023' />
              <groupfilter function='member' level='[yr:Date (event_data.csv1):ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04038vy13vqevb15babf610d55b3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04038vy13vqevb15babf610d55b3].[none:Date (event_data.csv1):ok] / ([federated.04038vy13vqevb15babf610d55b3].[none:Total_event_runners (event_data.csv1):ok] / ([federated.04038vy13vqevb15babf610d55b3].[none:Temperature (Event Data.Csv1) (bin):ok] / [federated.04038vy13vqevb15babf610d55b3].[none:Windspeed (Event Data.Csv1) (bin):ok])))</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{AD44816B-C3DF-4AA8-BD49-CACF8B6728B8}' />
    </worksheet>
    <worksheet name='Weather summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_parkrun_no_outliers+' name='federated.04038vy13vqevb15babf610d55b3' />
          </datasources>
          <datasource-dependencies datasource='federated.04038vy13vqevb15babf610d55b3'>
            <column caption='Date (event data.csv1)' datatype='date' name='[Date (event_data.csv1)]' role='dimension' type='ordinal' />
            <column caption='Total event runners (event data.csv1)' datatype='real' name='[Total_event_runners (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Total_event_runners (event_data.csv1)]' derivation='Avg' name='[avg:Total_event_runners (event_data.csv1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[precipitation (event_data.csv1)]' derivation='Avg' name='[avg:precipitation (event_data.csv1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[temperature (event_data.csv1)]' derivation='Avg' name='[avg:temperature (event_data.csv1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[windspeed (event_data.csv1)]' derivation='Avg' name='[avg:windspeed (event_data.csv1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date (event_data.csv1)]' derivation='None' name='[none:Date (event_data.csv1):qk]' pivot='key' type='quantitative' />
            <column caption='Precipitation (Event Data.Csv1)' datatype='real' name='[precipitation (event_data.csv1)]' role='measure' type='quantitative' />
            <column caption='Temperature (Event Data.Csv1)' datatype='real' name='[temperature (event_data.csv1)]' role='measure' type='quantitative' />
            <column-instance column='[Date (event_data.csv1)]' derivation='Quarter-Trunc' name='[tqr:Date (event_data.csv1):ok]' pivot='key' type='ordinal' />
            <column caption='Windspeed (Event Data.Csv1)' datatype='real' name='[windspeed (event_data.csv1)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04038vy13vqevb15babf610d55b3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04038vy13vqevb15babf610d55b3].[avg:Total_event_runners (event_data.csv1):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04038vy13vqevb15babf610d55b3].[avg:temperature (event_data.csv1):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04038vy13vqevb15babf610d55b3].[avg:windspeed (event_data.csv1):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04038vy13vqevb15babf610d55b3].[avg:precipitation (event_data.csv1):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.04038vy13vqevb15babf610d55b3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.04038vy13vqevb15babf610d55b3].[avg:Total_event_runners (event_data.csv1):qk]&quot;</bucket>
              <bucket>&quot;[federated.04038vy13vqevb15babf610d55b3].[avg:temperature (event_data.csv1):qk]&quot;</bucket>
              <bucket>&quot;[federated.04038vy13vqevb15babf610d55b3].[avg:windspeed (event_data.csv1):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.04038vy13vqevb15babf610d55b3].[none:Date (event_data.csv1):qk]' included-values='in-range'>
            <min>#2007-11-10#</min>
            <max>#2024-12-07#</max>
          </filter>
          <slices>
            <column>[federated.04038vy13vqevb15babf610d55b3].[:Measure Names]</column>
            <column>[federated.04038vy13vqevb15babf610d55b3].[none:Date (event_data.csv1):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04038vy13vqevb15babf610d55b3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04038vy13vqevb15babf610d55b3].[tqr:Date (event_data.csv1):ok]</rows>
        <cols>[federated.04038vy13vqevb15babf610d55b3].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{90CA34B4-F660-4422-9848-353144D07909}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Participants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[avg:temperature (event_data.csv1):qk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[avg:windspeed (event_data.csv1):qk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Date (event_data.csv1):qk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Precipitation (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Temperature (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Windspeed (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[sum:Total_event_runners (event_data.csv1):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA2B98EE-70F8-4AEA-A41B-B594D1459B59}' />
    </window>
    <window class='worksheet' name='Participants by wind speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Date (event_data.csv1):qk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Windspeed (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A604D56-A925-4495-8598-8E34F2D61791}' />
    </window>
    <window class='worksheet' name='Participants by temperature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.04038vy13vqevb15babf610d55b3].[none:Temperature (Event Data.Csv1) (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Date (event_data.csv1):qk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Temperature (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Windspeed (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1041FAFE-A3A5-40DE-9CE3-CAB4E8958B1E}' />
    </window>
    <window class='worksheet' maximized='true' name='Participants by precipitation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[yr:Date (cleaned_parkrun.csv):ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[Precipitation (Event Data.Csv1) (group)]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_2000724160674611200:nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Date (event_data.csv1):qk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Precipitation (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Temperature (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Windspeed (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (cleaned_parkrun.csv):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3ECFCCF0-F012-4407-BE5B-20D8BF66599C}' />
    </window>
    <window class='worksheet' name='Participants by Age-Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (cleaned_parkrun.csv):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB8595A0-CC68-4715-8E95-FF68A8294197}' />
    </window>
    <window class='worksheet' name='Participants by Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (cleaned_parkrun.csv):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABFE17CE-1B2E-4F58-AC7F-6219987265B9}' />
    </window>
    <window class='worksheet' name='Weather summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Date (event_data.csv1):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[:Measure Names]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Date (event_data.csv1):qk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Temperature (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[tqr:Date (event_data.csv1):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (cleaned_parkrun.csv):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EC7F814-4FBC-4A9E-BEBA-E3532D18817D}' />
    </window>
    <window class='worksheet' name='Weather analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[:Measure Names]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Date (event_data.csv1):qk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Temperature (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[tqr:Date (event_data.csv1):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (cleaned_parkrun.csv):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (event_data.csv1):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AC82EF9-9966-44CD-96FE-50981DC9189A}' />
    </window>
    <window class='worksheet' name='Runner summary chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CAD1360E-814C-4AD2-89C2-11CEA0DFBCA1}' />
    </window>
    <window class='worksheet' name='Runner summary table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DD1A1DE-6B5A-48C5-89D1-DCB7CC681A76}' />
    </window>
    <window class='worksheet' name='Times by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (cleaned_parkrun.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E20DEBC1-57C8-44B2-9350-3136CEC9E147}' />
    </window>
    <window class='worksheet' name='Previous vs Next time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='shape' />
            <card pane-specification-id='2' param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Runner_id (runner_stats.csv1):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date (cleaned_parkrun.csv):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D644A6FE-0022-4AF7-A963-9D80D6660E60}' />
    </window>
    <window class='worksheet' name='Change vs previous by appearances'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160678371330:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{7924989D-6652-4EAA-9468-26C3901F18DA}' />
    </window>
    <window class='worksheet' name='Avg. Time by appearance (gender)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160678371330:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{018DEBA9-C40F-45BE-92F3-6C858D6A12A7}' />
    </window>
    <window class='worksheet' name='Avg. Time by appearance (age) '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160678371330:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{3CD67342-E24E-45A6-B1FF-1DB1BFA36CB2}' />
    </window>
    <window class='worksheet' name='Avg. Time by appearance (age) (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[usr:Calculation_2000724160694947850:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Appearance_Instance:ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Appearance_Instance:qk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[sum:Appearance_Instance:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{85FD4DAA-F559-4467-B9ED-6318183C3EDE}' />
    </window>
    <window class='worksheet' name='Time distribution (Gender)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_2000724160674611200:nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_2000724160675123201:nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Time in minutes (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Time in minutes (cleaned parkrun.csv) (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{990EB0DE-9957-4494-96C6-4885A64A860C}' />
    </window>
    <window class='worksheet' name='Time distribution (age)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Date (cleaned_parkrun.csv):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_2000724160674611200:nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_2000724160675123201:nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Time in minutes (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Time in minutes (cleaned parkrun.csv) (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44E98289-5885-4E1C-A74C-CEBF916AECA8}' />
    </window>
    <window class='worksheet' name='Improvement by previous time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (Cleaned Parkrun.Csv) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Time in minutes (cleaned parkrun.csv) (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7B4ED85-AD03-47D5-979D-DBBEEDE5EA94}' />
    </window>
    <window class='worksheet' name='Improvement by previous time (exc. outliers)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (Cleaned Parkrun.Csv) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Time in minutes (cleaned parkrun.csv) (bin):ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{904CC520-43E5-463A-B64B-CE6DFC356DDA}' />
    </window>
    <window class='worksheet' name='Improvement by previous time (exc. outliers) (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (Cleaned Parkrun.Csv) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Time in minutes (cleaned parkrun.csv) (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C01B5888-B4CC-4B60-B9F9-6218C037FE3C}' />
    </window>
    <window class='worksheet' name='Improvement by days since last run (exc. outliers))'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_1901926444206850054:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_1901926444206850054:qk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (Cleaned Parkrun.Csv) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Time in minutes (cleaned parkrun.csv) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Weeks since last parkrun (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6AE9F44-ABE6-4C5D-BAA9-9433D6732DCA}' />
    </window>
    <window class='worksheet' name='Improvement by days since last run (exc. outliers)) (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_1901926444206850054:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CC750CF9-A31A-443A-943A-87FADF8999A8}' />
    </window>
    <window class='worksheet' name='Improvement by prev run time (exc. outliers) (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{830BD943-0A3A-43E1-BD9E-8A0A5D6F09BC}' />
    </window>
    <window class='worksheet' name='Improvement by prev run time (exc. outliers))'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Calculation_1901926444206850054:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[:Measure Names]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Time in minutes (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Weeks since last parkrun (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C5755C4-D97C-4128-8213-92DFCC81CDAF}' />
    </window>
    <window class='worksheet' name='Improvement by temp (exc. outliers)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Precipitation (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Temperature (Event Data.Csv1) (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BB02A6F-F8D9-4B8F-A3B7-BF1E01756175}' />
    </window>
    <window class='worksheet' name='Improvement by wind (exc. outliers)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Precipitation (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Prev Run Time (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Temperature (Event Data.Csv1) (bin):ok]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Windspeed (Event Data.Csv1) (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3423E3A5-FC90-47E6-B528-C4B5815F13D0}' />
    </window>
    <window class='worksheet' name='Improvement by precip (exc. outliers)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04038vy13vqevb15babf610d55b3].[yr:Date:ok]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Age_group (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:Gender (runner_stats.csv1):nk]' type='filter' />
            <card param='[federated.04038vy13vqevb15babf610d55b3].[none:prev_run_time:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04038vy13vqevb15babf610d55b3].[Precipitation (Event Data.Csv1) (group)]</field>
            <field>[federated.04038vy13vqevb15babf610d55b3].[none:Precipitation (Event Data.Csv1) (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44AAA991-9DA6-4017-B2FF-F753874DDF2F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg. Time by appearance (age) ' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Avg. Time by appearance (age) (2)' width='192'>
      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
      LD09PXz3u98lLy9vShuhUIjz589z5MgR+vr60Gg0PPTQQ1RUVHDt2jV+85vfMDo6ilwuJzc3
      lx07dpCZmcmpU6c4fvw4TqcTpVLJokWLuOOOO8TvbnoGEB3gylUNWx77KSuyVfTXvsYvX3iV
      0wuWcXepFF83Hfr7+9Hr9Xz3u98lOTmZuro69u/fT1FREbW1taxatYpVq1YxMDDAqVOnaG5u
      ZunSpeJK5vf7OXr0KNu2bWPRokWMjIzw+uuv09jYiM1m49q1a2zfvp2Kigra2tqoqakhLS2N
      jIwMmpubmTNnDiqV6hMR4o+NjREOh7nvvvvIy8uju7ubPXv24HA4MBgMRKNRLl26hEqlum7i
      T9Ld3c25c+fYuHEjixcvJhwOIwgCMpkMvV7Pww8/TE5ODn6/n8rKSi5duoTVaqWwsJBFixaR
      lJTE2NgYzzzzDD09PcTFTWgipjdbY/nc/telaBQyhKgfmVKFUi4jFgtPu8nZzpw5c5g7dy4y
      mQxBEDAajaSkpCAIAqFQiJSUFJRKJampqaSmpuJ0OgkGg6K7EolEEASBlJQU5HI58fHxzJ8/
      n9bWVhITJ3S0SUlJKJVKcnJyaGxsxOl0kp+fz1133QVAe3v7JzK2jIwMMjIykMvlCIKAVqvF
      arWiVk9E2w0ODlJXV8eWLVs4ceLEddfHYjHa2trIycmhvLwcrVaLVvueXK2goABBEIhGo/h8
      PtHVMZvNJCUlARNPEI/HQ2JiIjqdTjT06c1WlQYNArFIgMGGKo5U1kPhJhZkS/7PdJlcycPh
      MPX19XR1dbFgwQKMRiNWq5XDhw9TX1+PXC6nr68Pq9U6xQAmJ9WhQ4fEx/v4+DiBQACdTodG
      o+HQoUOib9zS0oJOpyMSiYgT8ZMeWyQSob29nWvXrpGVlYXZbCYUCvHuu+8yf/580tNvHOgd
      jUbxer243W6qqqqIRCKYzWYWL15MQkIC0WiUtrY2zp8/j9/vx2QyMW/ePNRqNV6vl8uXL9PR
      0YHX6yUzM5P09PSPaQCAEBmj/tAe3rnQjjJzGTtu3kyBcbqtScCEr3z+/HlGR0cpLCxkzpyJ
      0tqrVq1CEAQGBwdRqVSEwxNlst/vrmg0Gm666SaOHz+O3W5HLpcTi8WQyWQkJCSwYsUKampq
      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
    </thumbnail>
    <thumbnail height='192' name='Avg. Time by appearance (gender)' width='192'>
      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
      V9GLAQQ38/8Bf67z/k9BBmEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Change vs previous by appearances' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Improvement by days since last run (exc. outliers))' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Improvement by days since last run (exc. outliers)) (3)' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Improvement by precip (exc. outliers)' width='144'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Improvement by prev run time (exc. outliers) (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Improvement by prev run time (exc. outliers))' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Improvement by previous time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29V5McR5Yu+Hmo1JWitERVoQoahCAJks1uNtnsbrQYdUfcHbl3917bfdzf
      0G/7uGb7sLsPu2Zra2PbvTNzR/RMTzfJ7mmKIUGCAiBkaZ1ZIjMrdWZkCPd9iEJWRbgXmSAA
      ogqIz6xFOSI8PCP8uPs55zvnEMYYgw8fTymkxz0AHz4eJ3wB8PFUwxcAHwcT1MCnVz9GrlQT
      /nN6aRa3pufhPb/XSzlcuXIF69kCqOB0z5iN5eVVrC3OIpPJQHkEQ/fh48FhVlA3VXz8/m8Q
      Tw4h1SGDUiAUT0EJRLCytg6z0cRSNAgNQCm/iZqt4fkLZ2DSKbDyFm6sr6JQLEPRAhjujKBi
      axiJSyhUdRSLdbx8nPg7gI+Di+XFJZw9cwzBcAJX3n0HWzULV976JbRgGHplG+vbJazMzuLz
      m1PIFeswKsXWvfV6FRvpTZg2QdPW8fGV97CS2YLRbCIQjqJRziFXrID4ViAfBxKMwrIZZImA
      MsC2DDAig4BBVTXYtgUCBptSUEagyM5arigKLMsCIQSUMhByrz8bFiXQJBu3ZlZxYmIEINKD
      CwClFJLkbyQ+DiceeOb6G4iPwwx/6fbxVKM9AWAMa0vzmF1YAZiNhbkZLKc3HvHQfPh49GjP
      DEoIIpEwyoUGAAnxjhiIFoFt26CU+scgH4cW7QkAYyhXqtC0IGrVEtLrW+ju1yDLMQCALMuP
      cow+fDwyPLAVyLZtXwB8HFr4SrCPpxq+AHwBmobl6zdPOHwB+ALMZQowLepqo5SBUl8onhT4
      OsB9YnWrDFWR0JeKPu6h+HgI8AXAx1MN/wjk46mGLwA+nmrcFxVifmkNYDZm795GZmv7EQ/N
      h49Hj/umQjCjjkBqAJZegW3HfSqEj0ON+6JCKIqGusWgb6cRSfW3lF9fCfZxWOFbgXw81fCV
      YB9PNXwB8PFUwxcAH081DrQA2DZFrWE87mH4eIJxoAWgadrIFuuPexg+nmD4ViAfTzUO9A7g
      w8ejRpsCwJBeXsCdmXnANnDj8+tYWMk82pE9RWCM+d70x4S2k+MGw2EE4xEwMIA5Rx8/K8TD
      wVq2DFmS0N/pxxh83WiTCgEUtrehRBiCSgSRSAjhaOSJoUJQyvDZzDqeOzHwWJ4/2p96LM/1
      4SvBAO4dQQBJIl9+sY8nCn59AACEkN0swj6eKhw6KxBjDHrTetzD8PGE4BAKADCbzrd1bdOw
      YFr2Ix6Rj8OMQycAkkRwdry3rWu3Kw2Ua81HPCIxGGNY3ih++YU+HiueaB2gvzP2WJ8f1J7o
      1/tE4ImxAt0rh0N8bdbHfeDQHYH2w435TS6Lm02pn8XNxxfivqgQ03OLALMxffsWcsXKox3Z
      feL8ZB801b0TZXIV5EoHi01q277n/CChzUMqQTgahUYCgNVAqWFALZWRjIUPNBWiPxUBAFjW
      wTGb3lrM4thwCpry+I+NPu4jK0RuawtqrBPhQAx9qRjkYOBAUSHuCeFB1wHOT/Y/7iH42IMn
      Rgm+NruO06M93DHIh48vwhMjAD58fBU8MVYgHz6+Cg6dAFDGkM6W27p2LVtGtlh7xCPycZhx
      oAWg2jAwvZLj2ttVdC2bwvb9AD6+AAdaACJBFUcH+WARy6aCq3lYNm3rWsYYMjner7FVrMGm
      7T3Lx+HEgSarEEKgyO7VngAItGnpodQJdGnrWsGFhmm3fb+Pw4kn2grUaJqQJIKAuivnIn8B
      pQzXZtfx7PHHExLp4/HhvqgQMwvLAIB8ZgnLG+1x8r8ubBX440oooLomPwDUdBN3lrKuNkKA
      8xN9j3yMPg4e2j4CRTtiUGwF1NSxtLaBQILB7k4cGCpEo2nAsjQw6YvP7EFVwrGhlJAeYVn+
      ef9pQ3tHIMYwfecmAvFudCWisA0dVQMY7Os+0EegdinSjDHohoVQQHW1bxaq6OoIQ5YPtK3A
      xwPgidYBljdLCGoyepNfnG/Htin+6f1p/OErJ13t6WwZvakoFF8AnlgcOgFgjMGwbO5sfz/3
      25S5JrWozcfTgUP3xSljuHo3/ZXvrzdNzK21V+HyxvwmDNMPqn+ScegEgICgJxFp69rNQhWF
      SsPVFgqoGB9MutoYcya7F6dGu6EqX+0VMcZQqT+egHwf7ePQCYAkERwf6Wrr2o5wAGGPYluo
      6Pjg1irX58VjPE9flggc19suilUd5TYmNgOwutUeZ8nH48OhE4D7QSigIuDJzBBQZXTFw23d
      f31uA6bHXFqq6qjWv7xqjUQITo12tz9YH48Fh04JflAIPcGMYSFdwMTQlyepXdksQVVkP5Pz
      E4InegcQoS7yBANIxUPctZ/PbXBKsONX+PLnMOBAOAh9fDHa3AEY0suLaDAVE0cGsDA/DzWc
      wPBAz6HcARicI8retrVsGcM9cde1NqWQCOF4Q8CXZ5KmjOGTqQwunRx8eIP38dDRtjG9IxGH
      3AQACYlEHFQOHuoCGXtJD8xZrjl6xHalgUQkKJzs7bCkL072HqiMFE3Txny6gFOj7RkRnga0
      XSBjbWUVoWQvatUSVlYz6B0cOVBZIR4Uw70Jrq3etJGKyVC+oin0oEGWZZwa6/Edfntw6JRg
      ShluL21xCXKbhgVNlR9LWhTLpqg2DCSiwa/92T4eDIduKSAEmBjs5NrnMoW2or8odYhvXxUf
      T6Vxa3HL1Wbb9KFnoW40TaFzzsfDxaHbAR4Udd1EOlfBZBsmz0bTRFBTXLtKvlyHLElfebX/
      4NYqLkz2uZin6ZxTJK8vtWtaPSyJvg47Dt0O8KAIB9W2Jj8ALKwXuIS7jD2YeXNikE+L2JeM
      ojvhds4Rj/XJx6PBUycA9wPv5AeAjXyVS7hLKUPTc6yizKk86UVNN7j4Y1mWIEv+p3gc8N/6
      F+D8BJ9x+sx4DyaH3DpI07SwvFlytTHGML3Kh41+MpVBw69xdmDwRAuAadltp1B5EBimzSnB
      hBCcGOGV9ZOj3Rw/ycfjwxMtAJuFGkeHFoFSho+n2osxWMuWsblddd/PGEo13dUmEYILgkzQ
      Z8Z6uLQuhmnD8BTzaxoW5jOFtsbk46vjvrJCLCynAUYxN30H69mD9XGqDf5sHQ1pXJyvadnI
      e87whADnjvJZIbKCxFj9nVF0eRRWiRBEgpqrjTGGauPLWaMAMLOWx6JnsiuKhN5ke3EPPr46
      2t6LE8kkSg0bzKhBS/TDbFRg2x0HhgqxulnEWH/C5eW0LAtgEixrt800bdR1A/HI7oSljOHz
      uU1cmHQLwWJmG5GAOOW6tUcwGKNQZOKiPVDK8M/vT+FPXj3luk9kWj3aHwdAONpEUJUeOpWC
      wRvh8HSjbSrE0uIiIp39qJsa6rk1RFP9B4oKcXK0h2vrSvCUZUVREA4FXG1O9ggJiuJ+HYM9
      cWia6hKq5Y0iVFXGwJ4KlJrGEAlprvtNy8bCeonrM50pYrw/CXWPKfTq1DpURcLzJx4tcU43
      LMys5vHM0fbKzD4NaO8IRAhOn7uI0aF+RKIdOHH6LIb6Hz2hqlJvctTl/fDxVBpN86uvliK+
      z2BXB8ebKdcN1DxHm4Aqc0xSRZbwF987yz9HwMORCIHUhhmUMYbF9QK3496Y3+TMsCIEVBln
      x/mF4mnGgVaCoyENJ4+4BY1SxlERACf8UXoAx1GwzSwTp0e7cXTA7UgzTJtLrssYOGUZAGZW
      85zCOzmcwng/T8bzYr8wy9Nj3W1VxvGdazwOtACIPhghwHh/krv2+EiX61gBOMeVDc8kNCyb
      c2RJEsGJI+3taOlcGVuemgOhgIpjwx6TJwE3nnvXegV1PV/FVsHdJ2OMM+FKhOCVc0e4dyJL
      EteWyVewnucF0IcbB1oARGAMmE+3l9ZkpDfOWVIqdQOft0ky0w2LO24MdXe0Z51hTgC9F95s
      1wAQ0hSuqrxuWEJHWrvoTUTQk2gv9vlpxqETAKB9gphoB4ncBxfoH9+bQsVz3r+1uIXZNvIK
      MTDky7wPolI3uJV9tC+BoZ4OV1sooOL0AwTVy7Lkp3RsA4fuDTEwNAzzK99vCajLlDEsbxS5
      a185f4RLq9IRCSIW1rhrvZAIwTmBtWVyMIVQwL3aX7m9hk+n3byhB90BcsX6gSsSfhBx6ASA
      gCAZ5QPY20UkyK+sjDHhqj7QGeOsNkd64+jfYwK9d79p8RnkvAxPANgoVGHZ7mNVRyTACZWm
      yDjisSwxxnDl9lpbfpdoWEM09OWC+rTj8AkAAToFGRzav1+gWIMgHg1w195e3GorNWK9aWLK
      U8uMEIJkjB9nOlfhzLWqIkHx+FIYGEybf3awzeo4QYFe4YNH21SIrdU5FBs2wGzMzUxhfevL
      z8E2pW3b8e8HXtoB4AS6eFfGdslwhECYLKumm3BySOxieaOITN5t8qw2TMyl3VQGxphwpR7q
      6uBMrqosczuNZVNki/wR5vwkT9mg+zzLi3uJhX3sos0lgqAnGUPaYEgEKGq1BojWaCsrxGBX
      9KG6802L4v958wb+y4/Ou9p//ck8Xrsw6jpfr+cq0DyZ4O6ZF/eaKBkD9KbJjbNc09HQTew1
      3FBKQW03baEzFsDvvjTharMpw9/89g7+7PXTrj4vneiHJMF1bSSoQJLcfZqmBd1wj4kx4LPZ
      DTx7zC0ENxe2cGy480trpzVNGwuZAudbeZzIlxuwbYqex8R7EgpAvZzH/FIayZ4hDPWlADCk
      1zeQZSbiJAxZUQDC2qJCxKMPdxuWZYY//+5ZjmLwwxcnochue/hIH+8vqOsmVrMVHB/enQSU
      MjQtyvXZnYggGFBd7VXdQlBjrrZKvYmFTAHn9pRZIpRy9Ij9MLO2DU1V0Jva1S3spoW1bAWn
      9lA8KGMwLApZdgf/n99hnX6ZdUxRFJz1kP4YY6CMcfmPplfzGO2NP3LqdjIWBgNr6z09CoiP
      QNTC0tISmq3tkmBw8hzOHxtCtCOFM2fP4uiRoUc+OJEzyPED8EzUu8s5YQSXF+Gg6pr8956z
      IKAen5vo487RsbCGsOcIphsWdwQCIKxRPL2a444hiixz/gHLphzl4h4Vwot2fvcX4frsBtc2
      0tMhdOQ9bGiq/JVrPTwMCAWgsb2NYr2O7WxJ9M9fG2q6yTm9KGOYz/D6x/GRzrZSmZdqOj6Z
      yrjaGHYzvu3FrQVeCY6GNM40KhHCPVsiBD9+aZLrM1uog3qsQKGAgpDm7lOWJETDbsWcgAh1
      ldk1nl7RLgghePb4ALd7hAIqlxBsP73mMIObMYwxBLv6cHx0FJPHhh/HmFqIhjQuFToh4JxG
      ADAl2AFEyiGlDPWm24/AGBMqnEsbRW5ihQIKgpp7ZTRtipru7pMyhrc+XuD6rNSbLio1IHaE
      AU66lb0gBHjpNL/znh7r+VpW0UyugnSWLyh+mCFYMi18+tvfotis4dadpa99QF8GWZLwwkl+
      Epwd7+FW4fc+X8b1Off2rikyOjvc5klJIhgb4MloPckIVI91JhLkg2wiQRXHvVwgAIaAnTrQ
      3cGNc3mziDUPyc2yKEoehx1jwPs33bUN7ge2TZEvf3Xn2GB3h1BQHyfatYDtB04ACFHx0vde
      w9rMHHr7+Y/6uGFTio8EJZI+upvhVmvTppzTSVEkpDwCQEAw3O12OgEOfdh7NNANi7PjWzbl
      vK6EEIwKSHt13eCOWwSEyzhNGQOl/A7wwik+ZmBxvcAd1ebS25xeY1GKbOHJ8g7fWcpyO/r9
      QHhoLmbWMHzqAhJh3jn0dUJ05mQMSAsowVuFKlfnNxbSEAm6V+tssY5/+2zJ1UYIMNjt9u4C
      wJ3lHJdFbnYtj+UNt26kyjKXKIsAQsqEiLkZC2uIeLy2iVgQr5wfdbUxBtxe5P0qP39/hlvZ
      97MHef0NbCeL9WE9258Z6xH6hdqFQAAYqoaNrcUZ5Eo1/p+/RlQbBu4suz+4LBFcfuEod+3p
      UT50caw/yRWyGOiMceVQLZvib397m+uzNxnhjiunR3u4QhqGbWPbE3zPmMPH8WIhU+CCV2q6
      ibpHh6jWDVy9u+ZqIwR4UaAD/OcfnedKwWqqzCXgUmRJaG8XOdeeFggEgGD05Dn86Z/9GY6P
      fn2hc8WqzgWRU8ZXb7cpw799usjdP9IX51a3a7PrHKFsq1jDv33mVk4liWBEkB260TS548pm
      ocoF1VPKc4EIARdjDDhB9V5BPTvewzmnApqM8X63oDEG/MsHM1yfsXCAs9gMdMXQ3+UWCttm
      3FGNAfiHd++irSoRT4MVCADK6QX87//H/4ZPbi3vtDBUc6vI1WyAmlhZW+fOpw+KdK6MbQ99
      WJYIwp4jDGMMGUGgx09/fRMVT+0uw7Q5y1DTsLBV5CewyLQ61p+E6pms5VoTtQZvRSKCQ4co
      /PHmwhaqnvtXt8pcRFkkqOHcBL8AtZvafCFTwOK6m+GqqTLGB9x6CQHw8tmRtqrepHMVrGXd
      x0/TsrGy+XjN5Q8Coe0slExh8ugkBvvurYoE0aCGksUAaiKTXkWlVseJidGHlhUiElChKe4s
      COlsCe/dWMFY366Calo2GgLaQqXehG4YCAd2JywhAAHz0AkYQprsoR3YSGfLXJ+fTKfRlwqj
      Y48udHTHWrT32mq9iUyuzGWF+Nu37+BPv+OmQmiKBDDqurYnEeL6ZIzBMG2XJ9amDAuZbViW
      7Zqw791YwXPHB1w0kIAiAcTdZ7nexGcz63jVo1usbBTRnQh9abYIy7J2duU946T8+zxMEApA
      ZSuDphwAac1rhnSuggaxUFMSGB/uhxxJPtSsECKLSV9nDC+fHXG5yW1GIEuEc51LkgRVUVzt
      AU2FprrbouEAOuNhVxshTkYGb5+xcBAB1U2FmEtvQ1NkjPTuCmU4FEB3MuIeJ6WIhQNcn+cn
      +xELB13ttxY3oCoSTo/t0h5KVR2fTGfw+rPjrTaZMVy+NAFFcVundJOCSO6sFvfoEq7fHiKY
      GOrixvTC6aG2goy64lEhbaHb48Q7TBDup5RSMMr2MCEJBkcnMHFkEJFIBD0Dw+iMP/oqiQSE
      O5sSQHhelSUJ3uaAwM1equkclcK0Kf795grXZ7ZQ20MHcSCqEywRuHYJp43g256VFgDmM9tc
      n03T4syYoYDKOQEpY1yNY+BePWM3+jqj6E25Fd6GYQoTCogmf7ZY52go0bCG2GO2DD5sCD3B
      DaYirpG26mA9LKxulTgFrVTT+YqOBMJypv/t5WeQ9JgiHaKX+0cEVAVRj3lSlgj6U7xAF6s6
      NzGzxRqnq8SjQS7XDgOEZ+OgxgfFdyci6PRQHCSJIOThIUmE4K8un+P6rAl8C6VqE6WqW1At
      m3JtjDFh7PPncxtoCDzm3uuapoWbC4e3kIdAAIq4cWMFyVQKwcDXR1LqT8W4CWxalLMMWTbF
      O9eX4cVfv3WTC0K3KeMmhmna3KRmDKgLMjbXdJO7tjse4TzJq5sl/PQ3t1xtlDK8d4PfVUo1
      nUu3uLRRxMqWW1hMyxbSM7z3Avd8C+62qm6gprvfXTigctYmxoD/6xfXuF21JxmB4jGjruer
      SHuUdU2RcfLI4S0IznuCoWD06ASOHj2K+AOEHt4vFIUP4tZUWbBaSxgX0BZEyni+3EDBIxTh
      oMrZzBljqNT5EkfxSIDj/WRLNS7YPaApiIX4XeWvLj/D9dmT4H0LJ0a6MDnI72reIx1jwN+/
      O8VdZ1MKL5dvsDPmyl4HOEcdbzzyPX6RV4DOjPdw0Wf9nVEMdvF9ipxrn06vc7laDyJ4AZBi
      OHNuHNFoFNpjpKkCTpTWN067CXkMjOPIAICmKpwyrjdN6J6VXZYlJDzhj7IsCU2OqY4Q9w5E
      O4CT2c3DnIQ4fUtvMgLFkwVuPr2NRUFQvjcajYEJQzSPD3dxgjqX3uaySzdNizONEkJw8Vg/
      pwfcXcqi6XnWer7KmWv3w8kjXYciB+mBjgmu6SbmRDmABAtLodKA6flgMUGweaGi4+aCp8gd
      pdzEAIDlzRK3M2wVa8h5doBISMWEZwUnAE4J0pqIFE6b8Uc1pxQTf++JET6aqzsR5irMNAVH
      PVWWOTo1Ywyfz21wu+fxkS4uwmy70hCmehHh+tyG6DNxsCkVHuu+LhwYARApWJoicR9MVWT8
      2XfPcPcbpg3bo/DKksTl3KzpBreD2DYTCoDe5K0zVKBXlGtN3PUExVs2xf/yNx9yfYriDgCe
      u2NYNp+qhQHr2/wK/Ndv3uQyy8kSvyvVmybuLrvHCYCzNgHgousAIBkLckTC/bBZqHELVbVh
      cJM9W6xj4zFmsDswArC4XnRe2h40DV4R1A0L/+vfXeXuNy2bm1y2LVhdBEXuJIkIiWs9yTBn
      9pNlwpkdZUmC6hE0Qoiw7tfb15c53lCjaXJlk0yLcrsPA8PmNs/P6ogEuNWagd8og5rCWdAI
      IVy69v3Qk4hwWfGYYPcCgLG+BKdXzK7moRvuBaUvFcVg91enWC9vlDjC4mahytHL90P7WSEW
      byJdch6UWbiLmRU+jO5BsLJZ4lYxyhjHqSeA0G0vOjLUBRNLkvi0KJQylGt8MYtsqc5ZoTRF
      4bg8Nd3glG2bUixv8rvKH337JLerJaMhJGJuC5giEy7/EAHh9A8AuHzpKOIRt6AagiOQIksc
      O3Y/3JjfhO4xgy5kCpjz5E8qVnX87ds8kXBqJccpwQvrBY701zStB6rbnIgFOSW8Kx7mSJD7
      of2sEN09SNuAbdSwlN6ClpBg290PjQph2bbznz0u9aZhotJourMt2DZkiS8mMTmUQjjgdsk7
      xSjcbRIBAoq7zbItmLbF9WlaNgzT3V6p62AeKoPeNHl6BqUY609yfX42nUYiMubacYrVBjTV
      PaZaw8DKZonLNLG0UeSoEG9fW8Tl548i6RIixtFAbMuCInkpF8Bvry3itQtjrj4jAYX7nWN9
      cTC47w+qMs4f7eF+59mxblCbgu3ZgS8/P46A53eWKg3YlAmTiHlxfW4D5472uhYwatuwbYde
      cg+mZYMyfGmWDKBtAWBIZ8uoEwu6ksBL33gZVd34ylQIURHoEyPdCAbctAXKAL1pu2kLFkWp
      pnPu+JpuAp4iFwwAmJsOYFgU9abpalNthg4BbUGRZKiK7GknANx9KooCWXY/m8LGZqHK9TnU
      E0dAc9MrnKB493OCARWRoPs6iTE8d3yAo0L0d8YQDmrc75Q8VIhKw8Td5TzOjO+yVCljWN6q
      QJZll86QjIehqarLNG1YNgiDyz9gMxu25x0zxvDx9DpOjHa7joGrawWM9ifcplgiAYTPyCFC
      pW5ClhXXOOfSmzg20uXaAUs1A6ZNEdlTCMUwbdxeynIM3TaPQASDY5OYHHWoEERWEIt89czD
      12Y3YHrc7BuFKlfQzqKUi/JiDBAlQShWdY6SLEsSZE+2BUmgHDJAaF6UJN5qI+LuO4qFu4UA
      XOgkANxeynLHKpFeUajoXLpGh7nJx2mrisxp0ZGAygXvBzWFY4MCcLzgnvvn0wWeBlLRUai6
      vxGlVHiECQUUjiF7crSbDycNqZyexRgTlpIt1pqcafjcRB+nv3XGw+jzePZVRcZ5gan7sSjB
      +xey8J7Nec+nLBHOYwwAm9s1jg5NKeNSk1gW5VOtUMbdCziWHO/zTYuv6ChLEldhxqZMWMzC
      smxOKCt1gxMKReYzTdiU4X/+63/nlNux/gQX/FLVTVR1b58SuhN8QExDMIHzpToXi9GTjHBO
      xFBAxcVjfDXMbz1zhNPVZlbzHL2i0bS49C+mRbG0wad/Ge9PcAvS4nqB8/WIQIjYBP1YBOCZ
      o71csHlnRwgdHklWFYlzRDEG4YqjqZKAK8/rJpTxQgGA2xWAHSqFt6q7xHus602TixEgEJPU
      SjWD221sgaCaFoXuuY7AIaR5e33n+jIKFbcS3hkPobPDvUvXdBOfTrtTwgDOKu59VV3xMCeA
      d5eyuO0h0+2XbvFfP5zl3p1o4dsQ0CsIgTAh1+mxHu63Tw51ct7t+8Hj2QEElpi5tW3uRZiW
      zQWg25RyZDTn2vYcKqIsAgzgvJ6ta7kueXOTyObOdsbvRdO0uCAdiRBuckRDGro6+GOmZVFO
      rAuVBjfZChUdRe64IjZWeBMHAMCzx/v5oh0Ci02lbuCXH85x928WapxVTlTDzbQp954YA+oN
      PtD9//7ldW6huLuc44Lis8Va2x7rA5M+uG5YiHpebjSk4UgvX3xub4DMPYiESpQJWpEkoX1+
      f7+9J68QA8e7sWz+WAWIJ1yjaXIxwffSE+6FpspIdXjYrTvP4oZO+KwSmiJxQmVTflcBA5Y2
      Cjtn693rN7Zr6IqHXNnh+lMxbpyVehMzgjoGp450cc8v1Zrc+M9P9HIC7ewAvGHl/EQf1+fp
      Md7bnoyF2rZMPtIdgDGGquBsLcJobxx9Httt07C5Olc2ZVgv8M4g3eCZm5Tyq/1+k1Xkt6eU
      cZNd5Lp3vMN8ChMRd/7Z4wNcoW3T4kM3y7UmljzZJxhjjhPNM6aR3jinXFbqBsqedx/UFCHt
      OxYOcArrezeWufvL9SYXC9GVCON3vnGM61M0/aZX8kJdy7v2FKu6cFd57sSA8Ki6F+vr6/jZ
      T3+Kn/30p1haWvrCa4FHLACUMcwLclmKcG6iD2OeqLBa0+CrudB9KrAz/sUIHWZtjWZ/iBxu
      lPGCQinDep7fhq/eSXPe3KbJH/UaTZOjMzsD4Juahs17twXHKlmShNUkExHeqFDXTViidIue
      50uECFfrzniYm9l9nRHOMrWxXeXijCNBDSfbLA919W7aZT3s7+/H93/8Bzh+8jRGR0db7ZQy
      lAQ12x65DtDuVnRrYYvjvogCzQkhwjSA+6VB5I8hjDOlffE4vUmseMFiAnoFIFaCRYq1aOwW
      5XcqQghnQQKchAJe02w0pCEack+2asPgAowYGK7P82S4cxO96PB4l1e2Slj2BPnIkoSUoBDI
      h7dXuXff2RHmrGWMtyBDVSSM9fGU9zc/nud237pucvdHQxqnwFuUcoL21ltv3dsc3G4AACAA
      SURBVA8V4jbWyxbAbCzMTmNu8ctT9MmShPMTfGqQq3fT3HFlabOIdU9JU9MSKUis7YLYDh+m
      zTV/352VfOGfXwSRcik67zuuNZ6ewTNExbtfpWFwAuAcV9zX2pQKlX3RgjK9kuf6HOruwLA3
      NSKBMCnxmfFebgcq15rcBO5LRTHU5e6zUjfw9vUlrs+Xzw5zfZ4Z7+FiMaq6IcyY7T0+fe97
      37sfKkQX0jYASAiHw4gku9sqkCHCZzMZTAwkXCtMZ0cQ8YjmpihYlnNmd1EhLFBKOdc7ZYyj
      UlBKQamHDmA78c5eigBjjOuTMYd64b3f5sZkc/dblu2MSTBOb5+mZUPyZHCwbJsbu2nZKFWb
      sGwLEt39mKZpw7TclI18qc4V3TBMi6N2UMpQ1w1Ytg22x+QVDqgcFUKVCahnnIWKjl9cmcVf
      fv+s63fqusGN0yk4YiCyx2y5slmCaVMc3eOgswW0GMBJffOX3zvrMnfnilUEFAlk70LHqGvs
      lFL87Gc/Q9OwUDh1ApcuXWpdeh9UiCKqsFCTIiiUymBqGLGwkzv0fqkQR3oTCHlc902DwrTc
      GQfCIafQm4sOIFugFJzr3DkeuOkE0g4d2p0tQQLxZJWQFccOzrnjCSB5+iQS4e+XZRAPPUK2
      nf1H2KdnTESSuKwOEnHeqTsjhqMvyLLssmRRxsDgvj8eCULyjFORZe7ZlDIM98ShKO4+lzeL
      uHi833XtdkWHTRkmh/fSTQgqDYOjQnxwO43f++YJF21iq1iH5fl2+UoTTcPC8ZHdM7+mKUhE
      Q9y7m88UIUlyq0/GGAa7HQOAvMcKmCvp0A03heaP/uOf4p/eeBff+MY3XH22vQMMjh1v/XXy
      FH8+ux8MdMU4Z1KppnNJqOq6KbQa7MnXsgftneHvHTjaAfnCfj1PaPdo1O5mSZiwTwp+azct
      CstTUC9bqsOrgjSaFqoNvkTs3eUcp9iPDSQ5hdXxjLsvNExbSFs4PdbNHTmogDqtyAS2Zy4E
      VIULvQSAV84dcelAN27cwF//3b/g6Egf/tNf/jlCIUcXmRxKwSy7y87u95Eeix/gnEAvUGQJ
      iueFiXQAAALnFPaZWPsIiujI1mbxbTHa1jT2vZ9r2WeYogcxMO5aw7RAPO+z1jS5rHSAoxx7
      j7E35jcxOdTZCoBZW1vDx++8Ab1ewZHEH2N42OEkRUIqhgR8/r5UlNNrhnviiOxRzDOZDN78
      xc9hmQb6o7+PI0eOwLIs/PSn/y+m59cQaH63dVy5cuUKtpbSeL+ZwSuvvAIAOHfuHGYzZbxy
      6ZnW5AeA2bVtzlmqyBJHGQcekye4phucIujk2/HmBmUQ6JHi1VY4gfk2BqHFFPtNwjYu+wII
      HiR89n7C197DGAP3PpngdlHUXalUgqlXUSrtWkjm5uaQXbqDax9fgWk6AjM0NITTL7yO0+ef
      b01+0zTxX//2b/DJ2/+ETz75pHX/G2+8gZ///d/gF//6i1bbtWvX8Ntf/SP+5v/7GXTdMUcO
      DAzg5e/8CM899xyOHDkCwDke/eB3/gM6j5x0ndVPnz6N6UwVp067owGPDXe5hApw5pLXY900
      bWHh8MciAP9+Y4XzhjrgrR7tZG01DAPUMtDUG60PbFkWLLMJ02jC3jkeMMZgNnVQy2h9WAC4
      fesmSDWDO3futNquXr2KytLH+M0vf966f2lpCbPX3sHtj36DTMbh1DQaDbz3618gN3MF169f
      b91/5/YtkGoGt2/vBossLS2hkVvG1K3PW32urKxg+tPf4s7V3yCdduoe6LqOd978F+RnP8Jn
      n33Wuv+NX/0Kcu4W3nzjjVbbJ598gsL8R3j7jX9u/abV1VVMffxb3P3wl1hbW2u9o9/+6ufI
      z36ITz/9dHecd+5A2p7GnTu74+zu7oaqyOjuG3Lpd1uFqiv1jKqq+P0//BMcO30Rzz33XKv9
      +5cvwwj24PLlH7baLly4gO9/59v48z/9bxAM7vE7tLnxdnR0oKczhUTCffz+4PYqF0gVjwQ4
      x6AiS0LO0CMVANumuHKbN5curBdd5riFhQXcvvpv+OjtX2Fz00myZBgGVhZnUcmtttoAYH5u
      FqhtYWFhN8PzrVu3oK9+go/ef7fVlslksDb1CeavvYN83nHV67qO6x+/j9L8h5idnW1dG4/H
      QWwdHR27W/mlS5cQ7zuC13/4e61JMDo6iskL38LZc+cxMDAAAAiFQvjWd3+MnuGjOH9+t3Rr
      R0ccxK67+oxEIlBYE7H4LqtxZGQExy++gjNnn8HgoFP8IhgM4tvf/x10DY7j4sWLrfsvX/4B
      aLgX3798udX23HPPIdU/hle//ztQVeejDw8P48Tzr+LUuWcxNOSkU9c0Da9e/l10Do7j2Wef
      bd3/4osvwgr346WXXnK9DzkYRbKz2xVTTQUm3M3tKpYEGS2agmRbd5ezXFB9vlRHqeZ2UEkS
      4TJnAI5i7jWjNg2eWzXan+COOzXd4LhmwCPWAQghnJPkypUruPnBb6Dkb+F/+M//HQBgfHwc
      Jy58E31RoLfXzdmWmvzL9bZdvHgRkTdv4JXXv++aWKOnLyEVMNHT4+TcDIVCeP6br2Pb+gCn
      Tp1q3T80PAKmxVqTZReiA7fAcyPA0PAwqBZtHRcAZ2XVIgkMDI9wwfrcYyBWgoUPF+j1jPGX
      7j/sdn0lhDvX2wKhAHMSjXl7rQpo36LsFaZJhRRty+ZZqyK6y52lHIqCFPbCmA+u5SHi3Xff
      wfytj3H16m4Q+0svvQQtOYzvXP4917X1puli9WmahuGxCUSSPS6hODoxCRZKYHx8HG60b4YR
      awa8Zr3vtGhbXxbpAILZSgiYl8i3n/7Q7rNF1wqEYt9xCiCsD9DmMRVwColwhQwFVPD96n41
      DF6oGoYF3eMYrQkcg/uN8NFygSDhX977vLU1A0C1WoXRbKBY3F3Fs9ksrFIaxdw6ymVHGTMM
      A2uLMzCqeayv75q0ZmemEWJV1xFmfn4eKc3E3NTN1ovLZrMwS2mUtzdRKpVafWYWpxBEA6ur
      u0ezO7dv4UhSdp3XFxYWkFANLEzfbBHdCoUCStkV5DYzrXGapomVhSmYtXxLL7g3zgiqmJnZ
      LWixuroK2ihgce5uq89isYjixhLym5nWOCmlqFSKsIwG6vXdlaxcLgO20Xr2V8MDaPaezY8x
      hkq5BMvUUavtnsPLlTKYrXPjpB4aiGEYaNQqaDTqMIzdnaFcb3LxDeVyGeVyxTVvWn1686LW
      BMVWBBSUa9euQf7JT37yky/94WDYWrqLqpxEVLVx+9ZtNEwg0REFY2zf7XxrawtNquDYkT50
      dzuOjrW1NZhGE2HZwuiREad3xtA0GXq6uzE80ANFUZxAC8NEsrMb48O9LcXJtCwEIx04Oe6E
      ZwIAoxQ6lTE+3Iuerk4QQpw+rZ0++3ugqmoreCPcEcfESH+rT0oZLDmAM0eHEY1Gd8cEFUeH
      +1p9UkrBCNDf34uhvu6WYJuWjWRnF44O97X6tCwTaqQDp8YGW33atg1JC2F8sAc9XandPsHQ
      39+H4X6nT8uysLQwh0gogJ5kFPG4Q/9emJ9HQJORiqjo2Xmfc3NzWM+kQYwKJsZHIUkScrkc
      Zu7eADMbGO7vRTgchmVZ+Pjqh7CNBroTYaRSqdYkqFYK6NBYS69ZWVnB7btTCBATk+POcS2f
      z2P6zk0wq4Gh/h6Ew2FQSrEwP4NIKOge58ICNFlCMqKgt7en1ZZZWwUxKzg6OgJZllGtVrG1
      vopIMID+nhRCoRBs28bVD6/AMuro6gihs7Ozdb9MgGRERt/OiWBxcRGZtVUwo4LRkWEoioJS
      qYTrn3+ORrWE0eH+1jg/uPIR1tYyGOlLIpl0vM6SJN0HFaKrE2kbYJaOWM8Q0Ky6qBD2Tpmg
      vUEUwXAUn08t4/e/81zLLV0oFHD77jQUe7jVlsvlcPXjTxDSJBwbcQSg0Wjg02ufIb2Rx3hv
      tDWJ5mbn8PGnN3G0S2t9xLtTU7j28VVsLcZwYmIchBCsr6/j6pUPHGJVfwp9fX0wDAOrKytY
      z1dRGO5q9ZlOp7G6vIqN/ljrhedzOayurEIzqzh+dBSEEFQrFawuL0ORJZw80t+arLlsFvl8
      BdVKX6vP7e0C8rk8CtvbrT4rlQpy+Txiqg3rqDNZG40GctkcJEmC3hiEqqqglCIUDkOr2a1n
      AI4OI6sBhILBVlskEkHfwCB6e+MtikgwGMTY2LjDqw8EnMIWlGJsdBRyOIlEItG6v7+vH0cn
      6ujv73f1eeHcMxju6Wj1GQgEMDY2CsZ2+2SMoauzG1VLRSQScY9TCyIU2h1nIpHA+NGJls/A
      sizIsoxUZxdsSlu/kzGGsdFRsEACyWTSdX8skUQymWq1xeNxjIyOY2CnFJRlWVAUBRNjR2Da
      NjRtl1ozMjQIUwojFou12hhj7ZPh0lsFlPObqJsEdiWLUCy5k0nA+Yh/93d/i3/8h/+Kqakp
      KDuFKgKaikhIhbpTZEJRFDz77LNoap148ZXXW22jo6NIHDmNI5Mn0dPbC0VREIvFcOq5b0GJ
      9+PkyZOta5974UUsVx0rzb22l19+GUW5E6/84A9abRMTE0hOXsCR46cxOOgUv1BVFQ0qY25l
      DaFQqHVtMBzGh3emEI3FWm2hcBh35pdgy0qLYkEkCel8ERvZrRZ1QZIkrGfzuDM9A8M0W/ev
      ZzKYnr6Lzc3NVluxUMDczDSWlpZalARd1zG/uICF+Rk0jV1Kwc0bNzB15xY21tdb92ezW0in
      V5HLZlttlXIZ6bU1pNPpVp+Neh1zszOYm5lBo9Fwxk4I5mZnMTszi3w+37o/l80ivZZGdm+f
      lQrSa2vI7OnTMAxk0mlk0mswdsZJCMHcnNNnLpfbM84s1lbXkN3y9JlOI51Otwp3mKaJdHoN
      6bU0jGZzJ7uG7Fy3toZyudy6P722htmZWawsL7faJMmpgnOPhnLvfrKjrN8buyzLjpa3c1q5
      dy0h5D6yQoyf2Dl2RDE2cRzdyV1XdSwWw1/8+Z/jL//iL3DmzK6jolGr4E++92zrbAs4O4Bk
      N1DIu2m5Iv46YbzVAQAkjyfL+cFsh6pM9rRJAHY5IqqqYmR8EpFUD/r6dr3RRycmgUAKR4/u
      Vp8cGhpCoKMLY5PHW0e8np4edI6cwMDIeGv30TQNx85ehBrvcSnm33r1Naw1Q/j2q6+22s6d
      P49msAvPffP11kQfHBxE58QF9I9OtsakaRpOP/8yanIEp07vlliKxjpwaz6DWMeeiDhCsLGV
      5awmhYruOi8zxrBdKCCfz6KxR6/I5rIo5rPIZne/h2kYqNfrqNfqLZ3Ktm2nrV53+VXK5RL0
      egWNxq55s1IuI5/Polwu8X3WPX3WnDZrT5+Neh2Nulsv2PkVrr+283kszM1hfn6utao3dR2Z
      TBrrmUxrTIwxLC7MY2lxAdmt3ZjmTDr9aJXgCxcu4FsvfwMnT+6WJd3Y2MBoXwKFrd1i1wsL
      C1i5/SFuf/ZRy+ZfrVbx0du/xNbqHG7cuNG69vpnnwKVTXz++efuh1HelkEoAfEKCyMg1Gtx
      AQgVVYwlIMyT8nA/yoXAakEElA0Rv8gR9D1/E4JAMAxZ1qBpu1TfY8ePw1Q7cOz4bgTWsWPH
      QCLdOHPhUkuount60D12Br2Doy3dS9M0PPvN78IKdePcHn/FhYsXcWejgQsXd30DgWAQa5t5
      UFlrLR6GYWA7n8N2Lotm0+ETKYqCiVMXkdcVTE5Otu5/7TuvY7UWwqvf+W6rjTKGrWwOtcau
      cmsYBvLbeWznt1p97nkJrj9tSrG5lXNxnpy0jNQVjWfZNuq1Guq1GsfYvcfQbY2J0q+fC3Ty
      5EmXQACOH+DHv//HSMaC6O11Plg0GsXv/sEf453ry3jmmd08+4NDw5CTY+jv303F8eGHH6Ky
      uYS3/vXnOPY//veQJAmLi4uYu/4+girBN89PtHSA+albqOQyWFtba9n9DcMAmA3DMFwTTghG
      OC4FYRInaIBYAEB5PwIRmCcJ44XXeb5oUPvYR7km3gTc0REHpAA64ru7ysjICAIdPZg4ftq1
      U/WdfAmsutnybRBCEEskoASCLYNE69GeBx07dgxq/AbOXnyx9Y4HBgYwdOobaBYzGBkZafXJ
      ZA3pjSwCe77FCy+8gP/zlzfx4ktuNifZJ6EAF0wEPm4aOEDJcVOxEGIht/fu6GCS45kPDvRj
      bPRIy7kFON7MjvEXcfnHf9A6royNjWHi4rdx9huXW0cLQgjC0RikWL/LHf/+v78H0ijjgw8+
      aLVdvXoV5fUFFxVieXkZc9few+3PPmyZZhuNBv791/+K3NId1660MD8PYpQxPz/fastkMmiW
      81ian22tWqVSCfn1FeQ2MqhU3J5KIWfvS95j6zqhzZ+I28ReBzG8grrf8wVtisynrpFld5IC
      SZLw7HPPI9EziDGPr8c03aGf5XIZlWIO2a3N1jcCxHlRJZkv5AEcIAE4caQLQ55oo1rD5Ara
      AYAsEOWAqnCRSU4ypN2/VVVF/9ARhBK96OraTQn+2ne+C9p5HK/uOa9funQJHeMv4fUf/n6L
      CjEyMoKJC9/GqZd+1BKqYDCIl1//IVInXnXtVJTaYIG4a3umlIIG4q58mfecS7YabX3cZrOJ
      j979DQrpGdy6tVt66d133oZcSePdd95pteVyORjVItbTq57AfML72xgEpMF9vWNieD3O++w+
      Xro7IPbaKhKBInuPOwy2IHFBPBp0rfbnL1yAmjyCb37nBy42qCy7Q0cJIYjGk9jMFRCLuWnW
      B0YARFAUCTEPp0NVZDwjSHEXDalcMiVVlrkEXPuvdgL/sGdu3EuzsjfdSuv/e1KwTEweAwv3
      uM7GQ0NDCCYHMT55orVTJRIJdA2OoWdovMUb0jQN55//BjrGnsexY7vn/UuXXoTV+QwuXXqh
      1VatVmFARamw3RKA1dVV3P3kt7jz+acuMtzbb/4ztlenXWQ4ArGhQfRKRNeJciKBAJGgysma
      qkjcIiUSv3BQRUIQZ+xNAUkIQTQcQDikud69YVLXDkAIwYvPP4sXLp5x0V3KlcrBFoBwQOXy
      AgHgqicCzvbq3Rn6u2JcjkhNkVy5bu5h/5BgnmbMrZf7LaL3RTtwr1iBYAiSEnDpJMFQEJBV
      5393MDo6ikj3KE6cOd86rw8PD+Pk86/hxIs/5MhwiWPfdJHh3njzVwg0t/DGG79qtTUaDTCr
      iUa16tpVvDuqZVm4de0T1HJrmJvbTWPy5htvINDM4s09fQIOb8hLe5AkPi9qOKAiFeMzVWiK
      xAlh03TTK6htg9kGmG3CdmUFJxxD9LXXXjvYAiCCLBFhLsrTYz1cQb1kNMjl5gmoCpfxDHDC
      Bb0gguS4wsl+PxwdoVTsp8C2HT7Wdqu37fLlH8DqfgaXL/+g1ba0tIRquYip259zcbl7J6Ak
      SRgdG0XHwGTL2ef0eRmvfP/38KMf/ajVdu3aNeRWpvHur/+1FQ8AAAnBNyrWdKx6MjjcvXsX
      zfKWi7YNOBFlewOpYh0dCHUOQ1IDSCR344wrjSZm1/gEXu0JAGNYmLnrZIKgBm7fuoXltYdb
      IKNdMAY+uxmAI31xqJ5JXKk3+UzOpPVfLSiShMFuPgRPkSSOlivKNieyMBAAEhG9XoG1SHDV
      fhBZMgh/3N/nXn7sABAOaq5RnDx5EvHhM3jupVdaO1ClUkFxcxXF3EaL4yNJErp7+qCFd+kF
      9/DhnbSLo3PhwgWMnn8VP/jdP2wZIDKZDK6+8wY++/gKVlZ2S8paFuXqvUUiEXQNjCIWde/o
      iWjQtbIHg0H09Q+gq6vbZZkKqE6csRdtB8UroRgYc7Rw2zRhmNZXzgrxoDjSE+NWpjOjXYCn
      IMS3zzmmtb1tMnG2Uvf9FBcmerk+AT4rxL0twJt9AsyT1cGywcBnhSBgXFYLxigYc4/pnqLs
      zl5hg937X2mPkshEfTJQ7/MZAyHuTBE2pTuZLizs9YsSQoA9WS1M04RtmbDlKExztxgIFYyT
      MYZcqQ7TtFzZGpLRIDRl9/nd3d249Mr30DSsFhXDtm28/etfYjs9h88++6xlWBgYGECNzGFg
      cIgrgtI03cVJqvUmGrrhyYhhommY3Pdomwsk2Tqo1oF6XUcwFEQoFPjKBTIeJ5IdYQz3xt3Z
      FqiFW4tZLgtBOKgi7MlKEY8EuUwVQU2F5imkodoM4YDK9em44j1FN4jUoge0rpP5NpsBMghk
      TwYHRZYFRTckrkCGJEkg8GS/2EkV6dA9dr+jLEtQ1d2CJalUCkePn4JNqeu4IyoOwhjD6dFu
      aJrqMj06MQLuMekmhW7QFrFQlmV841uvYcXowunTp13XOjWW3eOMhQMIBdzf4+RoD1ZR8mTu
      sGBRPktHewJACIZGJ1p/HjvBK6aHBZ0dIbx6/oirjUjESeXnQTSkISBQmL0QFd0AIcI0hLLE
      F88T5q5nYtsMFWQEcNKr81nkvH2KUrsT4iS88l5rC3KoVhsGZ56kjMKbFxUAtgo14cnA+6s4
      7z0hiMWiCIbCCAT4es7eM2BQU7h3v1mocTlpg5o408ShU4IfFKoiIxnjC12LalRNDKYQ0NyW
      A9FklyWxk0WUnSwS1HglXKBYO+ZFXv/ojEf4SSQUIF6FdiarN+4ayOTK3GSNR4Jc5RXRcyTi
      5DTyQmRoCAdVzgzal4pxEzOgyJxPyLk26vrl169fx7Wr7+Pn//D3Li4SIXwWOJEVCDhA6dEf
      JyRC8MLJQa5dtIr94NIE93JVReZWewLng3tBCF8oQpYJpDZKOYE5sa3eVObC3KQCxZhS/joC
      IOKxowNOwRGxsu++X1Uk4S4pyhW0VaihVGu6ql/WdIPL4BAMKMKEvd4gl/Pnz6PIEjg/0YfQ
      HtNwOKCitmdMlFL87Kc/xepGHmHVoVXcw1O3A4ggSQSnx3q49j99/QwSnnJM4aDKrW5D3R34
      8YuTrjZJIlzOS8BZGTmPNXhabiigIOJZsQhxVmbvDhALOxn0vM/xjlPiTxCOUi2oY1Co6JwF
      zcnd5B6pqGQUAHzr3AgnwIlokBunRHg/gCJLnoqXDnqSEU6q7y5nubplQU1xeYIlScLv/MEf
      offUt1yTH/AF4AuRiAa/NB894FQ+yXhSoUsSwfgAn0GPgef4dMbDnA6yn8lSdNQSxemLYm1D
      ARVRj82dEKdOsfdJAVXhyow64czuK5OxEE4IKs3fmt/ijlsBVeb0n1hY47JQN00LK5t82OdQ
      d4wTfiog4naEA9AEBo2z4wekSN6ThpCmYtSTzpsxCNNwjPTEuaORUyPZrS90hAMY8JyNCdkp
      lO2ZrfFIgPOOBwMKlwcnGQ1iSKQICmT89WfH0OvxoiuyzO1ekiRW9sueFIyAY7HxCnAiFkLK
      UwqKMcC0+V3FUdbdbd99dozz9ougGxamVnJcuy8ADwHBgMIV9wDEZVJff3aMVy73YeO061/p
      TUX44w7hdYjtSoPL709AHE+sZwDTKzk+FbtgkKoscYIKAP/lxxe5yc4Y4yZwvlTnEluZlo1i
      hS9mcfVumgts/2Q640rWBQCFaoOrRqnKsnOE8sAXgEcEWZbwP/3RJa79javznIkuHg0KjwGi
      xMANw+LOO4loiF9Zo0HEPYpkMhbCxGCK61PksJ4YTHEUBRHjw7BsrvAEcK+YhXugls07Tbcr
      DeTL7hw+++0q4YDKLRWD3R2c8GfyFa6Uk5Na/qtWiGEMS3PTWFhOA4xibuoOcsX2qvA9DWg0
      TUx7C8UxhvkMT+U+PdrNfbCOsMadzbviYa4oNiHA5GCKW0VLNZ0rxtERCXDZ0WQB8QxwTLPe
      qf35/CbKnoxtiWiQU04JCGxBAte/+v4zPMktqHI6QHc8jF7PyhzSVKGgvn9rlfN3qLLE7XQ9
      iSg6PO9TtEu/9dZb7VMhpEAEhFmAVUe+okON1pCMhR8LFeKgQZGAoa4o52bvCKlcW1CTQKmN
      vc3JaACS5KZCqDLB8eEUd/9/+sEzruAPAABjsG134YvuuKPY7m1TJIKjAwmOthALa7BtC2xP
      qOi5oz0IBxSOsuEt+qEqBM+Md3PjnF3LIxkNuIQ1pMmAp+jG5KAzKfe2lWsN3FrcwqvnR1x9
      DnRFdygfu/NtaaOII70diAZ3p3IiqqGkut9ns2kiky3DmtxVhF977bX2qRAwG2BaDDXDMUcR
      STqUVIhHBZU/7qMnxZ+NTxzhza19XR07FAX3exR9HFHb68+OIxENury825UmJOIeg2IzjjJB
      GXOoHbLbozo+mEIk5FZak7EQbA+dgEgUqY4wR4UIBVTIiuzyeZTrJmzmpmJMr+RgWBRnx3ff
      iywrjsnVY8kZ7OILeUSCWivrCOBUifzlG2+hWCygr6erVSgvEHDo8V+ZCjEyvmvnHps4/gUX
      +7hfaG3QLb4IIhrHiSO8adKynUJxe30eBI4p0nu4F0Vv9aViXJtuWLixsIXXLoxyz/Lim8+M
      cH4VUWxGKhbEf3ztNNeeyZc5k2dXIozgHn2hv78f/+GP/gSmTdGT2HO0YgJvOQDCHvD8Ytu2
      vwMcEtwr0Ld3BWWMod60EA4orgkytZLDWF/CFWU3n94GZQyTQ514WKg2DFDKOCOACJ9MZ3Bx
      sv9LfTNLG0XohuXyT5iWjfl0gVsYfCvQUwRCeCIeAE7ZBYDRvgRXsiocVDkfBmOMq/XAGMOd
      pSy3W6SzZS5YPRriHWH7odq4RwPZxfRKzpVUGXAiBiOeccr7xHz4AuADloC0F9QUjrMkiqYz
      LSq0dhWrOuedFjE37wevnh/lBHisP8mNqVw3ON+ARSlWPD4QwD8C+bgPVBsGwBhnsm0XpmVD
      kd0kO7rD43gQwfDinql0r7AYlo3ZtTxOj7qNEP4O4KNtREO8v+J+MJfe5pifm9tVZDyUEcO0
      MS2gLbQLWZK4nUJTZG7yA/4O4OMAgjIGvWkJ6eQPG74A+Hgq4CQgEwTKGkUj6AAABx1JREFU
      tHk3Zu7cxNTcIgBgfWkas6ubX3KTDx8HB6ZFcWOBn7NtUyEC0QQYs2EbNSwsZxBIAfZAl0+F
      8HHgkCvVYVg2BvZEnknEyRzCZelo7wjEsJlZBVNjiIU1hIMaKg0DHdGIfwTyceBwj3Uq8jJ7
      4esAPp5q+GZQH081fAHw8VTDFwAfTzV8AfDxVMMXAB9PNXwB8PFUwxcAH0812qZCzE7dxsz8
      MsBsLMzuZIjw4eOQo30qRCQOxmwAEiKRCIIdqcdWIMOHj4eFtoPiVZiggRhq1RLy20UklRDi
      OyVnfE+wj8MKnwrh46mGrwT7eKrhC4CPpxq+APh4quELgI+nGm0LQL1aRl130nVXSgU0BcWq
      ffg4bGjbEZZZ38Da2iqY1UBmaxtra74jzMfhR9tVIokkQQJAbRuSrLgqgPvwcVjRtiOst6sT
      TA3DYBRd8TBCMb4kkA8fhw0P5Ai7R4XwFnR2akHxqe5E7ffTBvAprv0+/T4fpM8H9gSLBIBS
      Kizzud+17bY97D73e7l+n09+n4wxSJIE+Sc/+clP8AAghKBa2sZWoYJoWMXU7AJ6urtgmzoW
      lzOIyiZuzq4h1dUJRQKWZmcR6IhjceYu1HAcwYCKbGYVOpWxmV7CRr6Enq4UauUCtvJlNMrb
      WN3IobuzE7bZxMLSGlRiYm5xFYnOTiiEYWFuFtWmiczyAqRAByIhDRvpZWSyRViVTZiBToQ1
      CeVCDnPzy2DMwkp6A12dnaBGA9PTs7BsCytLS4gmu6HJDIvzc6g1KYxiBhUSRSyoYjO9gnS2
      gGphEzUDiMciqBRzmJtbAoONza0Cksk4bLOBmelZNJpNLM/PQYt3IqwSLM7PodrQkV5eAVUC
      iEVC2MysIr25jer2FipNikRHFJViDrOzS6DMwGomi87OFKjZwPT0DCgj2MxuI5WIg4A6feoG
      ttbWYEBBRzSMzcwK0pvbaFYKyJZq6EzGUS3mMTO7iERXClPTs+jp7gK1dMxMz4BZJmaWMkik
      ktBkgqWFWZR1C9n0CogWQTioYWt9Fasb26iXc1jd3EZvdxeqpTymZxZhUxOr6Q2kOrsA2+mz
      rjexll5HLJ6ApsioFbaQKVSwtboISwohFgmCWjqmZpeAZhG6FEEkoIAxhqm7d6FKDAvLq0h2
      dkOWgMzCXdRZECvzswhEEwhqCurFHNL5Clg9j+2mgngkAGo3MTW7CL1SQKluIhF3inpMT92F
      KgMr6SxSnUlIBFhfnHo4foBoPAWJmUivrMDcYYcqWgihoAJdNwBYcAqGSEjFI2jUCyhUTDR0
      p8J3KpmEZdsYGuhFR9zRLSIdSUiw0Gg0oDcaYGBQtCDCIRWWZQONPDbLFgAJyVQSCqsj0XcM
      1ZKTVDUeTyAcDqE3FUN9JxdSJBpDNBpGPB5HOOxUVZG1IBKJGKLxDtBmEzZjTp/JBFTJRqFQ
      QLnu5J+PJxIIh0IwmgZMy2kLRzsQjUaQ3dpCs6mDUgZZDSKR6EAi1YVkZyc6gmprnAFNRkPX
      oTf0nXHGEQ6FYNk2NjedzGXhSARGU0etSZGKqjBsBkUNQpUYoAQR1HY+G5ERDgXQNGykOpOt
      YhaRSAS63kQkHIbedEzXoUgEhq4js7oCw3ZqfclKAKrMUK3qILCcYndEQjgURLOWxda23vpG
      kXAEelPH4MAA4jvfKByJwGzqaDQaaOqNVp+aAue7G2VsFutg1EY6W4RZTiOYGoVeKwBgWF1Z
      hc1sdCXj0E0no3Mxm0FFNxCKxBCJRJw6Z3oVxWIBTUkDsS1YlO70WYBRzSOb20a9oTt9Lq/A
      ZhSGsfuNitl1VBoG0uubsEwdlsVgNWsoFAoPRwBK21vIrG9C0oKwmgYYAFOvIZPOoGoRaMxy
      qhgyG+n1DZSqNuJRxZnIADY317GxmUWhrGOgx3m55e0sMusboESGvFPXyWw6fRqUwFbj6I0p
      ADWwuLQGJkeQT08jFHUKVq8sL6PZNLC2nsX21gYAYCOziqquY3nJ+TeAQa9sY32rgEqxBDmg
      OqV9mInF5TUYpgUlEAJsZxItLy+haTQRCodhmc7L3UyvotrQ0ZnqhE1tMAY0qwWkN/OwbQta
      IOJUS2QWlpZWYRom1EAQ0k7trZWVZTQNA+FwCJ2dTvWSSrkMTZMhE4ZcSYcmExh6DSaVYNRK
      yKQzKNcNMGqhWm9AIgYWF9daZYnK5TJkRUa5UoGys/1Xy2VoAQWyFgazDNiUwdTrMKgEKaBC
      Iwym7UysSq0OWetAVyLQ+kblchmKLKNYrqGvp9M1TkYUKKoCMMBs1tG0CUKhAJgcRk8iDIAh
      pCkwSRTVrQVowQ5HKENhGE0D6xubyO58I1kNQCUUS0tLqOlNgDFQRqAFQ6gXcoAityrQBzUF
      TZNCCwZBdyZ7KOz0GQwFYZnOyqdoTp/xRBKUOsLPdvr8/wEu6mZuBeZOLwAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Improvement by previous time (exc. outliers)' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Improvement by previous time (exc. outliers) (2)' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Improvement by temp (exc. outliers)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Improvement by wind (exc. outliers)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Participants' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Participants by Age-Group' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29149cWZ7n97n+xg1v01smTbHI8l1dNT2mjTQz0LQ0uyP1SBC0mn2QAL0I
      EvQXzJOkhQDpRXoXVhCgB2GB1c4uRsKix/TMdHd1VbO6ilV0yTTMzPDe3rhWD0mymMUkMwyT
      jEzGByDAiLzn3BMR93vszwi+7/tMmfKaIr7qBkyZ8ip5YQJwXfdFVTVlyktjOgJMea2ZCmDK
      a81UAFNea6YCmPJaMxXAlNeaqQCmvNbIJ13QbdWpdWzCGuQqHRIhmbYtIlotwolZdCOIoZ1Y
      zZQpE4lw0kmw7/vkslkc18VQoNiFoOxidVt0LIFoIsXKwgyu6yIIwkiNsC2L3ub9kco+QgyH
      kEe8P4AvHpYVvNEPxj1JQhzzPGTcOg4/h4Dgea+sDS+ijpfVhhO77najwoO9PeZmZ8mWOwQD
      Mu2exIWlFQqVGs12B1EU8X0fSZJGamiv2aT93/8PI5V9hPH93yGmjj4SWaoGAqj9/sh1tCNR
      Qs3GyOVfRB22ouJJEprZe2VteBF1vKw2nPjEhGMpPvoodezfVkLR0Vr2EmmZJp8/2MO0bdbT
      aRbjMTRFedXNmjIhnPvJ+5f7B5i2jet7fLm/T8s0eWd56VU365n4goAnjr434YkiHcPAGnE0
      BjADAfwxpx8tx6PXt0cub9nOWOUHrePcCyCoqZRaLT5cX6PQaGLa432pz8OVZTrhyFh11Bst
      yl/dHrm8bxgI1SpSpTJyHc7qKr2dnZHLP6rDGaMOZ3UV95jyYjiMuraKW63hOw5et4vXbA5V
      h7q+jlMoHK4bR27hS0CMRFDX13DrdXzTxOt08Vqtoep4e2mJt5cOe/y56POnbMVGG7HbHbm9
      VquL8ItPRi4P4K6uIB8cPPW+srSIGIkiyDJOuYxTLMIxYvbCIXxVG6sNk4zX6SDoAcSghRgK
      4VsW5s2bMIxVv++hXX0DQdMmWwBes4lbrSGoCvLCIr5tYX55/IftWDZOzxz5Xm7AxfniJmK9
      fvQPsox+5Qq+beH74FYruOXje1dvdRV5XPeKZxT3Wm2kVArfslDmZhF1Hev+eDtnZxEpGgHP
      xc7lkKIRlMVFBFnGH3Rkl0QQJbxmC69XmGwB8HBb07q/hbK4gLK6iqCq+Mfs1LjZPNYYQ64X
      jT6+3xEcB9+xQZIQdR0pHKZv9vHa7ZHvNQpiLIZvmtgHWUTDQAwaz7zWNwJ4ZnDke/kBHS84
      evkXUYevHz+KubU6vU8/Aw47SHtvf7iKXe+wE2u1wfcnXAC+j/3gAQD23v7wHxZAFA//+T6M
      sLATNA1BUXCKJXzXRZ6ZOazv2HsJ+PKYX6l4/FmG/YS4nzXnfcRf//G/R9d1Rm5CXFGp2dbI
      5V9EHUlZQX73+lhtWK81icjP2AxIJoHXYBGsX72K22igrCzjVir0790DZ3Ah+P3+4bTrIW65
      /Mxry4sL/PoPfzhWe+dtD++9t0YuL8kKHcemPYYANFGk5Yy3WTBuHZooUg4FxmpDPRGjvDTz
      3GvOvQC8Xhd5bhb7IIucTKJfvYr5xZfHXvt3/9mf0h9j+0+XZWrm6ItoAEnVKMdH30nSRenY
      H9XzPLY+/4JoOoVtmkTSKUKx2FB1m50OjVKZQDhEIBQCQNHO9oL7/Aug3cHrdHEbDdxiEeE5
      c+eKY481dUg9Y/pi9Uw6zSZaQEcNHPZq8ks+jHMdh069TiAUpFYo0qrVWb12Fc149vfxbQo7
      u+jBILnN+/g+ZFaWic/ODGUCU9jZRdU12rU6yYV5AuHwUOUd22bv1m2i6RSiKKEGdIzI6B3G
      xAjAG+KHOJZnHPw4hcLj//sAnc7QVR/cvYcky1imSTSdIppOD1U+t7WFHgyS39pClGTm1teI
      pJLDteHeJgC9VovE3BzhRAJFUwcuLwBGNIIoScysrlB6sEen0RxKAOF4nOzmfRavXKa0t8/e
      rdvEZ58/xXgS13E4uHuPuQvrlB7sY3a6zG9cIBgb3KIgt3kfx7JolCp0m00CoRBrb11HeEbn
      cxz57R30YJBeuz0ZAnBlmb/4s/9krDo++Pou86ewLdjv9WhVa6gBnX6nS6feQNF1jHB44DqC
      0Si5rW0WLl6gvHfAzpc3eesHvzdUO6yeiSiJ+J5Hbmsbs91m/uLGwOVlVeXi++89fp1eWhzq
      /gDBWJTFy5cIJ+KE4jG6jecvxr+NIIoYkQjdZpPlN9+gli9QKxSGEoARjdIolUkvL6EGdPL3
      t1m8cglV1wcqb1sW+7fvMLdxgeLO7mQIAPyxF13ZjXXy6eF61SdRlON7U9/zECWRYCRCLJOm
      cpDFHfI02YhEDnv9ZJJwMkmrUh26fYFQkE6jweyFddrVGtYYZx6johnGkRFj2FFMFEWufPTh
      49epxYWh25CcnyM5PwdALJNhYYhO4FEbAuEIVrfH4uVLkyKA8anoKmVx9LlgQJI4bhDVg0Eu
      feeDx68Tc3ND121EwhiRb0aMxNzs0HXMrq89/n84Hn/utSFZQRzDNFwTR7cjmnQkWeaNjz9E
      eLiVPbAAirk9am2bkC7QsQUku00wOkM4Hic4dYiZKH75YI9yb/TdqPdmZgkb421BCsd2J5OB
      +MR6ceAn1/M8WrUiXnIeQ/FwHZF8IUerZ3JhZQHP8xg1yqLrju68cRJbn3+BZgSo5QvEZjLM
      rq0hq8fvwDSbHVpjHN7ohketO/wi+0kSCRlVGN0aVBFFTMeh64y+m5Vvt/m7gxEOHZ/gP756
      lag0+k5XUJSxpfGeC3mA73FgARgBAyOSIiw7dGyRlfkFAq0ujU5/bIcYSTo912Q1EKDbbBJK
      xGmUyjiWzer1N4+99k6tQtUcfW5tRm02G/WTL3wOElAcwyAv9Iy1zMvms4PsWN/FRjQ29nf5
      w7U1kJ4/Eg0sgEgizdXE0e2/uVCU4WfELxdZkTGiUWLpNPGZDL32eD30adOxbXJjjCIR1UaX
      plNSANty6LivuT/Ak4tHYOg9/Clnl1y7deIoMrEC6LXb5Da3yKwsUcnmsPt9JFkmubBAJJl4
      1c2bck6YWAEEQiGMSJhQPE67VicYjVA+yLL9xZe89Xu/+9TJnyZIYy269DFcCKecXSZWAJ1G
      g3qxhChLNEplVq5dJRAOUznIctwO21atyifZ7Mj3i2v6se4AQVXl6uwcpm0jiiLFVovckNEK
      NlJpQpqGgECrb1Jst2iOsdgeFlkUuZjOsF0psxSP0zL7aLJMs29SG2PBfR6YWAEEo9HHp4aZ
      5eUj779MbNfD9TzCmo7tuawlkpi2TW2IffaebbMcT5BrNkgFQ0QDAT7be3CKrT6K43n0LAvT
      cbBdF1WWmI1EyPhhbuzv4QwQQ0iVJDRZxvU8fCAWMCh32vi+P1D5SWViBTApuP7h+caNgz0C
      isJMOII9pMm05TpkG3V2qlVCmsrMkI7z68kUXctiOR7Hdl3molFu5fPs1qp4A5y9KJLEajKF
      6/usJVN8tvcAz/dZjidQJGmgB1hXFJJGkFa/j64orCWSLMZi3CsVqfdGj0H0qpkK4ARcz+PG
      w0Ohnm1THWHKUGq3KT10oTQdm/KQFqm5ZoOoHqDa7SKLIgf1OrORCKosc6dYOLG87br89eZd
      APbqNQCapsn+t/2fn4Pr+cQCBq1+n4iuc6uQZz2ZZC2Z4sb+3kB1LMXi5JsNNtIZqt0OAUWh
      0unQGiMY2bhMBXAGmItE0WSZjmVR63WxHAddUUY+eR8FQYBss47juZRaLeq9Lr/e76IN4QIq
      CgKyJFHtdliKxdFkhYQR5Kt8jv4AJ9eKJBEPGDieS8II0rNtGmYP1/PojRjuZiqAM8BW5Wk3
      zJfda7b7fdrH3NOxBjMdEYDleBxDVVmOx/l07wGGorKSSJAwDHIn+DnDoYBCmka50yYVCuH7
      PktCnGKrdex3dBwz4TCVToeL6QwHjfpUAFNeDj7ws61Df41bhTwAFTqPp2SDoMkyq4kkrueh
      ShK/3t9jOZ5gNZEcSAACkDCC1LpdFEni2uz8+RZAQFGwXRdNljFtm7gRpGH2hl7ETpkM2v0+
      P9vaxPM8Dhp1HM/j63yOO4WT10GPiOoBUsEQAkzSCCAQFsY7iHKOORxIBUOYjk1E12n3+7y3
      uMxWpcx2pYJ1jO/ve0mDjj26YZ6h6lTM8ZzElemB3DPxfB/vUef1xPrH9QfbhvWBW4UcluvS
      6vdp983JEIDrefybe/fGqmMj+nSEg65lYagqPcvG9+FOsUAyGORCKvV4GH6Sf7rwKTKjh+Tu
      Cev80/nRY3IC/EXxCreGdxibMiCNxweQh4vmgQWQ29uh3Ohg6Cp9F2S3gxZMk5qdmViHGFWW
      8HwfURQQfNiv1yi2WgP3GMMiYKOMIaBHdYzL78+L9OzRR5I+IpvjfYwzw8BPrus6OLaDHwoT
      VH0Ex6Nar9C1LC5fWBnLIcY7pZPE43YWrAmf/4dVlZXw6NOooKLwB8nPUBh8cfltPmtd5S84
      2/F+BmVgAQQCBnrfw1DAdGTmM3OEYja1Zm9shxhxjHj4543fiuf4Qezp6NCD4hHEHzP34aLh
      819fHm8k+qvSWMVfGgMLIDkzT/JbIWB0IDG1TH6hCHiIjO7O6OEA43mFReU234sOdrr7LH5W
      /t2xyr8spl3vlNeayVy9Tjnz/GTZ4o/nRje1NgWDf3Z8CNcXylQAU06FBfUAXRl9GlV0LWC4
      4L2jMBXAlIkkIDH2QrzpySwGnh8y8dwIYM5QSGqjZyQJyk8vHPuWy9/+KscH19L8zSdZgoaM
      pkosz4VYXRzMpv9Brk290UeSBB7k2pimw+JsiLeuJNHU6anvs1AEh+9Fb5584XMwhQZ6/Pmj
      0LkRwPvRAz6KfDVyeYcI3/a11FSJ+YxBOKgQ0GVmUgb5UpdPb5ZIxgOEgyf7IC/NBml3bIIB
      mTc34uRKXXKlLpbj8b33hg+ROOXFcm4EcBr0TIe9/KEji6aKrC9FmE0ZbO010bXBeu+tvSbZ
      YodQUEGRRC6uRlmaC9FsDR6B7tb9GulEgJ39JpoqUaz2eHMjQTqhDxRUzLJd/v6zPO++meLn
      NwoYuoyuScymDFYWBo9yfR6ZCuA5BHSZP/yd5SPvhQyFTHLwuJkXlqNcWH7aj3k+M/h0bXEm
      SK3ZZ3UxTK7UpdGy+M3tCpfXY6wO8ACrikQmGSAaUvF9CIcUiuUe+XKXZFwnZLzcZB2TxFQA
      Z4A7O3VqjT7trs3ltTjvv5mmUO5Sb/ZhAAGYfYft/Rae56OpIqsLYWaSBvd2GsinGJbyLDAV
      wBngg2uZp94bZuqiazI//sHK0TejsDAz+Ci0n29TrpnMZ4L8/PM8+DCXMbh+OUlgQo0hB+H1
      lv+UgVmcDaHIIn/zSZZqvc9cxiBf6vHZl2fE6OcZnF3pTnmpbO83yRW7/Mnvr1Gs9NA0iaXZ
      ELXmq4vo8CIYWAD1Sol62ySdiNL3RLB7hGMxfCRUeTIHkrvbdTLJAPv5DsvzIX5zu8KV9RiJ
      mI40RFK1KbC2GGHt4dnH3BML+LkBF/O+7/P5rQpvXIjxi8+LzM8YdLoOCzPBoTYVXjQDCyAU
      iVGp7ZIrlvA9F7tb40E2xtLKAvGwge/7uCPa2p9WeI9kXKfdtYlHNRoti2yxg9l3uboRY2Em
      dCr3nPJswkGFTteh2jCJhBSyxQ6lao+P35khHHo1eQ0G7roFr48WiiH6Hq4vsLyyjiI5PNjb
      f5znVRCEkf6dFpu7DW5v1bm9VSNb7PDhWxkMXaJQPruRzM4qvg9fb1Z5kGsRj2ioisTl9TiO
      41EdcBrV7Tns7DcplLv84vMCt7dqlGsmzfboWX2GiGqkMZcJ4sYM+q6ArspcuRyjY1qPH+RR
      HVuOE0FE13lzdo5yu42mKAgcenMV262BA7p+9+2nc9iuPceEoevPIPmjm1PYYgrXG9PjTHp1
      04HTRBQF/oMfrT31/sWVwWO9CgK0OjbZYpeALrOXa7O522RxNsg7b6ROLO/7Prbjocgivb6L
      IouDC0B6mNlc0o0j7haR0Okcopi2Q6ndJqiqqLJM0zSJBgIkDIOf72yfyj1v3fz/cMziyOW1
      6Jv0G6ObYwCsXfoRwZcb//fM0OrY3Pi6zAfX03y1WeNHHy9wd7vB15u1AQUAf/WLA955I8VX
      96romjy5u0CJoEFI08g2GsxFIjyoVdHbCovHRH84T9S7At3e6D+LIMksn9MkOJlkgP/8H18G
      4OrGoSviR+/ofPTOYNnqRVFgZT5M13So1PsszSmTK4B8s0n+oVN7sd0CDoPTnvd49t1WjtoY
      o4ikxpHk38Z3RndqD4RkZs/hTMx1PfLlLquLES4sR7i8HptcAUwZncLBZzi90ZOFZJY+PpcC
      kCSR73/3MDv9IxuqydzAnzLlJTEVwJTXmiNTIN/38V0H2xfQlLM1O3IJYgmDLYaeVX7KIbar
      UO6OtxUVNM5G33rkKbfNGv/HP/9/2Lh2ld/73oevqk0jUSjs8unmvx25vKydvI32utDtVLiT
      /dux6nj7vX90mPZ+wjkiAEnS+ODjj1hfW3hV7RkZ33fw3dFPeD3XPNVT6SmTyZFxShAlqoU9
      cuWTs3VMmXIeODICuI7J/e0SRiQLZ3AUmDI5NEyDjj/GOkIJor+E+LxHBCArQcJaCwLTgJ9w
      uClQbznEwjL7+T7RiAw+qKqIrp6NRd6rInfwm7HMQkLJd5hZP30L0SMCcKwWRmyZudRweWzP
      K47js5/v0+64VOoOjbZLp+uSjCtcWNIHWjMUKhattotpeQR0kf18n3RCYWM5gKpMRfQsfERq
      /fFsOhTtZAEdEYAoB8BpU6o2WJ4/enPL7LCfr5KM6nRsEcFqE01mECUV/ZwGeBJFAc8Hy/ax
      bI9oWEEUYXvfZDalEjJO/tyZhELP9GhUHdpdgUxSpVq3ub3V5a3LU5+EZ+E4fb7+4l+PVcfF
      N36f0Alf8REBeE4Py5WJhoynLtzduo+vx6g0OuC59Jpl8pUOmdkMc+nERCbIGBfP94mFZZIx
      BSMgMZNUcFyfmaRKMDBY750rWVQbNheWAnR6LpmEwkxSodMd3Gx6a69H0JCo1GwabRez77Gx
      rDM/ow3k2eb7Pq4HkihgO97jMoJwKPLzik2Ezgnm7Ue3QVWDtdUFzL751IXBUIhcuYSqaHii
      zJWLV9jdz5EvlFiYSZ3LBBmKLLIyfxhb8lFvr4oCydjg7Z3PaMxnnl7NJaKDm5HPplRaXZeZ
      lEoq7rOTNTkoWtiOz/rSyUY7jutz41abtQWd/YKFLAmYlsdiRmXumLadF3LZW+ycsA459ri3
      3Ww99d7c0hqzi6tH5r0XL0V4ebnKX1+yRYte32U2pZJOKMiyQLfnMWi/ocgi6YRKp+fR7jqk
      4yq2A1/c6xAKSoSDZ+vU/0XyxCf3uPHJr+i5EEkkn7rwWe6L53cAnRw2Vo728omoQmKIHUbL
      9qg1bJZmdVJxlfUlHdv2iYUtgoHzuX4blCcE4JDdK1Kolfn4R6uvrEFTXjyqIvLe1UPz33RC
      efgerBvn0OZ5SJ4QgMqPf/Inh1OaU4rS8LLZfNAjFpbZy/dJRGW29002lgPMZ9RzvfibMjhH
      Jn9bX/+SX36RZ3Vjnd/6zluvqk0vjNmUSqfr0mg5yBIYAZH9Qh/b8VlbfH7ihClHKVUt2j2P
      nunSt3wcxycZk1mY0dDO8KHgEQEsrV8GfYWAfj5GgGyxj2X7LM5oyLLAwoxEp+siS9Pef1jS
      CZX2gXl4JmJ5BAIiubJF3/Z5Y/3pbfOzwrdMIQLsbX9KcukC8y+zESL8VxfHCycS7PpY38pu
      fmn16R9mmO3HKd+QK/UplC3iERlZElia1ej0XDq9yTzDGZRvGcP1aXf6LOovd3og4fH9+Bdj
      1XHfUsi/oPZMeZq5tMZc+uiZQTR89rdPj3wCs9/HMjs02+c78sKUl4/v+/zmToe1BZ2v73dR
      ZAFJhExSZWHm1R3Gid9+efHyG8TDZ3dON2UyEQSBmaSC6/m4ro+mCtjO4al2uTZeNshxODIC
      FB7c5caXOa6+pbK2/DJXAZNB98K/i+V2Ri4vuwEUpz1WG0TpfHY+nu+TLVrEwjJGQGQ2dbgV
      XazaqMqr25Q4IoCVi1fZetDCGze+5QuiWOnxyRcF4lGdsKGQjOtDZTUZloMwjBM2t0uURvK7
      Y7VhLV9Hro5VxUQiCgLvv/l0VptkbPBNiWbbYTfbR5ag1XHxAUOXWJrTiI24HjkyBapW61iW
      iShOxvF4JhlgYSbE+lKEcr3H3/4qS6f36obLk/DwsLHG+udxtndVThNdO3xcZ1IqmipyZc3A
      cX3u7YzebT0hG5/cwQF6JEgkOhnRWT3PZ3E2SCKmo8hJ7gea59b34BFW6hLdyOgRKhRBJ53f
      RdRHr0NWU2MH+T0NLNsn9DDcytKcRjAgce2iQbM92IzF9Xy+vNMhlVDIl6xDw8Jv/myzff+A
      1MIcW/c2ubQ6d6RwMbtLteMRkF26NshuFz2UJpFJEzylJGmiKJBOHNqrpOIBUvHzb7vSlh2q
      8tPm6IOiIVBeW6TD6J3YUlMkXBi5+KkRMiRCT9kvDW6eLgowk1Io12zWl3TubPeeFIDCv/8f
      /Qm+7x87BRIEEcfu4ihBDN0HW6VSLdHp97m0vjyWQ4zreVOr0imnju343LrfZW0xwO2tLpfX
      jKPm0F9+9gn1bp+55Q2uXFg6UlhWFCRRRpd9TEdiYWaOYNSi3jIRRXEshxhJFKcz3ymnjqqI
      /PCjOMBjW7AnBCBx/Z03+ef/+79AD8XhWwKIp2aJp2aPvKeHIDUhAdXEwAxy8r2Ry0vKZKx7
      prxcjjrFSzrvvX8VOfxyHwYfgVxzvEgU++E4t+OjjyOBaWzQ15IjAti5+zm3NvOsXni5i03P
      c9m6M3pcT4DulX8E5zt5zJRT4Kg59IWrbO5USc+c0xw7UwbCjsxT/O5/MVYdi5u/fkGtOV2O
      nAO4jo2PRDFfYGN57tmlXhN838ds99FDGq1yGy14aLQlySKyevYtIZ+FhUVVKI9Vx8IZCZfw
      xK9o8W//8mfEMglmZkePs3+ecG2Xva+yJOZj1PMNREnE7FgkF2Jk1lMDRYbrNU0cywEBOvUe
      nuOSWIghq/K5FtFZ4cgu0Jtvv8vS6jyCcHZd3F4kkiJhRANYpk2/axPNhPE8nwc3s0TSYQKR
      AfwmBGjXuhS3y6RXk+Tvl6jlm8xtZEgsTBctr5onBCAQMESarT6J+HRHBMDpO1g9m9RyAt/z
      md3I4NoO0XQYPTyYDXuvaZLfLBJOhqjs1bj43TUObuUpP6gOLIDidplg3KCyV0MPaTSKLWY3
      0gRjBqI0mZ1Vb+kjerPrI5f3iSK8BHOMJwQgUsre5+ZmmXe+8yFvfOsc4HVE0RXW31sGIJI6
      DDIpySrp1afjJj2L6EyYaz+8giSLD0/ZRS7/1gU8b/A5cjgZpNfu0yy3UQMKrUoHx3KYvZAm
      Pj+Zo0hZd6nqo1sVZxyPl3HE9ET3IfDG9XeIhQwqpdJLuPXrgSRLKJqMKIlIsoQgCgiigCQP
      3nMXd6sU7pcIJ4J06j1W315EC2q0q4N57jm2y62f3aNVafP1395j+8Ye9365TXnvHNpdD8nR
      2KCyQToZJrE4TY4xSaxcf/r3GGb9ICsSsdkIzVIbfB9BOFzgP/gySyhuoIcmMESMICMn3x2r
      ClEYKjy6j+sLaJpGvze6NeIk0ap00AyFyn4dWZVwrMMdGEWXJzYg72lg9x1quSazG2l6TZPZ
      ixmcvkP5QRVFm8woGY4k8sXFlbHquHxQOzFP3xEB3L35G/bzJa7MjHfjF4HnHWZn0dXDYFbx
      qEIoICIIwmPHiJOwuhaO5VDcLrN8fYHNT3bo1LssXJ4dbAfnnKBoMld/9yIAiUdrhqBGKDHd
      7HjiSfI52H9AJDmHPgGBo8y+R6lqs5fvo8giezmTL+50KFatgc2uLdOmnm+QXIxT3Cqz8eEq
      juVQ2JqucaYccuQc4Pt/8EeIknJs0gXX6vLLG7eYSwZpWyDZLZRghvmlhVNxiJEkgU7vMCT4
      9r7J5XWDXNHiznaPxRmNQTKaRmfCRDNhBElgdiONIArEZqMDlZ1ylE69h9O3H56JWODzcDqp
      oJySQ9S4OImLWNoQCTIU5dmLhnt3btPpdnDSCcJBARWFUr3O1pbNm5fXX3iGGN+HmaRKJCRz
      Zd0gFpGJhWWWZgd7+AGMyNNGfdJk/lYTj6JJNItN6oUWifko+fslGoUmMxfSpJYnM6liLSBS
      DTx/ITzw43Dl+nvMNhp4/S5tRyQRNQgnUlQb3bEdYo5bkOqa+Dhg0pO5uGKR6RP8KmiWO+zf
      yjN/eYbCVon191fI3S1Q3qtOrAAGYainKRaNAlEefVwdCL9k34Epr4bUUpzU0qE31cKVQ8eo
      8Mejn/ROCq/PXuCUKccwnU88QTtr07H7I5cPJVx4OvbTFA5Ny+/+Youlq/Ns//oBoeThqXZq
      KU5m7dX51U4F8AQ79S3q1ujmAYZioHrjBXoVgtK5/FUEQSC1mKDftbBMG8dyEUWB3L0iiq4Q
      n3s1U+lz+FW/Ohq9JjvF+2PV8d7MdzDHiZEheciZsZpwKvieT+WgRjQdJj4XJbEYRxAFGvkm
      emiwTqNT79IstZndSLN9Yw9VVzBiATRDJRgbLabqVAATRrVbZac1uohCSpj3MpOX3koQBS59
      9PSiOTzEaXQwZtAstSjtVrC6FgD12w2CMYO1h1a7wzIVwDnEIMQ4CWxVQWMSPRpblTbZOwVS
      y0mapTbXfniZWq5B9aA+cp1TAZxDvtq8Q61fGbn85ZkrvBRj/CEJJ0O8/+PD0W3lrUMLWSMa
      eLwtOwrnRgCiJSE2RrdsFMVXl6XkRdN1OrTt1sjlLbfPyYbEZw/P87n7D/e59PE6t362SSCi
      T4gARJnG9T8dq4p8y+NX25+MXD6qxhCmxyLnGlEUiM1FqezXKO6UWbw6NxkC8CMo5IwAABYs
      SURBVPE5CFpj1WF3pw/vlOfjuR7V/RqzGxm++4/fRVKkyRDAlMlC8mSM/ni+AoI2eSa3oiRy
      9fcuHXlvKoDnIIsKV2evcb98jzdnr2M6Jo5rU+qUKLUnMID+C6LebfB5YbzIbj+8/gNOdMea
      AAaeN7iuQ9+y8VwH23GxbQvf9/BGNIE+CzieTbVbpWd3sVyLRq+OIqtspC6iy4N5lAkIiA/j
      LEmihCIpCNNsCBPDwCNAp1nn3v1djJCB44FoNfDVNOsbqxjnNG2RKqmkg2kEwHFtCq0ctV6V
      2fA8tjtYrrK4kSCqx2j1W1xIbSAJErVejbul27iec7ofYMqJDCwASZJQNRVB1gmKPqHoHPlK
      g1u37/Lutcsv3CFmErBcixsHnwKw9/A90zFpmo2B66h2KxhKkLXkBQKKwW51i1Qow9WZa3yZ
      +3ygOpZiK7T7LeajizR6NeaiizyobVNsF/H9yfzuzgoDC8B1HELRBKmITseRiAY1osk01Wbv
      VBxizgsz4TkieoRPH/wCQw3i+S6FdoGgGhq4jlKnSEgNAT6aouN5LgvRJWRR4aCxd2L5V4Hm
      BDGc0Uc4XQq+lBXqwLeIJNJEHnrCPGnxO6efz8TOL4pCK0ehlQOgY32TRLtrDZ6Qey48j6Ea
      9J0+juuwVdkkqIUGHnElUeba7Fv8Jvtrfnv9+xRbeWRRodwpUjylxfyt/Vtj2TRdjF9hYX70
      E14AWVZOtAiZ7gKdAbarTz9Itd7gZtuu51DpVliKrRAPxMk1DgioBhdSF2n1m/TscdKDnw62
      Y/PXX/31WHV8fPFjTkr8c64FENYi9J0+6VAGx7ORRZlyp4TlWPiTaO11SiiiQjqYZqe6xd/c
      /ykdq01QDTEbmcdyBjuAVCUVTdZxPQcfiAfilDpFfN/HOcOL+XMtAEM1UCSV+egC98ubvDn7
      FuHmAbvVbXr2YHE1zwO2Zz9ezD+iaTaGWsyrskYsEKdjtdFlnaX4KjORObYrW9SHGI0mjfO7
      +uRw7pswEpQ7JRZji9wqfIUmaSzGppGvh0UAksEUkigRDcS5W7yF7/ssTfB36XdF3LL03H/n
      egRomQ3a/Rau57Jf38PzXSqd0sjbta8zjueyW93G9myyjX3aVosvs5+jSJNrN5pv5k9ciE+s
      AHpNk2q2fpgQotBEDagEwjpaUB04pmWr/7RJsMvoMetfZ3p299hpo+tM3gJ6GCZWAIGIjlgQ
      6HctGsUWgYhOvdBEM1Q2PlwdKD/XsPwgcYW+0z75wmdgisZYW39TXj4TK4BOrUv2bpGlN+fR
      wzpr7y5Ty9Yp7VYP3fVOwZzmjzUfdYxo4f/gwk9fXHPOHW/Nv8u90m2uzr5FvnnAXGSRXPPg
      lR7mTawAgnGD9//oOgCZhymJZjcyzG5MYMiDhyiiQkIbPH3Scaji5M6pxyXfzOJ6HsVWnlK7
      SMJIsRxfwXKtgaxrQ2qIVChDu99iLrKA5Vq0+k1aZuPY6e4gTKwAziJXNIP/ZfbiWHX8S9Ph
      7uC7k2eKVDD9eDu1a3fYqmwSNxIDb8e2rTYxL0nTbBLSwsiiwlxknoSR5GbuNyO1aSqAF4jg
      uyjeeOcLCSXJ5cjGyOV12WC/mxurDafF14WbAOzXHzx+70nzkJOI6FEWootEtDA+sFO9T9uK
      kwkNltdaQOBS5g22K5u8MXONSqc0FcCk8aEq8cPo6PZVthjgvzunZ3xNs8Evd//+yHs9u0e+
      mR2ovI9Pu98iYSTZqW2xkbw0uABatTK5SpNEJEDXFhCsNpHkDKoeIDDNeD5R/PnSxyju6Cq4
      7an8X+5425viBGYhEQWR5fgKuWaWxdgym+W7gwsgEAyjNVrUOzay4NDvtKg0TeKpNEtz6XPp
      D3BWCdkVNHf0sChvqLP8T6m5sdrwPzZGv/9p4fkeP9/5OwB2qlvAEGuA/d37NB2ZgGjS8iQu
      rq6TLZap1xusLMxM/QHOEYLvIfmDebyddQYWwOrFq0+9tx6anOQYCTXGpTEWj0FlcAeVKeeH
      czN5/1iTuT7G4tESn84n5vs++6UWS5kI2XILVZFwXI9gQCV8Qu6pKWeDcyOA08ByXHYLddIx
      g3/9y3tcXkpSa5nMJkJ8eGX+VMwxzgsxLc5MYPR1RFSNvcDWPJupAJ6DKAg0u30+38xj2S6r
      MzE0pc2tB2UuLSaJh08OjbJbaGBaDn3LodY26VsOK7MxVmai6Od49+yfhOMY+uiGhwUpzm9G
      j+87MOf3F3hBXF1Jk4oavHtxFkWSmE2GuDAfJzZgUoelTISvd0okowH2Sk0UWeLrnRKdnsV7
      lwbrIW9uF0lFDXYLDSRRoFDrcH09w0IyjCRN5gaC6DvI/ujhLgMC/Kcz74/Vhk3HYeeEa6YC
      eA6KLLE6e3QoVkWJ1BBrjfsHNe7uV1lKRzA0hauraQq1NmZ/cDfC5UyUarvHUiZCrWViWg6/
      uV/AtBwuLZ5se+T5Pju5OsszUT65dcDaXBzH84gYGtHgYEL2fB/f9x8H9XI8D1kSEeBUpoIq
      Pj9Wx9uJ2gkt8wfG85O2TQVwylxcTHBx8Wge3Zn4cHE3b++VqbVMuqbNxcUEH1yep1Tv0BtQ
      RK7rka+1ycSDRIIav7x1gI9PMhzgd95aHugBzpZbZCstIoaG7Xjc3C4ykwjxW28uTuxULuWb
      hGg+95qJabldGm8o9ycwGOuL4sMrC0+9tzIz+Ba07x8+wIamsFto8MN3V9nMVvlyq8ibaxmS
      kad3wL7NYjpCrdVjZSbKfqnJleUk2/k6f/35Ln/44YWhPs8kMREC8HyfLw4Gi5L2LH5n/rtn
      Ihjrq0CSBH7w7iqqLLOUjhDQZN5an+HSYpKgPpgDxP1sjWK9i+9Do9vn+lqG1dkYlebUI2xi
      +fXdHOl4kN18nZWZKD+9scOHVxa4tJRAeo1OnyVRJBl5tG755vwiNMRZxoX5OBfm40+9Hw+f
      PHrA4ZnKvYMqa7MxbmzmWZuNUax3mU+GBq7jNDjXAlifj9Ps9tlYOJyDZ+JB7h1U6NsO72yM
      F3VsyvB0TZtctU1IV/l/P91ClSWy5Ra/fX2JgDbYSJSrtPhqp8RcMowkCkRDOnOJwU/xfd/n
      xmaepUyUUr1zvgWweVDFtBx8H4K6wnsbszS6fZQRbZamjI4PbOXqmJZDttLmnQsziKLAze0i
      +6XWUxsFz6LZtai3TXqWg+f5qIpE+v115AG3g23X4/5BjZ18g3bPmmwBRPQolzNv0O63Me0e
      TbNBpVseuPwHl+efem9miN5iyotDAH780UVEUcD3fWRJxAcuLSaRxME3MNIxA0WW+NG7a2zn
      69x+UMZxvYEF4LoeoiiQiga4spycbAE0zQbldgnTMZmNzJEMpmiY9TMdiu91RRAEVOXoyCsA
      ojTc7l0iHOCPv3cZgDdX07y5mh6qfEBT+HfeX8PQFARBGMIhpl6labrIbpeWLSDZbYKxWUKR
      CIZ2OjoSEGhbLcrtErZrsxBbPJX7PMIVVZwxzIB9YaL7kykPiQa/MWEZ+BcLxxI0swf0PRFF
      dHE8j2x2n1Anwfry/HgOMe7xNiM+PqV2EYByp0i5Uxyp/kFp7dxAMkc3QLGS17Cc0bOWA9ix
      KI4zeuQ6T/YJDpa9aQpDCKBeKXCQK5COhTE9ibWFJSqNFo2uPX6CjAlZlMqdfZTe6CLz1DBq
      9eZYbfB6DaQx6vC1OL13/gxnjMTffTmKwHheer5wNraZBxZALDnDh8mj3vcLoShPn1FOedW4
      X/0LxO5gjuLHlo9fw62NJ2ThnT8bq/zLYjppPYcIvoMwxkbBuOUnBVdUscTn211NjAAC0nin
      gYKo4gij25+74hgxEU+g0/ewXB9NFlDlQ3vKYbb+AG4X+tiOR6XjspZUmYnI6MrkTjNajSr9
      zuijkBWSMNsHY7XBVlq45ecHzJoIAaiCyP+6/J2x6mi2OjSyvxi5vKsljv0yWqbL32520GUR
      SYSluMKF9HDz63rP5Zc7XVRJIKCKvLOokwwO99XfLfRJBSUcz+fLrEm9p/D24uCdhu/7fJ0/
      rKPV98iEZSL6cGsv3/dxPRAEeKTfZ1mSKrV7aOOsZRKdscof1nHtxDXdRAgAfALP2D3JV9vI
      kojn+xia8kz7lV6/gdLaHbkFjt3FP+bH9HywHJ+oLtC2PL7K9QlpIjORwUeMZFDi8oyGoYrc
      LfT56Z02P3lvOJe/lYRCpePy1kKAfNOmYw23U9Q0PW5mTS6kVPZqNqmQzHdXA6jy4KPI5/sm
      rudTbLsEZIHrCzqp0IQ8QiMy0a03LYd/88tNVmaidEybuUSQDy4P54vb6Lnc2Othuz7LCZXV
      pII2xI+uSgKRgMRaSkUUYLdqD/XQADiez+WMhu35ZEIy+/Xhzxqe7O0z4eF/NkmEiC5he3B5
      RuNOsc+Dms3GEKNZretS67pcymhkGzY/vdvmJ+9Gh/o9Sm0HSYCe7ZMMSmiyMFR50/b41W6P
      +aiMJAqENZHkECL0fZ//+0aD1aTKVnnCTSE2D6r0bYe1uRjFWocvt0tcXk4RMQb/0X6126Vn
      +4RUkXvFPl3L492lwacOAVXkR5e/MZ+Yiw6/Vghph1MN+eGp5+WZ0bcoRyWoivzWukFQE/F9
      WEmo6Mpw65APVgLcK1pspFVWEgoPasMJ2fF8/v5+hyszGp/s9nhjVuP6vD5UO748MLFcn2LL
      odJxCesiv3MhiDjgmsrzIRaQsByfVEiebAFcW8twcTGBLIkspiKsz8WHDkdyeUZnr2ZxIa1R
      77p0rNczCp0gCEQD38z5lSFNEOBwBHl/+bDzCADXAkOe3/iH7ThoOFyf1ym0HG5mTT5YGdzF
      NBOWyTVNrswECGoOX+X69B2fgDrY5xGAsC5xIaUiihM0BfKfkfFCVQ57XFGEdDz08NrjOL78
      UlxhKX5Yx8wIU4cpLw5ZEvjuSgBdFVElgeWEgj7kdHIlqbKSPOwEF2IKby0Mt3soigIfrX0j
      uIl4Inzfp7z79Vh1uGqU09vIfHmU0t+jvPxPRi4vihJX7/zPL7BFL5bZJ6aQhvrqt3EnQgCC
      76HXbh37t1rXRRLAAzRZIPCMve/9S/8l25nfH7kNoqSSaH6FMES8+m9jxi7RWviTkcsDtMKX
      yEmjB5RScGm9/79h+aP7SKetAzIHfzlyeYCwuT9W+ReBq0awQs9P4zq0AGzLxPYEcG00PYCP
      MLAt9rBYjs+/+qLJSlKhZ/ksxBWuzWnH7hrUtEXuxX77qfez2/fwPQ+r3yOzuIoWMJCVp9cR
      quCyHfmQvj+6XVJYtGh544VMDIsWY5rh0MTAHKNvc/V17q39t2O14Yfb/wxVT41c3tGSVOd+
      NFYbtpf/lAN1/bnXDP0tPXjwgL7j4ZsNPCXJytrSULsyw3C32Kfv+izEFIoth8/3eqwmFMJD
      HOAoqkZ2+y5mt02jUmR+7RKZxdVTae+Ub/h847+hsz76pDQo2lTd8cxaw6KF4z2/cx5aAKIo
      oyo+ycQie4Uq97e2effalZEb+TyuzetcSKkossBiTGExphDShhtt2s0aVr/H5fc+5uD+HYr7
      O6csgGkSbgDbF8caTVX/5eRzHloAs+kEHUfEMDSuxpNUTzksRuDhQkkWBZYTw08v1t54m7U3
      3gYglnp+LimnWcMe43tvWF1+czc/egXAxmKMpjX6/D2gCGTSMewxbNmEoExwwG3FZ7ZDcPGE
      0Z2LVM/i4O7oJ/sAqzNhbP/5j7jgj+rF8gSe5+F53uO5ue/7R+bpJ722rT7C3j88+/pHjX3i
      nt++phG+TFdNPvPvJ70W8CkVq9iuf+zfB6nDUCW6ljvw9cfdY9w6JPEwDIrleI//jiA897v7
      9uugJmG5/sDX8+gReuK9gCLSs71nljnpta6ItHrOwNcf995A3+WLEMC3GfbDuq57xJnmuOuB
      set43utHaZoeZasZ5J4vog3fvse4n+O48uflc5zKM3EaApgy5awg/fmf//mfv/S7un1u37mL
      h8juzjaqqnB3cxdJcNi8v000kX5sN/MsrF6LO/fuIwpwf+cAXfLY2S/g2R32C1VSiZOtLQvZ
      PXKlBv1WlXrXpl7cx3Qh+2AHUQueHKzJtbhz9w6uL/JgZwtF0yiUa6jY3Ns+IJGMn5gtsVEp
      srWbBa9PrtzA69UwhQD1wi6CGkU9yebf99jZukfH8iju7eDJKrlcnpAuc+fuPfRI4mTjP9fi
      7t27OL7I3s4WsqZRKFWRfYvN7QdEEyeHLmlUi2xtHyD4FgfFOvSbmL6G7HXYKzaJRU4ICOz7
      7G7fo226lA52cUWFfC5HPKTy5debhGNxlBM+h9lpcHdzG1Hw2drNoitQa/Wol3KYnkQw8PSu
      0qs5ihNVMqkErXqJuYVlbm3u8MZiGFNNEYtG0AZw9FD0IIlohEK1wUbaYLPUIRORyVdadDqd
      gZqRSCRRFRlbkPDNKoKewGyVMC2PbG4AZw5RIZNK0m2UmFlco93tI4se1XqH+bRBs3PyijoU
      jRPUVdqWQ0ByiUUj9CyXZCJCbyC7JYFUKoXYr6Km1+i2mui6gqIHScVCgwUqEBXS6QRmo0hq
      8QLtdhdF8gkEgzhmF2eAZoSjcYIBlVbfJqR4hKMRepbNQb6CZ5sDfA5IpdKIVh0luUyv3UTX
      VexOC8sbbG9NM8LEwkFK9RarcRU7kMS1m2SzZWz7+AX5KxGA129we+sAPRBkd/s+c6k4N7eK
      RMQuWjj+DKueo7QqefaLVUKazK29CmkD9ostDFVk0End5uZdLMfB6rQwPY1OLYcvRwjqArH4
      yZHKPKvF7fv7qIEQe1v3EPHY29vDdR129isYAxiL7e9s0u5bYFvU2n2KhTz5XI7sfpZi8WQH
      fd93uXP3Hp4Sor5/F0SZ7N4eD+7fZbfURBjgy/DsNnc291CMMAdbdxAF2NvbI1cogyTiOicL
      eX9ni5bZR3Bsyk2TSiFP9uAAxzKp1JonPsA+Pnfu3MVTgjSy9/FFiezeHqWuR1Cy6fROTrZR
      LxyQrzYxFIl7uQZuM0+x2iMeD9HpHJ83eboGmPJa8+qtkaZMeYVMBTDltWYqgCkvHdfq0ez0
      aTafn77IbNcp19vk9rbJFqvPvC6XzeEDTr97YtqoTruN430z658Ic+gprxeCJPIPf/mvSK1d
      R7bukpmfZ2+/yHwmDGoEQzDZLbbYvf0Z7//uH7FzfwvRtemtX6HTs/j685/zvd/9EcVSlbev
      X2H7wT69dpVus4JlLOL1GizOpSjWTQy7gRSbpVbKMzc/x9/81d/xhz/5D9n76jMCiYWpAKa8
      fERJw4jEuJiR+T//5ResZXPcubPPxruX+P3v/4DPfv4zep0+gdkVlmcTbN60kRC4d+srHhSa
      XFxdYO/O5+zUXC5dXMMXZbZ3s2wsRPj061/TdqCYz7Gfr/ODawlu/PQmJU8muZ8jmTrMcpMt
      FKBYme4CTXk19HpddD1AMZdFD4bodEwisTDBgIHd71Br9wkbOoZhUCnmQQ2iCQ49BwKyjy+p
      NBpN5ubmuPHZZ1y6uIbjiwT0AJVKhXAoQN8RiAUVHE+gXq8Ri8Wo1lvMzc/y6S/+jqtvf2cq
      gCmvN/8/L/K8TF8AG3IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Participants by Gender' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbQElEQVR4nO2dWWwkSXrff5FH3XexijfZze7enunpnmN3Zg9p5V1h17LX1wrrhSzBsP1k
      yAYMwfABQb5e/WDDgCHAWAsWDMP74AcDhnVYBuSVLeyp3Z2ZnZnunr55s1j3fWRVHn5gN5vX
      kFlNsllkxg9okMyOL+OLzPpnZlTGP0I4juMgkXgU5awTkEjOEikAiaeRApB8Is6gS6HcoFQq
      HVquXS+xUaiy9PAuDxfXePZMbVrWzr2xsryMA/S7DRqd/qH7rFUqmPbBT+elctl9I4DC+jLt
      vnXg/2lD7UniKYTu5/3v/T5jC6+zsviIZGaCtbVNJjJRlGCKqNLjwVqF0vp9PvPFv8h6vkSQ
      dT62BrSbbR7e+TFf+PlfZDNf4tOfeYO1XIFOo4xptOjoWcxOnbmZCTZLLXx2Az08Rr1SJJPN
      8sMf/pSv/9qvcP/P/pRQeg6zXSIcClPsqjTyj1i4cp1iqcXsbBaByfrSEvGJBa5MJ/jxe3dJ
      JkIoQsEfiYNlsnT3AZ9989V9bZQCkByCwvjUJDMTcb797T/iU5fnef/DRd784qf5ypducOcn
      36NVqBPIzDCdSfLxuxU6io/+3Z/xaL3O69emWH98h9trDW7eeg1HKKxv5JmZiLP+6A4b1TbF
      3BorhQ5v3shS+ugBS02Dy5enCQUDAKznNvA3Oiw/vEc2lWThF77Jo/e+QzQeJxCZ4+Gdj8Dv
      w6fqFNYWCZph2paOvblOzQ5SX/4BX/n6NxiU1g5soZDfAkkOw7JMFEXF6HVRVA3TtNB9Opqq
      4dgmxsBC11RUVaVv9HCEhqY4DCwHTQGEQn8wIBQM8tGHH/LKq6/gOAJVUzF6BrquYtsCTRPg
      CPoDA5/Ph9E3CQUD3L93hyvXXsUc9NE0FUXVcWwLx7a38hkYCFVDEQIcB0cIzH4fRVVAqAgc
      yhtLiPgME8nQvvadqABs20ZRZLdCcn440U+rvJlIzhvyci3xNFIAEk8jBSDxNFIAEk8jBSDx
      NFIAEk8jBSDxNHIohGSb1UKD3/zWH7su/3M3Z/kH3/js9t8r+Tp3loqu41+7lGFuPD5UjieN
      FIBkG9txaPcGrssbg90jLG8vFviPv/eu6/i///W3z48A2o0K+GMMWmUGIoDdaxBOjlMvbpCe
      nCWgq6eZp0RyKrgWgLC7VJt+Nh4+5tLVa3QthfbihxC/TG5jg7mZKWzblsMhzjG2dfCY+U/C
      cWxM03web9vD1Wfvjj8LXArAodtpU27aRKIRNjfzKAoE9BDNSp5kKr09CE4Ohju/KOpw504I
      gao+v/MPe+4VRdkVfxzWig1+49//b9flv/j6HP/oVz7v/g4QSc1yNSnQtXEQKo41QNX9mH0D
      3e9HCAGw/VNyNvz6v/0DWt3D3VbPSEWD/PY//NqOLcOeO3Hs832Snxd7iKcPx3EQQrgVgMAf
      CO7epG0pVw0EXFcqOX1a3b5rAfhlv02+B5B4GykAiaeR7wEkI8PyZg3rE2aC2IuqKsyfwDsE
      KQDJyPAv/tP/pdExXJVNRQP859/65WPXKQUwYvyvHz3kyUbVdfm/9RdeJx6WX0S8KFIAI8YH
      jzb50d111+W/+eUbxMOnmNAFR3aCJZ5GCkDiaaQAJJ5GCkDiaWQn+ITJV1usFRquy89PJBiL
      75+yT/JykAI4Yf7s7jq/+4fvuy7/G3/9s3zlMwunmJHkMOQjkMTTSAFIPI0UgMTTSAFIPI1r
      AfTaDXp9C8s0aLa6VIqbdPsmhdwGA2s4L6hEMiq4/hZo0KvR6Og43RVabQ1fUKNa+hA7NEl7
      Lcf87OTQpuiLiO1yOO/O8tYOM/qwcwrYtr0rflh2xg57/hxnb+7DJb83HoawNHIyubs2xQug
      1ajQbdTpGhopNYKm6PR7HfRQCCHE9j8vM2zz9x2z48YPyc7YYfcj9sYPXfnxPMHHyf2Zn9n1
      HcBWI4ylVFJX3sEcWPR7bfRglF67QTga3z4RXp8VYugPkdg9m8LQp/GYx3xX3cOrd3fdQwto
      b+7u4wXHy/3ZcXdtio8lUtt/6bqGrm+5cXzxxFAVSySjhLcv1xLPIwUg8TRSABJPIwUg8TRS
      ABJPIwUg8TRSABJPIwUg8TTSESY5FTRVIREJ0DEGBHSVaNhPsdahM8QSTC8DKQDJgQjg+twY
      vb6JEBAO+MiVm9TbBqaL0b+XJxNoqoKqKOiaQjoWJB4O8HCtTNc421VhdiIfgSQHMjceR9cU
      YmE/iiII+DWuTKeYTEWOjFWEIBb2M5OJEQv50FSFO0tFNFUwPRZ9Cdm7R94BLjDvvDLF0maN
      2UyMbt+k1e3TaBvU20dPQKuqCplEiKXNOrGQj0drFbLJMOGg78hY23F4934OIbaGdz8bp1ao
      todaxeVlIAVwQZnJxIiF/fT6Jj6fRrs3YDIdZSwe4v2Hm0fGP9mo7pukt9bqDZXDs8/6s5/W
      iH34QQrgwlJr9SjWOqSiQYy+yWqxQb1tMDVijyCngV9Xefv6FKVGh/7AYjwZoVhrs5yv7+u/
      SAFcUFrdPh8+zgOwnK8D0OkN2Ky0zjKtl8Lb16eIhf3YjkOvb9LoGGQSYTRV4f5qeVdZKQDJ
      heP7t1cZi4fwaSrhoE6+0sLv0wj59X1lXQug3+uAFqDfaSD0IHa/gy8Uo9uqE4kn0RRvWyFP
      g3demSJfbTOeDKMqAmNgsVlpkSt74yr+3oMcn74+Sb3V276S11vuVpAp1Tu7N3QOXjnTtQC6
      jTwtMYHf6VLJ5UFRUK1V+kqUYMtgfmYCx3E8b4x/EWP4zmP2LDoRCZBNhukaJuVGl0qjy+XJ
      BJ+aTdPoGLS7Wy+UHNs+1jHfVbczvLF8d/yQbWfv52UrfnosSjzs5/pcmpBPow77OvDOntyH
      nYzgWe6uTfHBUIhqY0C/02RycoJCuQKmhar7cBx7u/HDHoQLx5DNd9hzzJ7+Wmv1+OOfPiEZ
      CTCR3urEPVqvMJGK0NvxImlf/LDpHlD3C8cPHXxwfL1tUKp3qDS6+HSVtWKDVqfP5J4O/O7Y
      4fNwHMf9HaDRttBEFyUQoNO3SUXDBGfmaFVLxNMZFEXBcRxU1duLL4shHwUVIXYds53e7v7A
      Il9tk6+2t7c1O5Xd8YpyrGO+q+4hzfViX+7DGtPFnty34lvdPh887cA/a3vXaJHb0YEXe3If
      dmKAZ3W7NsWPjU8d+D+B7PhQFUsko4T8FugUUYTA71MxLRtVUQj4NNrdvpxJb4SQAjhFFqYS
      +HQNRQiCfo1wQGet2GQxV3W9ILTkdJECOCVURTCejBDwa9i2Q7PTZ73UJBULYtk2i7naWaco
      QQrg1LBsh+/fXsXvU+kPLHRNRQClWoe2MVpj4r2MFMApY/S3JnDtD7Z+GoMXn8hWcvJIAexh
      MVfln/3On7gu/6U35/l7X3/7FDOSnCZSAHuwbYfOEI8ofXlFP9dIR5jE00gBSDyNFIDE00gB
      SDyNFIDE00gBSDyNFIDE00gBSDyNFIDE07h+E9ysFhHBJJ1qDj2cotcoEU6OUyusMzY9T8gn
      XypLzh+uP7W6alJu9Rj0HKzmKlooRm/5NiSvUsjlmJ2Zwrbtc+8JHnbVddtxMM3nHt1hDeq2
      be+OH/L4WZa1K34YHNhd95Btdxz7RNvuDLlS/M7YFz1vrk3xtUqFXLNLwK6jh6J0ygVCoQi1
      3BKZialtf+Z59wQPm78iBJr2/DAO601VFGV3/JC+WlVVd8UPg4DddQ/ZdiGUE227GHKh7J2x
      L3reDjxyjuNgDgYIVUNTtxqVnXuVzNOKhRA4jrPrp0RyHjlQssVHd/nvf/A/eO/Dxadbtpa0
      VxUFRVEQQuz7KZGcRw68AwRjMd566+eYGc++7HwkkpfKgXcALRhi7dF96q3uy85HInmpHCiA
      TrlIuVFnY730svORSF4qBwogls3SKBZIZVMvOx+J5KVyoABquXUu3foMsdD+6aQlkovEgZ3g
      UGqM2nvfpTZziUzy4q8ocpGIKl2EcLeUUeSEB8L8fOAjXkn9tuvyY4F/Clw92SSG5EABdCpF
      /Mks4dDRC6JJRot/k/oPEKq7Kisi48CvnljdQdEno7qrG8AvDp6z/2VyoACiE7NMFBoYAzmH
      pZfIKlX+ZeK/uC6fCn0Z+MKp5fMy+OR36IpNo96CKdkR9go+MeC6vuq6vKaWjy404uwTgOOY
      /PTH74LuIx0JnEVOI4MAZrIxuoZJwKcR8GlsVlp0jcGpTW7769Hf4++k/5/r8mPKF4GjF6+W
      HMwBAmixtlql3ikxd+3WWeQ0MkxnYozFQ4QDPtaKDabSERKRACv5OoVa++gdvABB0UdX3L+A
      VF5kWZcLiIJDRHSOLviUwNP+xz4BKEqCv/G3v3lymZ1joiEf2WSYXKlJNhnm9lKR2WyM8VT4
      1ATgZf554r9i+t3Nmq1HxoBf3v57Qi3zrbF/57ouLfo14MsH9QEcfvBH/5OSEuDmzbe5MjPm
      eqcXjY+XS3y8vPtteKUhh4ecFjNaEUerHl0QEOrJ3PkO+CZY8KlPXWViIkOt0jyRSiSSUeXA
      b4FS81dYfPcDLt2Q638Ny4xa4MuB912Xn1CvAgunl5DkUA4UQHX5MXVLGdoiJ4GbvkWuRf/Q
      dfmA/nlATq9+VhzYB6j3eix+9B4T2ek9QyEclh4/QAsnGTSrhFPj1DZXycxdIxn19lemkvPJ
      gXcA4ej8uV/6RYS91+nl0Gq10QYOkUSabv4Bgck3aFbzxELT0hTP8MZwy7YRO43hL2CKt1/Q
      FM/e3IdcvdI54QkBhmn7XlO8M6yh3z7EFG/2u6yVq9x4fXpvyihCQ6g6jVKOcGyC6vJdMjOX
      pSn+KfaQxnB1jzF88AKmeOUFTfHsyd1Sh19s+jht32eKF8L1W429pnhrWEO/8ommeEEqmeD9
      tTtsrhWYSu18y6hx4/XXd5Wen5sbqmKJZJQ4QLIOHRsykTjpTOLlZySRvEQOGArhsLq2imU7
      +AP+s8jp2Pzs0Sa2y7E6fl3ltcvS/O9V9gvArrO63GD2SoKH95aZ+MKNs8jrWPzrb3+PXt9d
      x3A8FeZ3/slfPeWMJKPKPgEIJcE3fvWv4ACaJi2RkovNfgEIgc9/Ph99JJJhkdOjSzyNFIDE
      00gBSDyNFIDE00gBSDyNFIDE00gBSDyNFIDE00gBSDyNFIDE00gBSDyNFIDE0wztpXvy8GPC
      iSy1Yo5QPEWtVCA7s8B4OnYa+b10JtQKvxX/tuvymdBXgc+dXkKSU2VIAZhUKw0sRyOSHscq
      L5KYfQOjlcdKhEfIFD9EDs5uc7XudHnNt+Q6XFWK0hT/LP6imOI/GY1sNo2lBenWioTHFqht
      3Cc7e2XETPHPjeVvXZsgX2mRSYQxBhaNjkGzY9Ds9LeL7jJXK8Ouli5N8c+4IKb4w5m9/GxJ
      m60ZIyazozt36GQ6QiToox3yEwroDCybmUyMrjHgoyeFs05PMgJc6E6w0bcwLRsB9E2L5c0a
      G6UGPm0U7lKSUeAF753ng0qzyw/vrO3a1u4NWCvKSX8lW1zoO4BEchRSABJPIwUg8TRSABJP
      IwUg8TRSABJPIwUg8TRSABJPc6FfhEnOjgd5A0UBXRHomqBl2EzFNSL+0XoLLwVwQcnVB3y0
      3uPymI/bGz3SEY1USCUb1chGjz7t5bZJsWkSD6p0BzaaIhiPaShCoKuHD9hzHIcHBYPPXQrx
      nfstXp8O8P5qj0tpnbdmg4R8o/PgMTqZSHbhOA7L5T4tw2K12qfdt6l1LYyBuyHHpuVgOTAV
      15lL+YgHFJYrfX621nU17PjORg+fpnAn10MRgh8tdvjuow7Nnrthx7NJnXdXukT8CoWmyVuz
      AVqGzb284Sr+ZSHvACNKz3T4YL3H1YyPx8U+luMQ0BWm4zo3p/yII4ZN+3UFTYFW32Y+pRP2
      K8SDKo+LfVf1T8Z1PljvcnXMz0cbPd6ZD/Fx3uCjjR5fuhY5Mn4upXMt66dvOfg1gSoEs0kd
      v3b0NdeyHUotk3RYo9Gz8GsKPm2rvUfdfQDWqgM2GwPemAmyUunTMmzm0z6CuthXvxTACJMM
      qdzJ9YgFVKYTPho9i482ekzGNcYih5+6bFTjz78a3bXtUtrHpbTPVd3ZqMYXAiE0RTAZ14j4
      FSbiGt3+0XcgIQTJ0FZ+oR3b3Y7CfVLqU2iarFYHqIqg3LZwHIebUwEmYtqR4n9YMBiPaTzI
      G+QaJtWOyUbd5Makn/nU7vZLAZwi9/MGuipQBAT0rY7gRMxdR9CvCRIhlXfmgzwsGFwf9zOw
      HCZjOunw6Xck40GVeHB/PUH99J+awz6FUsvCeWqPuT7uZ6Nu8p37Lf7mO0evWzeb1PlgvUcy
      pLJRG/BLNyLc3jB4XOxLAbwsHMfhQd7g8wsh/s+9FremAtze6DGX2uoIHvVBUoTg1tTW4uO3
      poPA1u3/8pi7K/h5JhFSmU5ovDYV4H7eYGHMx3zKx2p14Cp+IeNjYcz39E6xJaLx69qBbrOh
      BdCq5Sk2HMxOmXBijFphk8zsFTLJo58LvYQDzCR13lvpEvEplNsmt6YDrFQGPMgbvDETPOsU
      R5aQT+Ht+a2Hpzd3HKfr4+5WLlKE2OGKff64dNCD03ACcCxWNzaxTR+J8SxmeZHozBt0m3ms
      WHBkTPGf899lINx19uK+5B5j95Dm6k8whgu2OoLXx/0YpkNQFyhPO4KBHVd/aYo/T6Z4xyGR
      TNFsmbQrBcKpOWpr98jMLIyUKf7vRn8fBl1XZUVkBk37x9t/n5QpXghBOvy0I7jjqWVvR1Ca
      4s+TKV7RmJycZXLHpumJiaF2IZGMEvJFmMTTSAFIPI0UgMTTjOR7gAerZertnuvyb1yZwKef
      fedbcv4YSQH8t+/c5t0HOdflf/c3/xpj8dDRBSWSPchHIImnGck7wKjwgydt/JrCeFTj/bUu
      nb7N1YyfW1OB7dGJkvONFMAhxAIqy5U+DwsGA8vhSsbHRm1A37T5wkL4rNOTnABSAIcQ1AVT
      cZ03XwuQb5r4VEE35bgaEiw5H0gBHMKVzPPBVxMx/QwzkZwWIy+AV+fHWC82uTqTotrsoioK
      tVaPUr1z1qlJLgAjLYBoyMd4MkLQp5GOBWl2DBKRAOl4kEbHoD8YbgSgRLKXkRZAr2+ynK9h
      WjZtY0Cu3KLe6jGduRgL8knOnpEWwMC0WczVdm1rdfsUavLxR3IyyBdhEk8jBSDxNFIAEk8z
      dB9g5ckDuraK2W0RjsaoVmpkp+eZHk+dRn7HYrG89Rb3WsbP3c0ePlUQD6pcTvvIuJgeUHLx
      GfpTEAxFiOg+OpEoVmWJ9PzrmO0ClhU/MVP8ixjDzQOM4T5VMLAcFAUWxnzYNixXBhRbHf7y
      zaffJO1ZKf6kTPGuc5em+F37c103Z7JSvE2lUiaUHMfu1AhPvUI195js3NUTNcX/WvRP+Evx
      n7oun9S/iqZF923XFAjpCvWuRb1r88ZMgHREZbG8Y34ZuVL89p/SFH8kCtdv3Hr6exaAscRr
      w+3CBTNqkUnfiuvyGgerfzymM75nCEMsoMphDZJtZCdY4mmkACSeRgpA4mmkACSeRgpA4mmk
      ACSeZqRfhzqOQ7NnE/Qp9AY2fk3BwUFVBJoiTemS4zPSAuj0Hb77uM1C2kehZaIpgnbf5srY
      zgUQJJIXZ7QfgQRoiuDDjR7VjoVP3Vqi8/tPOtS60pguOT4jfQd4tk7WL1wNczfX49ZUAMNy
      yEY14sHR1q7kfDDSAtAUwecubU15+GzJHL8Or03KeUAlJ4O8jEo8jRSAxNNIAUg8zbEFUKuU
      Me2zXxlSInkRjtUJdowquXKTYNvg0uzU9vaf3Fvnex+6H8//tc9d45X5seOkIpG8EMf7Fshx
      UDVtn5XtSv1PiS9/y/VuJm79K+Crx0pFInkRjiUAEUiRCg+IpzO7toeVLrpWcb2fgDCOk4ZE
      8sII54SWdrcsC9u2URQFu7GBXV91HaumryJCaRzHQQiBVbyP06sdHfgUbeotUH3P49d+guO4
      e1MsND/q5JvbsU6/jZW/7bpuJZxBSS1sx9vNTezasut4NbWACGeex5ceYHer7uMn30Bogedt
      X38Xx3ZnkheqD3XqredtH3SxNj90XbcSSqOkrz7PvZXHri65zz15GRHJnmnuJyYAYFsAZxHv
      OA6O47xw/Fnmftx4L7f9uHWfqAD2Mui1efh4iWQySaFcY3o8Rb7cIBUPslGs85k3bh4a36gW
      WVkvkU5HabQHRHzQczSUQQfhj3FpdvLQ+M31ZRo98GMgAjH6zTLBeIpGpcr47Dyp2CGrvNgW
      T548wheO0yjlGZucpd5oMJdNcO/xKq/cvIlf/eTBeKbR4eHjReKJJKVyjdmZCZqdPomgSstU
      mMqmD829WSuxtFIgk41TbRpkozpWIMmgXqCHnyvz04fG5zdWqHVsgsoAxx9BMRokp6+QW3xI
      dGyCibHkJwc7NotPHqEFo7QqRVITMzTqda4uXOLevXtcv/4KyiGjce1+l/uPnhBPpCiVK8zO
      TNLoGIRUi2rb5OrCJQ4bzLuduzrA0SMo/Qap6WtsLN4jM32ZRDR4dO6BKO1qkeTEDI16jelM
      ksdPnjB19RbpiG+7+Km+B9D8QZKJGLVWl+tTSZbKbWbSQYKJCcaSiSPjw5EYkUgYw3SIBRR6
      joYmLLqdLt1e98j4eDxBKOhH+ENglPHFpzDaNWzbJl8oHB4sFFLJBP5BjejMDXqdFqGATqnS
      5Ma1LIXK4f0W1RcgGY/RbHe4Op3GUIOowiKWTOFYR9/mQ5EY0WiY3sAmFVIJx5MMTIt4Mkko
      4D8yPh5PEAoFQQ8grD7pRISBoxL0q/T7R9UvSCYS+K0mkalPYXRahII+2rUi1WYX84j5g4Tu
      J5WI0W63WZgZxxA+NGHT7/efzuVz+DV3K/cAaAGEvZV7x2hRqXTodo8672LrvNktwpPPcvcT
      iiVIpMZIhHfPCHKqAujWi+SKNeJhP/fWykzH/awUWqiDJonM+JHxubUVOr0eqmNRbQ/Q7R7G
      wEHTfajq0f335eUljIHJoNPE0uJ0KmvooRQ+DcbGMofGOvaAxeU1TH+C2sodNJ+f3PoGCLhz
      f5N08vAPodEss16oEQ0FeLBaRDUabGxsksvl2NjIYx1x491cX6Hd66FhU2r2qZXy5Dc3WV7c
      apOrtvf7mL0WJgrrG3mKm+u0exZHjSJ3bJOl5VVMPUZ97T6q7mdzfYNqe0BQF/SOENCgXWVl
      s0o4FOTxSg6l32ZjYxOh+jFNk6OeOVaWlzGMAWavjels5V6rdUgmg5hHXDwcx2JxaRVTj1Bf
      f557udbEFwih7mn8/weuqKbw/oyYRgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Participants by precipitation' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Participants by temperature' width='192'>
      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
      Qhv/5xahKeoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Participants by wind speed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Previous vs Next time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZ9ElEQVR4nO3dWXAc953Y8W/33BdmBoNjcBAASYH3TUqUdVqy5LUsay27dp2tdcopO5tN
      pSpPu5U85CVvqVRq33JUUpWHRN7sbnm9trW2V5dlrSyJpETxBgmQxH0MMMBgMHfP9Ex352EW
      JCUOSQDTAAbo/6eKVSAw+OPX3fObf/e//79/S4ZhGAiCBUmSJMmbHYQgbKa6EkDXdczsQCqV
      SkO2ZRgGmqaZ1l6jbqemaZY7nnUlgDh7ErY6cQokWJpIAMHSRAIIliYSQLA0kQCCpYkEECzN
      vtkBCIKpNA1uXAddg/0Hwel86MtFDyBsL6PD0NEJO3fDrZuPfLnoAYStJZuFsVFoa4Nox/0/
      9/lhcQGcLvB6H9mc6AGErWXwOvTvgdkYKMr9P+/sglAYXC7YueuRzYkeQNh6tEr1XF+Sav+8
      PbripkQPIGwtR47C5ATs2g1ud93NiR5A2FrcHjhwyLTmRA8gND7DQEotQXIRTJ6BvKoeQNM0
      JMBAwmYTuSNsAF2Hi58jj45UR3ZOnoIdPaY1v+J3cSGzyGcXrzJye4jBW8OmBSAIDzUfh+kp
      tBe+Bn4/xOOmNr/CHsBgfGyCUrGAFAnhxUDXddMrwnRdN63yx8y2DMO4888Mjbqdy8dUetDo
      yhraqzc2yetF8geQ338Pw+lCP3EKw4Tt1XW92v5qiuLz+RyVUoGS4aItEkTTNGRZNm2HVSoV
      7HZzrsvNbMswqglvs9lMaa9Rt7Nhj2c+j5bNYGttAxOOwfLxtNvt0qqi8/n81TttgrCe1FJ1
      GkNTsHq+7/NhuFymvPm/TFzJCo1n4Fr1Lq6iQCJx9/tDg/DZp7CwYNqfEgkgNB5JgopWTYAb
      16tv+EymOgT6+BMwNmLanxIJIGyOchkKhdo/O3y0+ibXNXj2uerXHg+k0zAxDq767wAvE3eC
      hY2Xz8P1a9WpDE0h6OurJsS1K1CpVIc7K5Xq6+ZmwWYHhwOOHoNMenPuAwiCaRIL0NMHBw9X
      vwaIxaozOfv3Vr8+dAQkuTrp7cjR6ms8nupENxMvhkUPIGy8zk64crl6OrN7d/V7kQjcGADZ
      Vp3KrBTA77v7aW/iynD3WtV9gC9r2HFjk9sS9wHW5guxTU/B7Cx0dVU/6WtRS6CWoVSExcXq
      SJDDcX9bdbr3PoA4BRLWX7lcndJw6hTEZmp+muuFAppSpFIqsfTrt1g69xmVdHrdQxOnQML6
      k+Xqmz4eB92o/v8elfl5su++h+z1Uro9TPOf/gmSJJH/+GOavvWt9Q1tXVsXBKhetB49BqoK
      x47dlwCloZv4nn2GwDdfQXI4yL3zLtl33sV14MC6hyZ6AGFjuNzQ0/vF7xk6IOE5cYL0m2+C
      rhP8g+9ia24GwOZf/2k3IgGEdffp4Aw3JxKc2tfJgb7W6jdTKbg5CAbIh48Q/v4fb0psIgGE
      daEbBj/9cJBsQQXgR68e5/++fYX9vS3VUaaJcTh6vDrOPz4GB80rc1wNcQ0grItYIkvY7+YH
      v3eEqakFhj65jHzv6GpnV3XS2/UB6N6xaXGKHkBYF21hH28vZHnnd9c5+lg7+XCE73kW7t5j
      aG2FYLA68e2fxvo3w4oTIJ2cJ1uS8NorZEsSvd0rX3tFsB6n3cb3XzpEfjZORMkgtXkg9qW3
      2yPW7dwIK04AWbaRTMyTMkpEe3bfKYfUNM3UEjqzHkZnZltmlkNC427n8jE163jaZAj3dKLP
      SdV5/fv2V8/51xibmcdzuSRyxQmgqmW0skokGmFyYoLIkYNIkoQsm3cZYRiGae2Z3VYjx2bm
      MZAkybQEuBPbg6Y+rKUtE9z7YbbiBAgEQ+xtCmOXDCIt0S/sJLN2WCO3ZeYnIzTudq4kAS7e
      mmUkluS5o720hx8+Vt/I2wmrGAVyutx43S6cLjdu5+ZdtAibK5EuMBJb4htPPMZb5+5fHscw
      DJTLl8n8+h/QH1Tw0kDEMKjwUIv5MoPxAqWKjmFAuaKRyipkCiVyisr/fPNz/vLdq5TU6gS3
      8sQklfg83tOnKbz19iZH/2giAYQHUso6E6kSO0Iurs3myRdVfnXmFr3REP/r7y8wGU+zsyNM
      fCnP+xfHqr8kS9VSxoet3txARAIID2QYBjapOpoDML+Up787wkundtEc8OCw29ANHbVcobc9
      CIBjxw4cO3agXLqE75uvbGL0KyMKYlbAygUxsxmVxXyZnRE3HrvMm5/cJJVVeOrQDqYWMpwf
      nOHZI708fXjHfe+DRt3OewtiRAKsgJUT4GGMchkkCekBf79Rt3PNK8MJwrLSyCiFc+dA02h6
      7TVs4dBmh7Qm4hpAeCijUiF/9izFoaE7a/Mbqkrho48Ifvc7+F9+CeXixU2Ocu1EDyA8VO69
      3+DY2Ud5chLJZsPZ20vqr/8GWyTC0v95A9nvI/DqNzc7zDUTCSDcpzg4iHLhIrZgEENVsbe0
      oudy6IUClUQCR3c3vhdfIPXGjwn90T9D2sTZnPUSCSDcR7lwkdD3/5j8h7+j0hzm9lu/Rmpq
      YmbfHrwlhYHYFPrf/oTX9u8jvIXf/CCuAYQvmVvMUXD7yb3/W/Ijw3yGBl9/mSs9Xby4Zz+x
      TIZnv/57/NFrv8/HDvOXK99oogcQAKjMXOCjz66RUl3MxySeHhkneXAnyVKRx+x2CmWVG/FZ
      NEPn/OQEAbeb3ubIZoddN5EAFqfpBlenUhSuj3FV388PAr9lov84n16M0+90klWK/MX77/Fq
      rsBgNsdrz71AplhE1TS6g1tz6PNeIgEsbj6dw3f+f9A791vOeP81/+mGH8W+QFeTxEAyQSSd
      5ZkTx5jM5enTdTwOJx7H5ldymUVcA1iYFruM5+x/Zt6/mzcCP0RLxtDJ8YTzQ5K+bp7q6SXu
      deO+eJmF0VGO9ezc7JBNt+IeIDE3QzJfpsktUzKcoiZ4G5ifm+RG+6uUJi5ALMZJxxh/3/Q9
      hjw7KdrsXEomObBrF4GWNv6svQN/aOuf8nzZihPA5/cxPR/D6fQjGyXxmNQ6rCW2sbkU527E
      sMsSXa1NPHWwa81tAcyklriRc+Gae4dMy3Oc7rrKu4ungWEke5FTB7+DLmV4qncXuyPVxaxW
      +3ca9XgutwerSIBMOoOEQblYoIITWZbv1GmKyXCrs5bYFtNFTu3poLutibc+Hb7z+6ttyzAM
      1OkLnH3vv+Fu/yrXW/tpUWaY7HoSr/Q2xztep8nfTntTkb6O/XQHw2s+vo18PJe3acUttnf1
      0F5/bbNQh8n5NMVyBU3T1/T7mm4wMDFDZuAij7ttGLFfkO/7l7hynzJKhN1hG535nyL7n+HU
      7h9hc4ZN3oLGIy6Ct4h9PS20BH3oOjxzZGXPyMoXVX787lV+/M4VMvkSQ/M54rfPEc1e5sMd
      /4ZQOcFw9j1udbbSlPglLj3MvN7NyRN/aok3P4hh0C0jFHBzcm/Hqn7ng4vjfP3x3dhliZ+9
      8yGRaACHzUvFcBCpKCRbOqnYFilnczz92Ot0xvN0v/xD7M7AOm1F4xEJsI3t7Azx8dUJJAyS
      WoLXUh/wmeurKH1f5cTNv2Cyq49oRythzcee8TZav/FtbG7zHkG6FYgE2MYO9LYSZonc5b/D
      FWhBKiwR1CbYN/JXqL4wldaTHGvr5ivtzyMft5m28tpWIhJgG5MwiMZ+Ra58C3dzhEHtMIpz
      hsoz/xZv5wl22gw6fb3I0taf1LZWIgG2KUMrMzE7x5hxinznEzRrSfzFv4MT/4Kmjq8BYN7j
      prcukQDbTK6kMZtRUWcukJWC+IwCTZUCkfxNUk/+R74S7av9i0ODSNkM6Drs3QchMQokbEGL
      hTIL+TKOZIzJ0E5cwXZQkuhdpzka7USu9WRcw4BMGmPffqT5eVAUyySAuA+whZU1g1LFoFjR
      0fS70zTyqkZLoBt/dozW+SFktxdcGqOJ+doNGQZMTSGfPQOXtm6B+1rU7AGWb/1LkowsN/7y
      dlZ1PZ5HMgxUHTqanHQHXQTLBaTFBGeIYm/y0iWn+eXlURxyBXdE5z+88oBJjNEoxs5dSGOj
      0BTc2A3ZRDUTYHHsFh8PDbGj+zAnj+za6JiEFZKQ2NvqIquCUq6uxxnKpygYZQ4pY2SLYd5P
      6hzqcXJgeIy/vgbJmf9N+OQJUEugG0h790EoVH2A9cx0dU3PBnhyy0apmQDhzg5aYwla27bf
      9NftRJbg2pxCoWJglFSKV8fpz8wQ8XbgDnQxnVHwVmb55edZ3gF2dYVJnf8QWypFxeWm+Vuv
      QqlYfXD1s89haBqSLG+JRW3NUjMBUrMz3Lh9C4evnZ5o80bHJDzEXFalWK5OhtvX5kHTND4Y
      SRN1qIzipa2zj2O3BvirRTdjVHAoOaIhiceVEl26jGyTCZ44Rnp0HCM+h9Tb+4i/uL3VvAh2
      +QN4XW5aRA/QcCaXSgRcNlJFjXQ2ycAHf052aZjU8H+n4koTs43xC6PEeGqefo+LJ9MZ3M0B
      Sn1RspEwdp+fzOQM5WQSqW8ntLRu9iZtqpo9gJrPEunsweva2mu+bEc2WcJtl0gsLBAf/znu
      kkyTawbVuQOtksabe5OofIw5nJxLJmkKh/Dn83QUVV548mmcL7xcHfWRJHC7LXW6U0vNBLC7
      3Uh6BU1f27xzYf2oms5Pz93g2s0p9vrcDE6FeUYeo4xKxVbiF4m9OEL9qN5Fnt3Tz3cOHsGu
      adgB2et94ErOVnXf3jAMjfhiDpf0xbHlxfkYixkVvxvKuEVN8AbSU5PExwe5nm8nljeITf+K
      ZoeH5vYwC5PNTMcLNPsX+GS6nx+evs3lIR+ao5mndvfj8/k2O/yGVuPjIMOF87fp2RPFfs9j
      KYOhZnLKAtlMCneTW9QE12ElsZU1g4puUFEVFkeGuHpjlLhbQrZJzCmnQFORR/O4XAp4Zhl1
      N5ORQ3yS/30yzTb+8PQeeoKhVe2D5WNq5nOfG/F4LrcHNRPAzXMvfZVoZ+gLO2Js5BaaI0DA
      7yeZzSDLUVETvEYriW1wIQ8S5IqQz0jMLeZYarGTG7+K0+bF5vHzfPsIU/44A7EoO72nef2p
      To7v7iAUcBNp8q769N5KDzx5YE2wJHmIhIqcPXOGvj0H6Wqrzgnp33/kzmtEafD6kyTob/Gw
      kCvzi9kiHyWisDRPuRLlxf1OHOUcaU3B483ytfYwL0cg8PzBzQ57y6mZUtn5GRYLZfo2OBjh
      LrsscXEmx1I6ze2knY4AnG6N85PhVjKxW2jYiPWE2e9/mmeefRz9w082O+QtqWYC+Nu6ic6l
      KJWtVyHUKPZ4c0zk51BGzlDIt7KYthFLh7FJOpX2QY4FWmmZ3EnAsYQ3c5VKubzZIW9JDzyp
      kmSDTDoPXS0bGY8AkBwh/da/J+nqJuF4kVNtadp6FC4kXLzg/jkp/yu88vS3Uc5/jvPYUWw2
      Gx6vGO1ZixrDoBXOf3Ye7E7CfmsVSDcCQ1NBSZItFphuex6j6GA870fKzOJV3OxPJ1nIJFBb
      byG7XNijUdMuDq2oxp7LMzOZIlNcpKf/8MZHZHGV4ffRr/0En67RrUzQsngW+95/hS3r4mlv
      M6HQfyFktyF7vNg7xL2YetUYBQryvR98FwMJmyzqZTacVqbYeYRPlRyOpn0MS+B0Gez2Ocj6
      HHiPnv7Cy80cG7eimn1nWcny29+8T9f+JzmyRwx6bgRDU1HO/Fem82VUw4stcpr+zO8Yt0Vx
      NztIew/S1yxqM8xWMwG0cglPczc7d4gL4A2ja2T0Ald6XuH5xQvMBXbjsLfy+EIOz2NfQbbY
      glUbpWYCKEtLjI3fxutv5onj/Rsdk2XZCku4CilkNUnK2Y3cfQzfIetUZ22GmgngcLvo7Oql
      /7HujY5n2/vHS+Ok80VA4uVTu/C6/2nKud1F5Jl/x3O6l4p+kqdtTpq9YnRnvdUYBjW4MnCN
      stFUnTcumGpsdonXnurnd1emyBdVsmWDlFK9kO0MthFy3Z1vpBsGmq6LwYh1VGPPppmaLpGY
      HievlDY+om1ON6Bc0e/UWsxly0SbnHicNpYKd0d0CsUyb7x9hR+/c5VUrrhZ4W57NfrYIN/7
      569jgGmzH4W79ve2cOn2HAGfC8lmJ10skizYUDUDj/3u59HA2DyP7+ukucnDuevTfOP0Y5sY
      9fZV4z6ARD4R4/Oh26Qy8Pq3X0KkgXmeOrTjztTekUWFoMdOSqmQLFR4fIf/zuv29kT42YeD
      OB12Xjolhj/XywMugp3oFYOA14cOIgHWUXfQidsuM5Ys0uS+eziCPjfff/kIakXD7xEjQeul
      ZgLIdhcet4ve/v0sl8Ubuo5u3K2hlsWFWd2CbjtTqRISEpEaIz5Ohw2nQ3z8rKcHLI2oI0k2
      7n2PJxNxJmcSeDwSFcPJof17NirGbavF56DFJ1be2Ew1hkGL/Oa9j0gml+jdf3cynCzL9PT1
      kkkncRm6qAmuQ6Nup6gJBsDJ0WMHGLhxC71ytyCmVCqRLSq0BL2oknhO8EoVimWGZ5IABH0u
      eqOhht1OK9YES8YDP9Y0ctkS/oD3gQ1ZaYetNQFuTy/y+VCM/b2tfH4zxp9860TDbqfVjqfd
      bq/1tARQC2nOfPIJA7dGEfeC69cbDXF4dxsucUHbcGomQHZ+FtWAaxcGUDc6om0klStSKmt8
      fG2S//feNSLBB/emwuao2af4Iq0Uh8Z59TuvIEag1+6Nt6/Q392MwybzyunHaA2Jut1G88An
      xHjdbtRyGWsvnVqfcMDDN04/Zto5tWC++06BDEPl03OXmJ6YQrKLc9Z6lCsaf/nuVW5OJrDb
      xI3DRlSjB5BpbYuQzmYRV8D1+dGrxzc7BOERHjIM+mhWGzbbyLVBN6Mtqx3PBw6DCoJViAQQ
      LE0kgGBpIgEESxMJIFiaWHdjBfLFMtfH5pFlmZDfTX+3eHbydiF6gBWYW8wxGc/g9zj48PL4
      ZocjmEgkwApFm33s6gyLEsVtZsWnQOViHqUioylpMiUs9ZjUJp+LMwOTzCSyRJv9j/4FYctY
      8Z3gfD5PKpUik0zQvmMXoSbfnbIys+4cappm2t1WM9taLoc0ayGARt3O5XJIqxxPp9MprbgH
      MCoqyWSKluZmxicmOH7k4J2dZdYOM/NNZnZbjRybmSt0WOV4PqQmuDa700VPbw8up51QS/vd
      mkoTd9hye43Y1r11pGZo5LYaOTaz21pxArg9Xtwe0/6+IDQEMQokWJpIAMHSRAIIliYSQLA0
      kQCCpYkEECxNJIBgaSIBBEsTCSBYmkgAwdJEAgiWJhJAsDSRAIKliQQQLE0kgGBpK64HSCcX
      UA0HRimDYjjp7bJOTbCwfa04AZrCLczGYlR0kPSSeExqHRp1O8VjUh9icT7GzGyccJOHsuQS
      j0mtQ6Nup5WWR191SWRLexct7V2mBCAIjUJcBAuWJhJAsDSRAIKliQQQLE0kgGBpIgEESxMJ
      IFiaSADB0kQCCJYmEkCwNJEAgqWJBBAsTSSAYGkiAQRLEwkgWJpIAMHSVp0Ac9PjTEzPrUcs
      grDhVl1jlslkcQU9oia4Do26naImeAX8AT+JdJrernZRE7xGjbqdoiZ4BTp37KTTlDAEYfOJ
      i2DB0kQCCJYmEkCwNJEAgqWJBBAsTSSAYGkiAQRLEwkgWJpIAMHSRAIIliYSQLA0kQCCpYkE
      ECxt1QmglhSUoroesQjChlt1AkxOTDAxObEesQjChlt1PYBsd+IwsQpMEDbTqhOgPRKihHM9
      YhGEDScZayx01XX9TgmdWXRdN609M9targduxNjMbkuSJFNrghtxO5ePp9PplNZcZLkcjJk7
      DDCt7tbMtsxOAGjM7Vw+llY5nlBHDyAIW50kSVLdH2mJuRlGJmbqDiaViHNzeAy9znyslIuM
      jk1RVrJcHRiirNfX3kJsilROYWL0FrH4Yl1tqUqWwes3WEwscO3GLbQ6Qivm09y4Psjiwhw3
      bg5T0esIzDCYHL3N1Ow8o7dusLCUq6MxyKeTXL8+RCIxx83bY3VtJxjMTQ6TzmS5NjCIqtW1
      oUyPD5NJJbl6/SZgwo0wRdVwoFFPWAC5fM6UdXfsDjdul8zcQooDPUHimfruWYRDIUpllXwu
      j0F98TncfsLBAPPJDHuiHuZza99rLm8ToYCHXDZb975HkvB6PRQy89gDnRSy9SW6x+dDLRTI
      ZnJ177NyMU86lWRkNsW+3mbm06U1t1XKZ8hk0iwt5dClalx1J4ChlcgoJeo9a/T7/CiFPFqd
      n9iVUoHpqSkMvcK1kTghb31rycTnYsRm4/j8AXK5+j4ZM4kYM4kl/G47NyYWCXnXvteSs5PE
      Uzlc3gBGMU+psvb9Zhg62VweQ3aRnR9HsnvW3BZALpPGZjewuX2oSp5KHV1AWVVRiipOygwM
      zxL0OdbcllouoygKqmTDoRYAcQ0gWJgp1wCCsJWJBBAsTSTAujOYnZ2t+ZNKKc/1gQFmF5Y2
      OCZhmTmrjQoPpJVy/MPPfs4Lr30bv8dBPpcjHk9x8skT2B1uErNxotEQly9Pki+UcDjs9O5o
      Y24xz4HdXXx86TY+J5w8fowbl89RrNhpbm+lsJggp+q0d3QQ9Lm4cvYMwb3HkDMLtETbWVhS
      OHF472ZvfsMTCbDO5saGCLS3MTI6zPjINL297UhKhbSi0OLx4Ha5kfQi0+O3cTnDONwePjj7
      CS5HhP6+Nq4Nxzm1u4mCrpPKp6HsYyo/Ctl55LbdnL90iY6QF9kdxKNn+M35axw/VGJqNsmR
      w3vFAX4EMQq0zoqFAg6Ph6KioKoqxdQcZ69O8uILXyEUCKAUCjiddhSlhCTJ1X+yxlKqQLQ9
      QipbxOOUcbrdlJQCGBJggK6B3Ymmlcnn8oTDIbL5IpViDo8vQF5R6Yi21j08vZ1JkiSJBBAs
      S5Ik6f8DuMMC7j1lnpYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Runner summary chart' width='192'>
      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
      1/x/i4EfQcYQ2SUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Runner summary table' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z3wc13m3fc1sb1hgd1EWWPRCAARAkASLwK7CIqpLVrFkWcVxJEd2nrjF
      cWInLm9c4rxO8kQuUbFESZRMiepiJ0GKFAU2kCDYUImOBbBYYLGLXWybeT6AWBKixDiURCvC
      Xl/w+82ec+acwblnzpy5//ctyLIsEyfONEQQBEH8c3ciTpw/J3EDiDOtiRtAnGlN3ADiTGvi
      BhBnWhM3gDjTmrgBxJnWxA0gzrQmbgBxpjVxA4gzrYkbQJxpTdwApiUhOvduZOOuI3SPRv/c
      nfmzovxzd+BzR9RH447nef6N/TQNBtBaZ7Lsri9x94p89B+37UAPBzbt5sRYDmvuX0T6ZTYT
      bHuPd054cMxPxmqY3vfAuAF8ogQ4vfFf+eW7Sm66/x/4Wm4iEVcLR3bX0bYin7KP27wUxj/i
      xuW1EbnsNgY48u4xwpoSivIz0CqEj9urK8gQ7/7nP3Ms56vcd80MLLpLlfVxavPz7O1LofqG
      2yhP+fBScQP4BJHbdvDs1nEW/cVXubYqB6MCSLZhL5IQAFmWkWUJSZrwQBdEEVEQEJCRJBkZ
      QJ74K4gioiiADMgSUUmG6Pm6E0UlZElGkmVAQFSICJwrLwsoRCbKCyIKcWKiR52tNHh12MoL
      yDIrJs4dlUAQQZaQmKzHufZkZElGlkEQZCZPL3/gnLIURWaiDRkQBBFRPFf/3JjPHxdAADkq
      gSiCFEVCRBHrv4wsy0jSRFsIwkQdKULAO8yof5xwJEJUUiAKIEvSuWsw0b4gCghyhKB/FK9P
      z3g4QiQ6cQ0EYarBxw3gE2Swo5X+5GxusSeiV0YIePyEZBlB1GBQioRGOtj/6u/5/cY63KKF
      2Wvu48t3raSYg/zbD7biz4nQc+oMrZ2jWFb9gP/622XofL3UvvIf/OblY7gFJQrSmHvdDJAj
      jDbXsO7J9Ww71kXEVMiNj32X+xdno97/M1Y/b+cn90m8+tJRsu/+Ed9YlgzI9He0MiKFyE2x
      oRMAGnjiwaeQvnwHlt1/4MXRlfz8+xbe/EYzK//4V1Tipn7zDnpPQUZ+J28d6sMbitLReBKX
      uoqv/fibXF8a4tVHvsiBkgdR173K8UGBrIX38u3v3kmB0MfhTS/y7EvbafZqyFpyN3/15bXM
      crTx23ueQPn1+zBv+h2vhm/hP351K3ZADg9zas8G/uu/XufUCJgKrubBr15F4O2XeXHzSfoV
      f82u3yvIu+8/ePyeJLb+/Hs8fbCHsYiOjPKVfPGxm7Ace5Xf/tvrnJZE3nrtWTJXfZ1/eHA1
      xanaKf+zuAF8gkQjEWSDHqNSgcgp1j32czYPDRESVvOT1x7EeHQH21vy+fq/PUKap57X3qhn
      9/5M0qsBohiKb+WHX5+Dtf1ZvvzIHk58ewFZh9bz1LtJ/OUTb7IooZuaF17nyDjInhO8+dZx
      FJX38fNH81Gc2chPnn6DObP+gkpZIjBwiC0HV/Dwz/+dUrPqXA/DjPm8GHUmkswJF/R8jKN/
      fI3K+3/EHxfZGR/Y9dFj1GZx9Ze+zPL8Ed760T9w4swwVxcYABDTlvC9J+4i2rmDdf93E0fb
      b0Th2sfBJpmV3/tPvmvuY/tTr7CztgD7WhXg48j6jcz78i9YvzCNyV4GBjo51dhJ+j2/5AdX
      ZxIZHQOjCcsPiklSfY9DBX/DV68vw6YHKeqiYO03+dcHbShG29m35R22bu3hB498hW8gsbM7
      jeVfuI85aR8+nrgBfIJoDQZUI8MMjoeIyLN45LkX+fKZZ/g/33IjjwcYaqpj35E+znbtQQFA
      FssXC0zsw5ixO1Iw6ZWoE8wYhB6kaJSetjYiC/6C5RkaGFOgUqkRxyHc30tHZx3v7zvAvk1q
      REBgDiEBQECrKeLWv7qL0ilv3iGC40HCIT2CeOFSIELG9Y/ywAIHGkFi/BJjNFmTSbEkodGE
      MeqVKGLv0AIpOQVYdWGG1CaMOiA6ylB/K3W79rG74RivTAya0iolgjRx3swbvsED81Jjkx9A
      Y0wkNUHLzl1/5OmBUkrLy5lVakWUQxf1R/INcXrXOraccREYH8cX0pJ3jYT0J/7P4gbwCZKU
      U0p+8C0OnWijKCWBdKMKKRqdWMeKClSJGZQvW8W3vrGWXKOCyHiQiKhA7T34kW2qNRrkYQ+j
      YQlDNEI4HEECBI0WbXIFN6++ni9cU0qiEoK+ALJRhyAIiLYMUi/adtJiMBkRlWFCoTCgPnc8
      kYw008Q6GwAZWQ4RDkWJSAHGvGMEMfzPL4igRKW2UFR9M0v/8j4WpOsQwn7Go2o0mpNAEhl2
      I+IH1uUY7Mxe/QAZFV0cP/ouW586TOuN9/HFG3MQFQLB8SCSLCHJAuGTb/LMkQz+/r9+ztzI
      WXZu/CPbogAT7yCRSJhwJIIkKxAg/g7wqZJexU2r6nl2zybeGu+nMNlIuLcXZXomRp0RU0Eh
      9v372PiqkjmZOqIBBdaiImYkfXhzolJFetFs7LV7eHlblHzlME09I4StoErNY3ZaLTtrd7Ep
      1IfdJDLu0VC0egGZH9lBJeYkG+FgNy73MNHs1HNPog+cV2FAqz3L+5t3M2YcpbHNiV6V/z+/
      HmIC6fnZmI7tZPcbb+KdkYIyPIbaUUVlwUdXGx910VhfS3/Uiikjl4IsGYMsI0X1pGalM3r6
      ffbuHiGzZC7lBhvJ+jZaj+wnEBqgqXsU7ABqzLYUqG/lyLvbiVaWU5anZ6ihCbdlBrNyEwFQ
      /NM//dM//c9HFufDUZNcOJMCvY/mUyc403KWwYiduauXMzc3hURzKikJATpPn6axo4dRyYQj
      Lw+7WWTMp8Jekkt6oh5lZIwhj4HSpaXYLemkSO3UN7Qy4Bcwp2STm59HQXEBuelJiN5umhqb
      aO0eIJqQR2lxOqaIj0HBwcJZGXxwp1CjCdN5sgOvaCEnNw2dIoTPFcVaVkp2khaFICAKepRC
      F2dOduARE8jIK6IwNQVLhgmMdrKyM0nURgmMeNFkVlBo1xEaHsFUsoQiK0iRIMGgSErRXGZk
      2rCaFbjaztDY3El/QIU9r5DMZDVBd4TkWeVkJaqZsiKLBnB3n6Gu7iRNXSNoc2azZPFssi1G
      rDYz431tnG5qxWctZ05FARbPaY6f6SOgsJCdm4UtI4/S3BSSEowIfjetjY241HbyMwVat+/i
      lJBFeXYiP/3Jj38kxKNCTDOkURo3b2BTt5WlN6xidoZ+2roDxKNCTEfEBPLnV5Ovc9HU1IY7
      8Ke+Ln4+ib8DTEOUyUUsWRSiI2pG+b/pQ/CnQHwJFGfaEl8CxZn2xA0gzrQmbgBxpjVxA4gz
      rYkbQJxpTXwb9DOAFA0TiUQ57+ovolSrUIqf1h6lRDQcRRYUEz74n5mtUBlZkoiEw0iCAqVS
      GdMxyFKUSCRCVBZRqZSIosCHd1tGikYn9AxKJf/dJYw/AT4DNL/5//HIPatYe+NN3Hzzzdx8
      82P8sfVSPpkfl3be+eUv+P3LB+n7NE/zPyaCq20Xv7hnCbc/+gNePh6YcCREJnD8FX74tTtY
      es8vqGlzXUIR56Zh6zP8+49foN7z358x/gT4jJB27WN857YbKUnT/veFP+dYklPIzMilp62d
      cGUpakKcbRumYmYhZ1qtn+i54gbwmWViOTDm6qJn0EdYUGNMSiYtNQlhzIVrxEMwJBMOBomq
      E7AmiARGRhkLyWhsWeSmGSAcwN3bjcsXIooSvdlGSqoFo+oDp4r6GezuYdAbRFJoSLJnkZ6o
      +YglxqePYLaSnpqGtaeF7nApefTQOmjGYk7GHPPKjjDa10nvsJ+IJKDSJZLisJOk+UBjUhDP
      YD8Dbi9BSYHBlo7DZkJ5TgsdN4DPCMHBszQcPYgnSQ1YKKzKxzjcyNYNL1Hb7MYf1WDJm82a
      O27B0bWZ5za9i0dwoPZ30+qysmBxBuGuLjo7WhnI/gr/9yerMPp6eH/j0+zu8BIKgs5RybV3
      3M41xReeOcxQ0z5ee3UXp5w+wqKK1PKb+Mq9K0i/pOj8U0QwYrWaMYyeor03TCYdOI0GygxW
      DEyGcfFyasuLvHq8D39QQqlOpuzOv+T+6gstIIK35wQ1m7ZSe7oPbxR0mYv58v03UnpOLBE3
      gM8IY1317B4eJEGrAMq4Z1YOSbXP8vyxJO69Ywm60Q4OHT7Mtn0z+WI2iIZMFqz8KjfOGuTF
      bz1Ft76KB//2UZLPPsk9f11HO6uYpTaQWXk111eIhIdaeO9wG3XHO7iq2Hz+xNE+9qzbSKO1
      mmvW2hFHG3hn/VPsXLqCLxX9ua6GSKLNgl7S0NfpxMkgxgQrFksCAsPnyxQtZFUmREOjtB/Y
      wp6dDdxSXXW+GWmEE7t2cKRbQfGy67Erutnx/CtsnreMQlvcAD5TWObcwpcueAeQZYlDrWcY
      DeRx+vABBECZUkpJpgkZUOkNJBgNqFXDKAQttmQrerUSVZIFc3SQqBTB33OKvTU1DKoNaMbd
      9A1D/rmoEzHCTjo7/XjGm6gLdKEQIHvJfBwfXEpcYVSJNpK8Rlyd9dSrlSTarKSYh84XcLdz
      YPdumiUNWinE6MA4ctoHpJCRYQb7hxns9BFRhulWgLliFrmJ2tjuUNwAPsMkpTpIypjHHV+7
      nRmJSkL+McYjIsMn/4TK0RCjzQepHS7kez+/l/yBg6zfsJvBD5ZTJmK1GkivupFHbptHilZm
      fGSQsQ++J1xpNBbSzFrONr/P4YT5LMlLI0HRdP73rlo2HlHzrSe/Q7VygEN//E9+0/uBNhRG
      TAlm0ssquP7em6i065C8LkZkI8pz+59xA/jMIpA+/0aqDm7muSdcZCSoUeqSKZw1/xKSxwsQ
      lWhTc0gPH2LzC+vJUI3RMxKKqYBjKDO5am0ZJ7a/ybOuw5jUKjSmJCquvhOb8ZMf1Z+OllSH
      BWHvIENyFFNqEkrvBT8nF1Bha2DPC8/QmmRE6P+Q/VyFleL5pRx/+wDvPOuk1qxHpVaTv/gL
      LDOaJorEJZF/fhRqHVZ7Ltl2KzrVxK1JEEBpziAvPQElAiqtgcSUDHJyMklLSiAxOZOsDDtm
      nRq1wYqjMIdUsxalUo0x2UFhaSZJ5mTsJgGUJpIz8ykuLaEoP4sMqwmdLgl7bjZ2WxIpmdnY
      zRoEFKh1JqyOPIpy7ZguspZPGwFRVGO0pOPIySEtSY/aZCcrt5DinBT0GjUGazqFuWmYrXay
      LSqispqE5GxKykrJL8ijIMOCTmXAmu7AkZlGSmoaqTYzaoWIUqMnISWbovxMrAYlP/7Rj+KS
      yDjTl7geIM60J24AcaY1cQOIM6255C6Q0+lkYGDgSvUlTpwrziVfgiVJQpKmd9iMOJ9fVCqV
      EN8FijNtie8CxZn2xA0gzrTmsl0hpOg4o4MDuDx+VMl5ZFsmPhvKUgifewBnvxt/RESXlEJ6
      qhWDRjHVv1yWkSLjjLpdDHqDaBLTyTrnoSdHAgwP9NE/5CUkqzHbHWRYjCgVHyWD+/wiyzLR
      aJTBwUFcLheyLJOUlERKSgpqtRqv14vT6SQQCGAwGHA4HGg0milhwGVZJhgM0t/fj8fjQalU
      kpKSQlJSEqIo4vP56O3tZXx8HI1Gg8PhwGi8Mn4QsiwzPDxMX18fkUgEg8FAeno6Wq0Wr9dL
      f38/gUAAURSx2WzYbDZUKtWU+rIsMzY2xtDQEKIokp6ejlI5MbXD4TD9/f0MDw+jUqlwOBwY
      DIbY9blMAwjQfWwftXUnOXTwXbS3PM5P1tqBKGMDjbz7zlu8W+8kIAiozPksv/kWVlQ4MKrO
      P3CkSIjek3vYf7CB/afbMS/+Oj+6vRgIMtRykC2bazjeOUxYVmLKreb2O1dTlqZH8dkRsF4R
      JEmio6ODbdu20draSiQSweFwsHr1arKysti3bx+1tbV4vV4SExNZsWIF1dXVsQkAE5Pg1KlT
      bN26lcHBQRQKBWVlZVx33XWYzWb27NkTa8NgMLBw4UJWrlyJVvvpq9OGh4fZtGkTx48fJxgM
      xsZQVVVFQ0MDO3fuZHh4GEEQyMvL48YbbyQrKwtRPD+XhoaGOHjwIGfOnEEQBB5++GHMZjOS
      JNHa2srmzZvp7OxEFEWuvfZali9fHhvbZRtAz8l2hNxqynp20hI77qfr+EEa2lUsf/QnrMj2
      sed3P+PN3XWUZKVQkHz+gkYjYQY624naZjAz00XH5A8hJ4e2vkeXei4P/WAlBcp2Nv7i12yo
      LaHwhmL0qullANFolJGREQoLC/nSl76ELMvs3LmTs2fPEgwGcblc3HvvveTn59Pc3Mwbb7xB
      eXk5SUnnkw54PB6ampqYPXs2K1aswO128/bbb9Pe3o7VaqWxsZEHHniA3NxcOjo6eP7556ms
      rCQrK+tTH5/L5UKv1/P9738fvV7PsWPHOHz4MDNnzsThcPDwww+TmprK2NgYL730Eu3t7djt
      djSaCX9tWZbxeDwEg0GuueYaGhsbY22PjY1RX19Pfn4+Dz30EJ2dnbz99tuUlZXhcDiAyzYA
      C1fd/xeExobZ8v6Fx2UQlOh0ZvR6FQqFHoNBh3L84o0mlc7InJseoXSgiU397583gEiQ8aCI
      2qRDo1Gg0OVx1TwLLx1pZHRVITqVOK2WQSqVitmzZyMIExkOx8bGMJlMKBQKgsEgWq0Wg8GA
      QqEgNzcXk8lEX1/fFAMAUKvV6PV6RFFEp9NhtVrR6SYkXwaDAbVajSAIGAwGUlNTUSg+LHXG
      J09BQQEFBQXnsrlE0Gq1WCwWDAYDycnJwMQTzOPxoNfrSUhImHL3F0Ux1kZPT88UAxgeHkah
      UFBYWEhCQgIlJSUcPnyYoaEh0tMnsix/wu7QRhwl5eR17eLAxmdo1Adw9tlYtHIWKeY/UWGh
      TaN0TgZn3z/I68+2k2TUoXX5GO0ZZFiSSP1kO/yZZ3Liy7LM0NAQJ06cIBgMUlpaikqloqmp
      iTfffBO9Xo9CoaC7uxuXyzWlDbPZTF5eHnV1dbS0tCBJEhaLhbS0NBITE8nOzmb79u0IgoAk
      SWRlZZGS8hGJdT9hRFFElmXGx8epr6+nv7+fkpIStFotgUCA48ePc+LECcLhMBkZGWRnZ09Z
      3l2KUCiEXq/HaDQiCAJKpZKkpCQ8Hg+Tu/+frAHIYcYD44SjSnRaJaKgQauTGA+OExk5xTub
      36d9NIBYupZHr8n78DbEBPIXXssq3VFOnh1kHDVyJAhKcdqG8pYkCafTSV1dHVqtlvLycjIy
      MgBYvHgxx48fx+v1nl/XfmCCTH7MVKlURCIRRFEkHA4TCoWIRCIT8XcUCmRZRhAEQqEQwWBw
      ysvmp0kgEKCmpgaAoqIiCgsLY3f5yYmr0+liL/OT/fwk+GQNIDRMW10DrZ40Vj58K2WGMF07
      n+Lfao9R6ijHnJJKmiGIaL70y5XSaGfmIjszFwGMcfg327FkpZMoXpnH8mcJWZZxu90cOXIE
      m83GzJkzSUg4n+J08vEPE2vexsZG0tKm5gR1u900NjZSVlZGWVkZfr+fzZs3c/bsWbq6uhgc
      HGT16tWkpKTgcrl48cUX6ezspLS09FMfXzgcpqamBrVazezZs7HZbLHfdDod8+fPZ+7cuQwP
      D7Nr1y6amppITExEr78oA+BFqNVq/H4/Pp8vtps2PDxMTk7Ox90F+ihkpGgAn1dJYFxCNkXw
      jnrwjiei0GVTvab8T/rw4BseIiQoMZoMjDfv5u1DEnO/OAOTSjGt1v8wMUHa2tqQZZnZs2dP
      2ZkJhUKMjY3FJsOWLVvQ6/Wkpk5dKEajUXw+H2NjY7EM7D6fj0AggFarZXh4mFAoFCvr8XgI
      h8NXZHxnz55lYGCAO++8E4PhfCZKj8dDb28vNpsNi8WCVqvF7/czOjr6J7vnJCUlEY1GaW5u
      Jj09nY6ODpxOJ1ar9fwT5rJcIVx7+fXPX6MtMM5gez2ehDKKCvKZfd1t3JzhYsemrRxscxMC
      RE06VWtuZu2CQhK1k3dwCb/nEC/8cD31wTEGnd2MajIoyi9j0ZqbWGBtp+adbTT0jBORFFjK
      VnHPHcsoSNL+t6HuPm/4fD6ef/559u7dG7s7KhQKFi1axJIlS3jvvfeora0lGAxitVq5/fbb
      KS4uJhgM8tprr1FVVUVmZiZ1dXXs2rULt9uNQqEgLy+PVatWYbFY2LFjB3V1dfj9frRaLZWV
      laxdu3bKk+bT4s0332T9+vUxoxUEgfz8fFauXMnp06c5dOgQPp8PhUJBVlYWa9asIT8/nzfe
      eIOsrCxmz57NgQMH2LBhA+Pj47jdbpKTk6moqODGG2/E6/WyefNmOjo6UKvVXHPNNSxduhSt
      VosoipfpCxR00dzYi//CqkodiakOshJFRocGcLpGGI8KaIw27HYbJq3qgskrEwkP03Wqi9EL
      21XosabZsWqDuJxORsYioDJgsWeQZtbG4kROJyKRCE6nk6Gh8xERBEHAarVis9kYHh7G5XIh
      SRKJiYmkp6ejUCiQJIne3l4SExMxGo0EAgGcTmdsMlmtVqxWK0qlEo/Hg9PpJBgMolarsdvt
      mM3mT2ydfSkGBwfp6+vjwmloNBpJS0sjEAjgcrkIBoMoFAosFkvsQ1hvby96vZ7ExETcbjfd
      3d1T2jWZTLFrMfkhTK1W43A40Ov1k5sLcWe4ONOXuDNcnGlP3ADiTGsuuQsUXx3F+bxzSQMI
      h8NEIh8diT1OnP/txJdAcaY1cQOIM62JG0CcaU3cAOJMay7TF0hi3NXM4cNnGBiLojQkkzdz
      FsWZCSjlECM9rZw82cxAQIktv4yKwgwStFP9eGQpin+ojeNHT+P0RlCYUsgvLqMwMxH1ZMFA
      D3W1DXQMmahcPZdso3baWawkSQwODnLixImYnDE7O5uioiJ0Oh1+v5+Ghgb6+vowGo1UVVV9
      6FfcQCBAS0sLbW1t6PV6Zs6cSVpaGqIocvbsWRoaGgiFQgiCQGJiIosWLboiijBZluno6ODE
      iROEQiGsVivl5eVYLJZYmZGREU6cOEFCQgJFRUUX9SsajdLZ2cmJEycQRZHCwkLy8vJQKBR4
      PB5Onz6N0+lEo9FQWlpKZmZmTO9wmQbQy/sbt1If1mDUQKCjkZazLhT33EJ2sJn3d2+noU8g
      QR/h1Jlu/NffyJJSO/rY2WQiwQGObdvEwWE1RrXAWFsTZ3vdsHYNM5NVQJT+hh3sqjnMwQMW
      1NWlOKahAUQiEbq7u2ltbY2JRpxOJ7IsU1payrFjx6ivr0cURVpaWvD5fKxdu3aKK3MkEqGt
      rY333nsPSZIIhUJ4vV6WLl2KzWbjyJEjtLW1xTTCk67RV4Kenh52794dc8br6+tjbGyMa6+9
      FrVaTSQS4fTp02zatInCwkIcDscUA5jUSWzfvj3WxsDAAEqlErvdztGjR2lqaoppHbq7u7nh
      hhuw2+3A5RpAREbrmMP18+eSbxXoP7mF9c/uo6F7GSr3cZq6FFTcch8rsvzsf/5J3jveSEmW
      jazEC/zLBTDYK1l1TRVFNiW9R95mw646TnUtYmayFWm0lX2HR3DMKqG3yTftJv4kCoUCh8NB
      VlYWFosFv99PTU0NTqeTlJQU2tramD17NpWVlXR3d/PKK69QXV09RdDi8/lob28nMzOT5cuX
      09/fz969e+nr68NsNjM2NsbatWspLi6+YkqwSURRpKSkhLKyMjQaDY2NjRw6dCimR+jr68Pp
      dOJwOEhMTLyoviRJNDU1oVQqueuuuwiFQuzbt4+mpiZUKhX9/f3MmTOHyspK/H4/L7/8MgMD
      AzHnu8szAMHOvDUOlKKAFPERGB3GHzFhVI0y0ONBNuRSkJuERptISZGVN+uceMbGkRNVsWWQ
      UpNM2VI7SiXI4VECY15CET16nQoYp6tuP059EcsKwpxWN16qN59rFAoFqampyLJMKBSiu7ub
      sbEx7HY7Pp8Po9FIZmYmGo2G3Nxc7HY7Q0NDUwxgfHycSCRCcXExBoOBzMxMrFYrgUCAQCCA
      JEmYTKYr4vz2Qex2O3a7PSbECQQCJCQkoFKpCAQCtLa2YjQayc/P/1AXbVmW6e/vZ+bMmZjN
      ZqLRKDk5OXR1dQET4qBQKEQ0GiUcDqNUKqeM9fIMQKFEiUw07KNlz4u8UtNB8vIvUJUicCoI
      qPVMPKUELDYb+PyMhEJEYycUEAQlSqVMNOCmufZtXtvTiXXuDczNMhIZOMa+M0HSygvIsnVM
      27v/JIFAgP3797N7926SkpKoqqqiqKiInp4e9Hp9LAyKQqFAp9Phdrun1I9GozG9L0xMCpVK
      xdjYGH6/n56eHn7zm9+g0WhITk5m9erVMZHNp82k3HNsbIx9+/YRCoWoqqpCpVLFlnQVFRV0
      dXUxPDz8oW2EQqHY00EURdRqNaFQCLVaTUVFBXv37mX79u2o1WqqqqpIS0v7+IIYKexkzxO/
      ZVNfEovX3sfC8gKSxZ6LygXHx4kqRDSeOp756V4a3T4U8x/i53eXEhzt4cCr69jaaaTymttZ
      PKuQVJ2XU7sO41bZWZaXiVHs+JCzTy9UKlXs7u31enG5XHR3d8fWtRcKRBQKRSxiwiQX6oov
      PKZWqzEYDNx5550xoUl/fz9vvfUW9913X0yU/mnj8/l44403yM7OjqnCRkZG6OrqIjU1lfT0
      9IvcnS9EFMWLRDIqlYpoNBoT1ZSUlBAIBOjo6GBoaCgWEOAyDcBPw/r/n+dbC/jKY7cyy5GM
      QSVAVIfRLMCgixEPOMwS7iEXGnMuCdaZrLo7m0WhCEJiJtFxL6c3P8NrpxO54St3MT/bhkkt
      wsAJjtQfZdfRYQ7vfxutPEpPr59Tf+8h9MO/56YcHdMsNBBKpZKMjAzsdjvj4+McOnSIjo4O
      HA4HIyMj+P1+ZFkmHA7T29tLZWXllPoKhYJoNMrQ0BCZmZmMj4/H4ghptVqKiibyocqyjNfr
      pa+vj97e3itiAMFgkLfeeovy8nIKCwvR6/VIkkR7eztvvPEGIyMj6PV6vF4v0VUWFyIAACAA
      SURBVGiUEydO8NBDD01Z4mk0Gnp6eigpKSESiTA6OoosywwODuLxeCgvLyc7O5tIJILL5eLs
      2bMfMyqEaz8vv+Fh8Y++yLwcE7FQPQoLjux0hNP1HGvoIHvGMO/WDpBStpxESxpphsnFjMSY
      ex97trZT9NCvWJyfhGbyp6QSbvrLH7I8cG69N/Q+j//yFBV/9UUWp/+Zc3f+GfD7/dTV1ZGb
      m0tqamos0hlAamoq9fX1nDx5kqSkJI4fP87o6OhFkkiTyYTBYOD48eNkZGRw9uxZXC4X5eXl
      dHR0cObMGebPn4/VaqWnp4fu7m7WrFlzRcbX1NSEQqGIRbmAiadTSUkJf/d3fxfzRTt69Cge
      j4eFCxdOCfkyGRblnXfeoaSkhFAoxKlTp8jPzychIQG3201vby8ZGRn4fD66urpiO0BwuQbQ
      2UjdaBuHv38fb5ybuPr0ElY/8B2+NLuaa4YGePEPf8vrHg15K77AA4tLSNZfsJKXJMI9zRxt
      a6PvZw+wZbIXjiruvPdB7q12EHvf1zShVxmxpKeQoJleMYFgYjK43W6ee+45BgYGYkLxW265
      heTkZJYtW8Zzzz3Hs88+S1paGo888gh6vZ6xsTGefvppli5dSkVFBeXl5bS0tPDYY4+RnJzM
      XXfdRU5ODpFIhJMnT/L9738fl8tFeno6999/f+wO+WnT0tLCunXrWL9+PTAxoWfOnMmjjz4a
      i3wB0N3djUKhiCnCnnzySQoKCli6dCn5+fkUFRXxne98B7VazfXXX8+8efPQaDSUl5ezceNG
      fv3rX6PValm5ciUVFRWx3a5LKsImw2ZchBQhGI5OOSQIIqJSiVIASYoSjUpIMogKBQqFOLEO
      nSwsy8hylHA4OjVpsyCiUChRKi6Y5nKUcFhGVCkQhekZG1SSJKLRaCwcyORe/eS6PhKJIEnS
      lOMw8fIrimIs9k40Go2tlZVKZazcB9tXKpVTgk99mkSj0YvmmCiKU/o32UdZlhHFibkUiURi
      1+LCMcDEkm/y+IXjntwomPzNaDReWhL5kQYQJ87nAIPBEJdExpnexA0gzrTmki/Bk+vHOHE+
      r8TDosSZtsTDosSZ9sQNIM60Jm4AcaY1cQOIM625TGe4KN6OWt58411ah8OoLTnMX7GGxWXJ
      qEfOsq9mGzvq+2Klk2bfxN1Xl5NquiC7nxTG03mErZt20zwYQmXNY96ya7lqZhqaYD/H9+1k
      75EWRqQkZqy4gTVzszCqp194dFmW8fv91NbWcvjwYaLRKDNnzmTJkiUkJSXR3NzMnj17cDqd
      ZGZmcv3115OcnHzRV9Te3l5qamro6OjAbrezfPlycnJypghgTp8+zZtvvsmtt94ac5D7tJEk
      ifr6enbu3Inf7yczM5OVK1dOcYNwOp3s2LGD5ORkFi1aNCWDpSzL9PT0sGXLFvr6+lAqlZSW
      lrJs2TLMZjPt7e3s2bOHrq4u0tPTY21P7m5e5hOgmXeeqMGTUsGixQsoMDjZ9+rLHHFCYKiL
      +pYupJSZLFu2jGXLlrFghh2D+sJTyYT8Xex9dQsD5lIWXjWPLFUvB3a+w9Hufk7VvMOuo25s
      pQuprjDR8toLbDszTFiafhtWoVCIY8eO0dzcTEVFBbNmzcLpdFJfX09nZye1tbWYzWaqq6tR
      qVS8/fbbMWngJMPDwxw6dAhJkli4cCF6vZ6DBw/GnOpgwulu+/btdHV1TTn+adPU1MTevXsp
      KSnhqquuQhRFampqCAQCsfE3NDRQX19Pb28vwWBwSv1Jr8+EhASqq6uZNWsW/f391NbW0tfX
      x6FDh1CpVFRXV2MwGNi+fXvMWxQu9wkQsjDnC3djzssi2SAzcCbE2d9vpqnXT4HoYUxSUTR7
      ESuu+miHKoXGTNnKe6nKyiLFoKCvbpzOzbW0Np1Bd3wIZdZClqyqJl3wYuz6AU/UNrFqxgLU
      mumVJUapVFJYWEh2dnZMGbZ//36CwSDd3d0kJSUxb948UlJS8Hg8rFu3DpfLNeUO6vP5GB8f
      Z8WKFTgcjli2lcHBQVJSUhBFkf3792OxWCguLr6i40tLS+OGG24gIyMDpVIZ0y6Hw2G0Wi3t
      7e243W4KCgo+NF+BIAgUFBSQn5+P0WgkFArx/vvv43K56OvrQ6vVsmDBAjIzMxkdHWXDhg24
      XK5YW5f3BFDayK/IJ9Wkhsg4w12tDARSSUtRMj7uR5BFjHrdJZtQKJPILi3EnqBBjHoYcnYz
      Op6ELT0Vkz7AcF8/I54wiBqyclLoP9lKf+QDznPTAFEUSU5OJiMjA5VKxejoKB6PB6PRiFar
      paenh5GREYCYE5vT6ZzSxmQq0d7eXmRZRqPREIlEGBkZIRKJ0N/fz+nTp6fkz71SmM1mcnNz
      0Wg0MT2DwWBAp9Ph8/loaWnBZrPFojx8EEEQMJlMmEwmwuEwZ86cobm5mYyMDHQ6Hf39/QwN
      DSHLcuz69Pf3n3cKvKxeiyIKZKLBEY5u/BVP7hqj6kvfYrE9Sl+Ln/5D29m25yDrTAnYy9bw
      5ftvYHZ24nndAMI5lZJMxNdH3TvP8OyeUWbf8RcsKcwiolpG74sv88+PPs+40kKOJcCIz8b4
      NPxmd6HHZltbG/v27SM7O5vKykoEQaCzs5Nf/epXDA0NxaI6lJSUTGkjLS2N4uJi1q1bxy9/
      +UvMZjNqtZqVK1cyPj5OTU0N8+fPJzU19Yrrgic9Wj0eTyzb5cqVK2NRLoLBIFVVVZw5c4ax
      sbEPbSMYDLJlyxaeeeYZcnNzueOOO5gzZw4AnZ2dPPHEE/T395OQkIBSqSQlJeXjZ4mUgu1s
      /Ie/4+Xxq/jGD77L/AwTagXkLrqHH825lbAkEfa2sOn3T/LkS0a+e4OCdT/7A7VOD8rVP2bT
      d64iMNTC5t/+kjeGy7nvG3/J0vwk1CoR8hfxxW/P5fZwBBkR145/5rE9evTTTQp2jmg0yunT
      p3nvvfdYtmwZ+fn5sUyQa9eu5dprr425Pj/55JNYrdYp9TUaDYsWLWLu3LlIkkQkEmHLli0k
      JyfT2NgYk1z+qelHP2lGRkZ44oknuPrqqykvL0etVjMwMEBPTw85OTnYbLZLGqZarWb16tUs
      XryYrq4ujh07RiAQYNmyZVxzzTUsWrQo5g794osvTmnv8kYsjbD7F99mXeRufvOvt5Opmrij
      I0sIogqNQY1eFMA8l5Ur9rP30BjjiTfwj+uun/A5F0UiY4MceO5feNW9mO/9+H5mGoRYp2RE
      VFo9ap0Akov3TrSTWnQjNuX0Wv/DxJ2/s7OTw4cPc+utt07Z4Zl8rE8qqQYHB3G73RdliYQJ
      H/nJ3ROn00kgEECpVLJ//362bt3K448/Dky8dOp0Om6//Xa+9rWvferj8/v9PPvss9x9991k
      ZmYiCALRaJS2tjZeeOEFent7Y/7/siyzc+dO/vZv/zaW6X3S31+lUmGxWGJqsVOnTuF2u7HZ
      bLFxDw0NxXKITe4CXZ4B9G7n+R16bvm/y9COuBgEBIUKnTJIT+MpWryJFBenow+dZeueMxis
      MzDodOfXcHKUUe9Bdu4YYd63VpHidzHoBxRqDEYjwcEOXP4w+oQEfEc38HpTFqu+X4xmGmaJ
      DAaDNDY2YjabgYlJLgjCZJI3+vv7USqVyLLMSy+9RGFhIcnJybFMkFqtFlmWGRgYIBQKIYoi
      O3fuRKFQUFBQQHV1NX/zN38TO99TTz1FUVERS5YsuSLjO3bsGCaTCa1Wy+DgIDBxR583bx4v
      vvhirNzevXsZGhpiyZIlWK1WvF4vKpUKpVLJpk2bcDgc2O12AoEAp06dIhgMIggCXV1dMSHN
      66+/TkpKCna7/WMawJCPsCPM1p/+FVvPHdLZi1l539dYnaTmcM2L/PMfuhmV9GTNu56H71hE
      pkV9vr4sIw/78OrgzG++wb7J4+lzuP2e+1lpbqPmpVfYd8YDliKuefRRbipMQj0NP9tFo1G6
      u7vZunVrTDaoVCq57rrrWLt2LYcOHWLbtm0EAgEWLVrErbfeikKhwO/388ILL7B48WIKCwtp
      ampiw4YN+Hw+5syZw+233/6hovc/NQfvJ8XIyAg7duxgy5YtwPlAWV/96lenyDL1ej2hUCh2
      E33llVfIz8+nurqapKQknn/+eXp6etBoNMybN4/bbrsNs9nMgQMHeOutt/B6vVRVVXHDDTdM
      Scca9waNM22Je4PGmfbEDSDOtCZuAHGmNZd8Cb4wjEacOJ9H/lsDiIdFifN5Jr4EijOtiRtA
      nGlN3ADiTGviBhBnWnOZ7n8jHN3wNC/uPsVAQCYho4wVt93LjXNSUMpjdBzewWuvbOXksI6i
      a+/g7lVzcZjVF/jxyESCwzRseY5Xtp2gJyBjclRw3U23s3JOBtpJsxw+wjP/+Uf2t9r54i8f
      ZnFKwuW7r/4vJRKJ0NjYyIYNG+ju7kar1bJo0SLWrFlDUlISLpeLV155haNHj5KSksJXvvIV
      srKyLvKeHBkZYevWrezevRubzcatt95KRUUFoijS2trKhg0baGtrw2AwcPfdd7Nw4cIrEhRN
      kiTee+89XnnlFXw+HwUFBdx1113k5eXFynR2dvLyyy+TkZHBmjVrYn5RAOFwmMcff5xjx47F
      jikUChYuXMhtt93GwMAAb7zxBi0tLeTk5HD33XeTm5v7cbNEDjA4XskXv3snacoAZw++yRvr
      12FJ/Rbl3gNsfbce7aIH+F7+CJvXb2WrJYnblhZzoTtQVPLhYwZ3/J/bSNGN0bx/M+9ueg1T
      0sOsyNcBIc7s3sqQSYfkHicwDcUwMLETFwwGWbVqFVlZWXi9Xmprazl06BCLFy+mpqaGxMRE
      vv3tb3PixAk2btzI1772tSnClmAwyPHjx/F4PDz22GN0dnZSV1eHxWJBpVKxY8cOlixZwgMP
      PIDT6WTLli3k5ORckRDp9fX1HDp0iEceeQSDwUBDQwM7d+4kLS0NvV5PMBiMpYjNyMiIRYCe
      RKlU8sADD8SkksFgkIaGhliijLq6OubOnct9991HS0sLW7du5Z577ol5jV6mAeSz4u48FCoF
      AmHE8gqyD2/F7Rumq7UVfziHJQvnkmeTWDn/CE+3NOGuyCYpRRd7Cqi1Dq66Ph1RoUAQJMSi
      Nk53H2HEFwS0SM6DbGu2U1GlZOiI81Kd+VyjVquZNWsWMOEoFg6HcTqdRCKRmEZ2wYIF5Ofn
      Y7fb+d3vfkd/fz/Z2dmxNkZHR3G73VRUVFBSUkJmZiabNm1icHCQiooKHnjgAVQqVSz+fktL
      C36//4qMr6ysjOLi4lieM1EU8fl8Mffn5uZmAoFALEXUB5nMawwTrtEXppD1+/2kpKRQWVmJ
      zWYjNTWVnp4eBgcHz+cUu7xuK1AqJQLeUfqaDrD5xXc467iRJelehgejkOggNUWBIKpITk1m
      zD2CZzx4wR1cODdYiXHvMD0n32XT5vcZNlRTVZyIHPVwZFctuhnFFGenoZluPtAXMDkpIpEI
      g4OD7Nmzh5aWFrKysohGo9hsNsxmM6IoYjQaycvLuyiZXDgcRqFQkJ6eHitntVpjOQF051zV
      I5EITU1NuN3umL/9p41KpYo9rUZHRzl9+jRGoxGDwcDIyAjt7e2kp6fHtAKXIhwO093dTTAY
      JDMzM6YpPnPmTOwmEAgEGBgY+JiSSEDq3cwP/+Z5upV6cubdzj23zMLIyEXlEsyJqIMjeIM+
      hgZDRKMSgi6RVLPISO8ufvvNpziuNpNftZrb1swhWRFhrHk/77lSKZuVR6qx4XK7+LlhbGyM
      d955h9dff52SkhJuvvlmsrOzaW1tnZLwASYmgcfjmVJflmVkWT6fFeWc6OTCO63X62Xfvn10
      d3fz4IMPXlFt8GTYll27dpGWlsaqVauQJInm5mYUCgVlZWU0NFx6HkzKKvv6+iguLkar1ZKT
      k0NFRQUbN27k8ccfJzExEaVSSXp6+seXRCocN/OrDTcSGnVyvOZlXvn1aZZ/9QtoFUA0TCQC
      KGXcLhdhvYlEfwPr/2szx11elIu/zu8fnoMlczV//8frCI72cGTH67zz3HO4b1mN6v2jjEWz
      UIRG6ezoxxcaZaCjl2GLmWSNOO2S5BmNRu666y5uu+02Ojo6OHjwIB6PB5vNRjAYJBwOxya5
      LMsXSSInDWR8fBwgdvebzMfrcrnYtm0bDoeDhx9++Iomy5YkiY6ODrZv387VV19NYWEhsizT
      1dVFc3MzVquV/v5++vr68Hg8OJ1OTCZTTAU3STQajWWZz83NBSZehhcsWMCCBQtiZdatW0da
      WtrHFMT4h+mPaLEatKgTUimYdRWFp56jwyVSnaZD6O6kqyeAwx6is2uQBGsOZscK/vpfziVe
      k2Wi4x5GxtWYTBrU5gxKyso51nOInqY2LAj0tx5gY+sBCI/QOeSj9w9KrPbvsjb70tEmPm9E
      o1E8Hk8sH3B2djY9PT243W5SUlIYGRlhcHAQm82G2+2ms7OTpUuXTmlDrZ7Yfejs7CQzM5Ph
      4WFcLhepqalEIhF2795NWVkZZWVlVzxT/PDwMNu3b+e2226LCXQmn0gtLS28//77wMTyKBKJ
      4Ha7+fKXvzxFzCPLMj6fj/b2dmbMmBET9EzqnyfTKp09e5aRkRFsNtvHNADncTbXB8i2GFCL
      UUZ6TzLADOanp+OQi0ltqaFu11ZCaWMca1ZRenUhFtOFGR4lQoMn2F07SkKKEZ0izFD7GcZk
      K6Xl1SwvWM3Nk0X7d/Cj7xxl/j99hWvTddNSEnngwIFYoutQKERHRweZmZlkZGTQ3t5OXV0d
      AwMDdHd3k5ycjM1mIxKJ0N7ejs1mIyEhAbvdTl1dHePj4wwPDyOKIqmpqQwODtLV1UVCQgI+
      nw+Y2FkpKiqako3x0+LUqVN4vV6amppoampCEAQSEhLIz8/nH//xH2Pl9u/fj9vtprq6GovF
      QltbG0ajMSb/dDqd+Hy+KXGNwuEwra2tuFwuJEmioaGBvLy8KbrqyzOAlEwyg7s4+r4Tf1RE
      b81l3s3XUp2tRi1XsHx5iD01Bzh0XE3m4rVcMzuLBPWFDYgozOmkyKc4dGAQf1hAZ8tj/rXL
      WJD/geBHWjsV1UEydOpp+dVOqVSSmppKbW0tw8PDaDQaZs6cSVVVFSaTiauuuopdu3Zx5MgR
      kpOTueGGG1CpVASDQc6cOcPMmTNJTEykuLg4ti2YlJTE8uXLSUtLi31bOHToUOycOp0Om812
      RQxAo9EQCoWoqakBJt5PsrKysNvtsWTWAMnJyeh0utjTrLm5mfT09JgBRKNRiouLp8g5RVHE
      6/VSV1dHIBBgxowZLF26dMr7TTxJXpxpSzxJXpxpT9wA4kxr4gYQZ1pzyZfgK5kxPE6cPwfx
      uEBxpi3xuEBxpj1xA4gzrYkbQJxpzWU6w8lIUQlJlpHlia93gigiigKCLE18mbsgn5cgKlCI
      wgXurBP1ZFlCkmRkQECI+WyAjCxNtD9RX0QUBBCEaecKMengdmF8pkkX6cnkEpIkxbwbL/T4
      vLANYEq5C9uQJOmi3xQKxRVJlvFh4/vguS/8/fwc+Xhjm+QyDWCQvb/5F57Y3oAzIGO0z+S6
      ex/lwWsL0fUf4dkn/pOndnWiVU2cKH31N/nRg9eQaz3vDxQZ7+f99f/OM2/W0xGIYsyo4Po7
      H+Lua4rQek6zaf2zbNx5HFfUxuwvPMJjty8g3ahiurmCRiIR6urqePLJJ+ns7ESr1bJ8+XLu
      uusu7HY7nZ2dPP300xw+fJjk5GS++c1vUlZWdtEkaW9v5+WXX2bfvn0IgsDKlSu54447SE1N
      5fXXX+cPf/gDfr8fURTJz8/nZz/72RVxhQiFQrzzzju88MILeL1eioqKePjhh2MZcGRZ5syZ
      M/z2t78lPz+f++677yJv15GREdatW8eOHTsQRZGlS5dyzz33YLfbqa2t5cknn6SjoyMmnvnp
      T38ay4J5mbtAzdS84qFgdQUZ6jGa9zzH7zb0cPX3f8Gy4Hae2lxH0rwv8sDizI+oLxMM9HB0
      XxfpVXNIN4xxctvzbHjXw8L778aw94/sHSvi1i/dSLHyJE//8PeM3Px9/vrqHHTK6WUAoVCI
      xsZGlEolBQUFjIyMsGnTJhITE1m2bBmvvvoqFouFFStWUFdXR01NDd/97nenpBIdGRlh376J
      IPTLli0jEAjw2muvUVpayoIFC1i/fj1lZWVUVlZe8SwxdXV17N+/n7vuuguTycTBgwc5evQo
      Dz30EEajEa/Xy7Zt22hoaKC4uJiVK1dOMYBoNMq2bdtoaWnhwQcfJBgMsnXrVmRZ5rbbbmP/
      /v1EIhGqq6sxmUxTzi0IgnCZoy1kxR3nsnOEBBQJqWRY+1HKMmM+L6FxP1q1+hL1BTQ6Bwuv
      cyDLEtGQEq0xGVuyH9HvxjWswZKXgS1Jg0o1m9VXJ/KtQ6fwL3GgVaqm1TJIrVZTXl4eWwZM
      yha1Wi1OpxO1Wk1FRUUsTWhdXR1Op5OCgoJYG2azmeuvv/5cXjYBlUqFw+GIxdwPBoMkJib+
      Wb75VFZWUllZiSiKRKNR0tPT6enpAc6nhhIEgZkzZ8Yc4S5k0nV6xowZaLVaNBoNRUVFOJ1O
      wuEwwWAQk8n0oXXhYwhi5EAfJxs6cLlaqa89QajidhbmhPH0+Ql7Rug/e5pDih60phQcjlTM
      OhXilJkrEQoMcvZ4Kz0DbdQfbUNRdB1zZ+XT036Q5qY63tstk52oIjymwtfey0BUwnK5Hf5f
      TCQSwel00t7eTnd3N+FwmMWLFxMIBEhKSsJgMCAIAhqNhoyMDNxu95T6kxN/UjXV3NxMKBTC
      ZrMhSRKBQICWlhbcbjc6nY6srKwpkRc+TURRRJZlwuEwnZ2dNDY2kp6ejl6vjwlhcnNz8Xq9
      F0k9J+tXVlaybds2tFotkiTR399PXl4eSqWSQCDA8PBwTHqZnp6O1Wr9uFEhQBptZOuGt+lD
      ICG9nKo8I5GQhCbBTrpRzenDb7PhcISglEzV2tu5aY6JrtNnGQqEEOzlLCtJJOBpYe/Lr3FG
      UGG2FzE3z4IYSaL82jX42Mq7e97iMAnYot0EoznT6s5/IaFQiJMnT7Jz507sdjtz587FaDTi
      8/kQRXHKnVuSpJjy60IkSWJwcJCGhga8Xi+zZ88mMzOTQCCA0WikpqYGSZLQarVUVlayZs2a
      K5YpJhwOc/z48ZjWecGCBQSDQVpbW9Hr9cyYMYO6uroPrTu5rk9LS2PLli0IgsCMGTOw2WzA
      hGt3XV0dx44dQ6lUkp+fz03/r70zDY7jPs/8by7MhQEGM7gG90niIA4CBAmCAGlKpEWdtmzr
      WCv20uvEspVKpVJOvJVktyq7takt2+WNdytrZx1HWluHaZGxHZMiLZ4iQYIQCQIEQIC4COLG
      DDAn5j56ej9Q0wJEWk5gC8kK8/tCYgbT3X9Mv/+r3+d9nnpKEtT8Vk+CRVEk6rcz2vVL/vH0
      JA1f+Uue3pL4o8WJBRa58qPv8opjB//xc0UMvH2ZMXcAReNz/MWn3hMuiAIR3zJDl37J8V4P
      2z71+3ymfvXiK8zwj/6Uv5zYz/f+/ElydZtrCrSaWCzG4uIi3d3d0pc+OjrKrl27KCgoIB6P
      88orr7B7925qa2ulzyXc1Ht7e0lJSWH79u0PXOAmDPleffVVnnnmmQ0xzY7FYty4cYPJyUn2
      7NlDUVER8XiciYkJjh8/jlarpaCggLGxMfx+P62trbS3t0sVImKxGCdPnkQQBA4dOkQsFuPK
      lSusrKzw6KOPSvN+URSx2+28+uqrkkxSpVKtcw3gmGYolEZFdjopOiM5RSWYVddYXvLgTHOw
      EjeQm5NGilKLwaBF6ZFBej3P/fHue58X40Q9s0x7UsmzpKHVm8jLz0PXb8XlCRDyKYnJFGi0
      aiKLvZy77qV6/1bSN6FJXqLSgclkwmAwkJmZiV6vx+VyUVJSgtfrZXZ2lqysLGZnZ1lYWJB6
      vwShUIiJiQlkMhmtra1rena73c7S0hJFRUWS7FKtVm9YWfzFxUVu3rzJs88+uyYolUolRqMR
      t9vN+Pg4CwsLhEIhFhcXiUQiUgCIosj8/DxbtmyRcte0Wi2Li4vY7XasVivp6emYzWZSUlIk
      00DpPOu6at8Unb8a4woCIBLyuwnm7KWtWMXKwi26eqfwiSLxqA/rvIym1i1kpa2WRIrEvNNc
      OznMikxEJhMIeDyIGdU0lGbgWxzg3Z5+5r0Qcc4xl7ufp1tLUCs333O7xPQg4f6eUD81NjaS
      n59PeXk5PT093Lx5E5/PR21tLSaTiXA4THd3NxUVFSiVSgYHB1lYWGB6ehq4t9fe3NyM0Whk
      YGCAy5cvI4oikUiErKwsCgt/3Q7e75bh4WFu377N0aNHgXtTGovFQnt7O1/+8pel31vtEpmR
      kUFXVxdZWVmUlZWxfft2urq6GB8fB+6NConKEP39/czMzEjrDOB3UBkuewu7tgSYXHISFhSY
      86uoqGuipkBPRFtJjTfKHauHkGimsH4rTXUVmHSrTyVHlVFBfY2XUaubkCAjM7+GytoGqvJ1
      xJbNZGZl4yOELHsvuxubqcvVodhs3T/3doFqamokeV9KSgrFxcVUV1ej0+lobm5GoVAwNzdH
      WVkZra2tKJVKotEoarUahUKBTqejtrZ2zdaoQqFApVKRk5NDc3Mzw8PD+P1+0tPTaWlpuW/L
      8KOipKSEXbt2SSPOagvY1ZSVlWGxWKTRKyUlRerxE88MpqamkMlkFBQUUFtbi8FgoK6uDoVC
      gd1uR6PRUF9fT05OjvScJJkNmmTTkswGTbLpSQZAkk1NMgCSbGo+dBEcjUaTZVGSfKz50ABI
      pKomSfJxJTkFSrKpSQZAkk1NMgCSbGp+K/WDGBfwL91l2gOp5jyKM3UgCoS8TpaWHPijcnSm
      HHLMBtRK+QPzeEQhjNexyLxTwJCZQ25m6vsXFV1hYc6GJ6AmtzIPY4pyTCXK2gAAGs9JREFU
      0+UCiaKI3+9naWmJUCiEXC7HaDRiNptRqVREIhGWlpakp8T5+fmS3VCCeDyO1+tleXmZSCSC
      QqHAbDZjNBpRKBQEg0FsNhvBYBCFQkFOTg7p6ekbJon0eDzYbDYEQUCn05GTk4NWq5XcXBJV
      qxMuNwaDQbo2URQJhUJYrVaCwSByuRyDwUBWVhYpKSkIgsDKygoej4f09HTJTSfB+gNAFIn5
      57n499/kHyYFSg9+ne98voaId57e829xtmuclZgcbeEOnvjUI2wvySDlvvEmTtg5xdU3/pYf
      9sipf/T3+KMXWjC+9573zjne+Ie3uNSby1de/TqP5GWguu9CPt7EYjFGRkY4efIkXq8XmUxG
      aWkpBw8epKSkhPHxcd5++20WFxdRKpU89thjtLW1rdG9hkIh+vr6eOedd/D5fCgUCqqrq/nk
      Jz9Jeno6PT09XLlyRSqb3tTUxJNPPrkh6dBut5vTp0/T399POByWKle3trZy9+5djh07ht1u
      R6VSodPpeOaZZ6ipqZGUa6IocufOHX7xi1/g8XiQyWTk5+dz8OBBKisrmZ2dZWBggJs3b9LW
      1kZHR8eaqtPrF8QQxzH2Nt3L23l01zQjAISxDl/n+rCPbc/9GYfKvZz+4WtcvFFCYXYLealr
      zRfEWIDFu4OM283sbjHiX/1e0Er3lXFMDbWUTEXYWNuGf1uYzWYOHz5MXl4eXq+Xc+fOMTY2
      htFopLe3l8bGRr7yla8wNjbG22+/zbZt29ZkViZKjr/44otkZWXhcDg4ceIEMzMzFBcX4/V6
      ef755ykqKsJut/P666+ztLRESUnJR942u92OWq3mG9/4BjqdjoGBAfr6+mhoaCAcDtPY2Cgl
      wP06UlNTeeGFFyR9w6VLlxgaGiI/Px+r1Up2djatra2kpaXd99l1rwHEwDSdb01S8LmHqUio
      zaJurHN2RE0FNVst6IwVtDSasM3P4vYG19qcinFC7jlGeqZQtz5ElXH1m1Hst7u4Hamkfmsx
      Ru3mXaqoVCpKS0spLCyUnFASqcIJBVdFRQV6vZ66ujrMZjPLy8trjqHVaikrKyM3N5d4PI7P
      50Ov10sGE4899hilpaUolUpUKhWZmZm/VkL4uyYhUElIMrVaLSbTPd1fJBIhJSVlTY/9QeRy
      OSUlJVKwJqZLJpMJrVZLW1sbbW1taxIBV7POESDKfPcxelUHeKkhnYmJ916OhAn4RNClc+98
      cjLMmQheH55whDhIPXk8FmTh9mUGAhU822Rh/Mz7Rxc8d7naZyVr6ycozbFu6t4f7t0IIyMj
      9Pf3E41GycnJoby8HKfTicFgQKvVSlpfk8n0QOmg3+/n1q1bjI6OEovFKCoqoqCgYM1UYnJy
      ktu3b1NUVLTGguijJCGJDIVCDA0NYbPZ2LJlCyqVCq/XS39/Pw6HA51OR2VlJRUVFfcZ+MVi
      MSYmJujp6SESiWAymWhoaPhnBfG6AiDu6OcXJxw0vLSbXNkKEx/yuzJkIILoG+fMkTHmvSHk
      Ww7wfI2H7nMzZD35NMUaJ+OJD4h+ZvuuMRWz0FpejFG9eT2CEyQE8fF4HK1Wi0qlIhQKPfAh
      5Yc9uEzYoiY0xOFw+F5hA0Hg5s2b2Gw2MjIy2Llz54ZWhwiFQnR2diIIAmVlZZJRXkFBAXa7
      nUgkgtPp5PLly8jlckn88sG2CYKAWq1Go9EQCoWIx+O/Uei/rlbOdR3j/Ngy2078gIVogIWJ
      u0zr3uYXll2k62Xg8uDzA/o4Tscy8rQ80rUGMGYQVIWRaeUs9Z3gZM9d8rWv8r9ENzNTU9hk
      US5kLOIc7qN/QsTlnqFLmGPUsYz7lWOkffmLtOWoN1tpINRqNY2NjdTV1eF2u7l27Rqjo6NY
      LBa8Xi/BYBBRFInFYrjdbslYezV6vZ62tjZ27tyJw+Ggs7OTyclJ0tPTGRoaYmlpiaqqKkpL
      Sze0OkQ0GqWzsxOFQkFTU9MaNVtVVRVVVVWIokggEODUqVPMzc1RXFy8JgCUSiW1tbVUV1ez
      srJCX18fw8PDZGdnP3Dev5p1BYB+y2O89MdB4iIIQQ9yzwTL2jwK8wtJ0ywyMHGH22NWikq9
      3OhfIjOvBWPWFmrLa4B726eeyYf44h+13Dug34bgXyEozyE3v5TSPDOFdb57a4YVkdGeGHnl
      xWRqNt9kKBwOMzY2hsViISMjA7VaTTQaxe/3U11dTTAY5M6dO5jNZsbHx7Hb7fdNXzweD/Pz
      81gsFtLS0tBoNAQCAXw+H06nk/HxcVpbWykqKtrw0ijT09PYbDY++9nPrtl18nq9TE5OotPp
      KCkpIRKJ4PP5MJlMa65REAQGBwelag8JOafb7f5n5bGtKwDMW/dycOu9/0dXrGidN5jV1NG8
      pZCIJ07z4hIXfvo/eFeUk5JTxyM7qsjUv38qmVyBsaKNRxKla5zjyLxOAspqqhvqWLMetino
      Pi6wbW8LZcbN9xwg4aP7T//0T/j9fhQKBRaLhb1795KTk0NjYyNnz57l9OnTpKSkcODAAQwG
      A8FgkJMnT9LQ0EBGRgbDw8McPXqUUCiEUqmkqKiI8vJyXC4X7777Lj09PSiVSmQyGTqdjuee
      e06qnvZRMjY2xoULFxgeHgaQtnkfffRRIpEI58+fx263I5fLKS0tpaKiArVazfHjxykoKKCu
      rg6bzcZbb70lVcnIzs5mz549xONxjh49ys2bN7Hb7ZIDZUdHB4cOHbp3vt/WJC8ei7Bin8Mh
      z6E8Ww9ijKDHzuLiMr6oAn2mhbysdDSqBz8IAyAaxOV0sEI6+TmGtVEZcTE96cNQaiFDvTkD
      wOl0Sg+x5HI5GRkZZGVlSQ6LCRNpjUZDYWGhVB9nfn6ejIwMNBoNTqcTh8NBNBqVimuZzWbC
      4TCzs7OEw2HpnIkA+U3Th98Fy8vLLCwsrKndqdfrKSgoQBAEbDabdGNnZWVhNptRKpXMz8+j
      1WrJyMjA7XZjs9kIh8PI5XLS0tLIyclBLpdjtVpxuVxr1kZZWVlYLBYMBoMs6RKZZNOSdIlM
      sulJBkCSTc2HBsBGJEMlSfKvSbIsSpJNS7IsSpJNTzIAkmxqkgGQZFPz2ynChCiO8W6uz4tk
      ltbTUmaEoIPJ8RFG51ek39MVbKOpMg/DA1IZxIifpekh+qej5JRtpbosE1XUy8LkGHdm7QRF
      LdkVtdQUZpDya1RlH2cSD8LGxsbwer0oFAry8/MpLS1Fo9EQDAYZGxvDZrOh0+mor69fo5gC
      1hhjOJ1O0tPTqaiouC+twGazMTg4SH19PdnZ2RvSvkR157GxMaLRKEajka1bt2I0GvF4PIyO
      juJwOIB7qeHbtm0jOztbuu5EQd/R0VGsVitqtZrS0lLy8/NRKBREIhFsNhsLCwvk5+eTm5u7
      No/ot7hyIt47nPn7l/lHt0DOvj+jpcxIZGmUs2+9SZfVQJXlXg62UcyjpsSCQfPBgwj4HRNc
      PfIDXhvVUXXgBf60TId/oJNfvXMTa0iGggih3rsEn/8MOwtTUco3VwjEYjEmJyclr6t4PE5a
      Whp79+6lqqqKgYEBrly5QigUIhwO43K5OHToECrV+9o5v99Pb28vvb29xGIxlEoldrudPXv2
      SEKTcDjMmTNnOHXqFF/96lc3LACsViunT59meXlZyt50uVw8/PDDzMzMcObMGaLRKBqNRnrS
      vTrXSRRFhoeHuXDhgvSkfG5ujr1795Kbm8vIyAgjIyOMjo6yc+dO6UlygvUrwsQY1r5f0ks7
      j20f5MZ7r/u8HlZUWTz87Jf4wp78Dz1GPOJjYewmY6ES2pvV2AFCVvouDuA0NPHcHzxMiXye
      U3/zTX52tZEGSx3KlM0VAHK5nLy8PF544QWys7Px+XycOXOGmZkZsrKyGB4eprm5mZaWFklC
      2NrauuYmcblcLCws8Mgjj1BVVcXc3BxXrlxhYWFB0v4ODw+zsrJCU1PThrYvHA5TXFzMM888
      g0aj4datW1y7do1AIEA4HKampob9+/djNBof+HlBELhx4wY7d+5k165deDweurq6GBkZwWw2
      E4/HqaysxGAwPLDi9foVYd5hTp9wse25vRRJnU2cYMBHPCqg1d7X3X/gAAIB510Grs6TvW8/
      5Ym0k/d8hu95BIsotHlsb8hkon8MV0xgs+3ZKpVKCgoKyM3NRRAErFYrkUgEs9mMx+NBr9dT
      WlqKVqtl69at5Obm3qcIEwRBEsMnRO9qtRq32000GsXtdtPT00NHR8eGeYMlKC4u5qGHHpJu
      zng8LqnDIpGIlN//YSSKBSTygDIzM3G73cTjcRobG9m+fbtkqPFB1jkCRJg4+xNG8p7iz7ak
      cqsv8XqUcCiAZ2KQM46/ZeJcGhlFTTy0fwelWXpWO5zGowFm+s4xkLKdF+uyGJh97w2Nhfrd
      W5g+f5VX/+YGWm0qxtAyHquTlXicDx9TPp4Eg0GuX79OZ2enVOt/y5YtLC4ukpqaikajQSaT
      oVQqMRgM95nkZWRkkJmZyc9//nPkcjkajYbl5WU0Gg3hcJhr165RUFBAZWUl165d29C2Jcz7
      AoEAV69exev10tTUhEqlwuVyce7cOfr6+khNTaW5ufm+m1kul9PQ0MC5c+e4ePEiSqVS6iAS
      /mcfxroCQFi8zOsnYe9fNWGWr5bfKcja2s5nv5jLciiOEF7mVtdxXg/J+INPqLnw5llGXH4U
      zZ/nG21u3jntZMvv7yEvxcqA9BfRU9i0nyfTC5myeoigJj46gXJRxSab/UgolUosFgtNTU2E
      w2F8Ph9LS0vA/eUr5XL5mvk/gMFgoK2tjaysLGkhPTg4iEajYWZmBqfTyf79+1Gr1fxr4Pf7
      OXHiBJmZmTQ1NVFQUIAoitTV1aHVaolEIgQCAXp6etBqtdTX10ttlMvlNDc3o9VqcTqdyOVy
      FhcXEQThvr/Dg1hXANw5f4Qr44vMfOsbnBXCOBcnsele5e+MX+DzT9XRlFMO3LNIKovN8q2R
      edzCLpofOkhZKIosM5OFrpf55Y0RMkP/iWv4WbYt4ZItcTRLzdOPN1KyzUzJNgAvXbf+L+bi
      AkzyzSeIgXu7H5WVlZSXl+Pz+eju7ubOnTsUFBTgdrsJBAKSBZDVar1vHi+Xy8nMzJTUVi6X
      i9nZWbRaLV1dXXR2dtLZ2YlSqZTWBw6Hg09/+tMfedsSTvHFxcXU1tauScEuKiqiqKgIURQJ
      h8OcPHkSm81GKBSSbu6EfmHHjh0ABAIBLl++jMfj+VAxfYJ1BUDe/j/hb+oi9xRhfgd9Z1/j
      knYfn6xPZWn4BreFHKq3WtBHHUxNWZHLqlHpLWwpKwNAFOME0r/KNyuC9w64Mkv3pU4G5bvY
      3VwCdhtLMhXpRgOBW6f4+XUVu75ahS5l85nkBYNB+vr6KC0tJSsrC1EUcblcCIJAdnY2vb29
      DA8PYzabGRwcxOVykZOTs+YY0WgUr9eLUqlEoVBw6dIlwuEwBQUFlJSUsHv3bsmi6MSJExQX
      F7Nz584Nad/Y2BiRSISmpqY1I5Db7ebWrVukpqZSU1OD1+tlYWGBqqqqNbs4oihK832DwcDQ
      0BC3bt1i3759H90IkJpXTV3evf9HVxZxDqaRqi2irDCbhaExzv3sVf5uwoYvpsRYupPPPb+L
      AtP7jZPJ5Ohzt9CQ+94LDi0LY7eZVeRTkGskOniSoz/9R66O+4lrMtn2xGGebbSg3mRboAls
      NhuvvfYaDocDtVpNfX09Tz31FNnZ2XR0dHDkyBFef/11TCYTX/rSl0hNTcXv9/PjH/+Y9vZ2
      Kioq6Onp4ejRo/j9fioqKnj66afJz8+XXOMT9PT0UFxcTF5e3oa0bXR0lCNHjnD8+HHg3mhV
      XV3N4cOH0Wg0/OxnP+Nb3/oWKSkptLe3s23bNtRqNa+88grl5eXs2bOHhYUFvve97+FwOMjJ
      yeHxxx+ntrYWl8vFT3/6Uzo7O1lZWZH8x5544gk+//nPA7+DZDgxLhAOegmhx6hTIsTCBP0B
      gtEYoihDodZh0GtRKeS/XswejxIKhgijxqBPQYwE8fv9hKNxkKvQpKaiVyuRb8Ls1ETJkEAg
      gCAI0peo0+lQKBQIgoDP55N2edLS0lAoFFINIY1GI1WR8Pv9xONx1Go1Op1OkkCuxu/3o1Qq
      N2w9kNAmr0alUmEwGKSykIn9fa1Wi1arlQwDVSoVarWaWCzGysoKgiCgVCrR6/WkpKQQj8fx
      +/33GYdrtVpSU1ORy+UfrghLkuTjTDIbNMmmJxkASTY1SYukJJuapElekk1NcgqUZFOTDIAk
      m5pkACTZ1CQDIMmmZt2CGGfvMX5y1Sb9rMssZMf+p6jLCrE8Oci1q/3M+lXk1bXS1liOWfeB
      up6xMM7bZ/nJpSnpJU3uFnbubqcu770kJt8kF351hTFbBu2/9zBV6dpNZ5YhCAILCwtcvXoV
      h8OBSqWiqqqKxsZG9Ho9DoeD69evMzMzg1wuZ8eOHdTX16/xCFvN4uIi165dIzc3l/r6emQy
      mVROPBQKYTAY2LdvH8XFxRvSPlEUGRkZobu7m1AoRG5uLm1tbeTk5CAIAjMzM1y/fh2Hw4HF
      YpGyWleb5CV0EoODg6jVatra2tBoNMzPz9Pd3Y3VutZjYt++fVRXVwO/xQgwffVNrtrTKC4u
      pri4mEJLDoYUEe/8MJ0X3mHUqyY7PcLI+be5PLSA7wObSfFoiJmBd7g8r3j/GLmZGNSJS4ox
      d+MMN27f5OKJXqb9IeLrvdj/jxEEgaWlJeLxOPn5+aSnpzMyMsLQ0BBOp5N3330Xp9NJbm4u
      aWlpnD9/XkqV/iChUIjbt29z9epVpqampJLjdrsdk8lEUVERCoWCU6dO4fF4NqR9k5OTdHZ2
      kpaWhsViwe12SxLPRGZqKBQiPz9fKp++emteFEVmZma4cOECPp+P6elpIpEIABqNhtzcXOn+
      ysvLY2ZmZk1qxDpHADfzs14K9hziiSdW16JfYbR3iNllA9uffZr2/BA9R77P20NjNFbkYsh4
      37JGEGLY7A5y6/4DTzxRfd8Z4q4RLvYLlDVsxTbs3nRZoAkUCgVlZWVUVFRIZc8vXryI2+2W
      3B5TU1MxmUxEo1GOHDmC0+nEYrGsOU6izLrL5aK8vFwSlaSmprJ7924MBgMpKSk4nU5efvll
      vF7vhqjD0tPT6ejooLS0FJVKxcTEBNeuXcPn8zE5OYlcLufgwYNkZmYSi8VQKBRr8pdkMhlG
      o5GWlhaUSiX9/f3Se2azmT179kg/3717l3A4vMYEZJ0B4MKxLGLK+IBOM7SCfdGPaCimuDAV
      VYqe8jIzrneX8PhDxDNS3htyROLxEL6VIBkV9+s0Icjku114TJU0l0cYUG1Mb/RvEYVCQUZG
      hpQTPzY2ht1up66uDoPBIN2kMpkMh8NBMBh8oL/XysoKU1NTZGZmkpqaiiAIAJLYPPE7V65c
      wWQyfagr4+8Ss9mM2WyWLJucTqd0faFQiOLiYrKyspDL5Q+c1slkMkwmEyaTiYWFhV97nmg0
      Sn9/P8XFxWuqZqwzAFZw2QWufP8PefE1JWl5Nex59DMcqhGIRgGlmnv+ZDJM5iwU/hXc0Shx
      3p9zxeMrOOeWuH7rP/PiCR1pebV0fPJJDrQUorL2c/GOjPyWCgpNdzZt75/A7/dz9uxZTp06
      RVFREQcOHGDr1q3SDRGPx+nr66O/v5/9+/dLLosJYrEYMzMzhMNhduzYwcDAAMFgUHp/bm6O
      H/zgB9hsNtrb23nsscc2xCMY3pdEer1ezpw5g1KppKOjA0EQcLlcdHd3c+zYMSKRCNu3b+fx
      xx+Xav//S1hcXCQUClFSUrJGJ7DOANjKF//3y3wmLiLGPEz1nOL4Gy+j/PfP8UEFpt/nJaZS
      onN18d3/+Rb9y16U+/6Ef/hyHc/8l1d4JALxqIuxd89w4fibKHSfIW+0h4CujMrSAnTxO+u7
      xI8RWq2WT3ziE9TV1WG1Wrlz5w5KpZKGhgbi8Tjnz58nFApx4MABLBbLfT2lw+FgenqaioqK
      B/bs2dnZfO1rX8Pv9zM+Ps6pU6d4/vnnNywIVlZWeOONN2hubpamdEtLS6SkpLBjxw5qa2sR
      BIHLly9z8+ZNOjo6fqPWdzWrbZSMRuOaKdQ6A0CDqaAQEyKiWEC6QmB26u+Z98VpMcnhtg2H
      EwpMcZwOOxpjJemWDl78q3aicRGZOhW5IgVjbhHG946REfdw1/ku1qEbLN7u48TVt3j75/8H
      hRjB741y9cUpXN/5Nv+uUrfpTPLkcjnp6emkpaVRVFQEwMLCAqWlpQwMDKBSqWhpaZG+3NVf
      cDQaZXx8nNdee02yWIpEIoiiyMDAAIcPHyY3NxeLxYIoilgsFo4dO8bo6Cjbt2//yNsWCoV4
      8803OXjwIMXFxVLvrNPpJM+vkpISZDIZfr+fkZERQqHQvygAlpaW8Pl81NbW3ldhYn0BMPor
      XpnK55HWCkwKL3O3L9I7ZWLvp4ooSi9COdxNT+8I+VVOzlxeJm/XIxiN6Ri0730xokBgqpNT
      gzpa9laTrVhh4nYfU7NRdnU8xBOf+xRfjL+30l86z1//+U1a/tuXOVj4mzWeHzf8fj9dXV2U
      l5eTm5uLz+fj7t27qFQq3G43DoeDbdu2odfrpbwthUKBXC5HEAQUCoXkDpng0qVLBAIB9uzZ
      w/z8PNPT01RWVqLX65mfn2diYoLW1tYNad/Q0BBpaWmSEXgkEkEmk6HVatHr9QwNDZGdnU1m
      Zia3b9/GbDaj1WqJxWLIZDLkcjnxeBxBEIhGo9K/0WgUpVIpFc7Ky8t74NpofQGQX0vRO9/n
      L340ijsow1jUwhN/8Ic8sVWLMt7OY14Pb7z6X/maQ0fN41/gS3uryNKu7rblKDMLyFh8hb9+
      6b9jDcjJKN3JU89/gUN1JpSrp3dqHWnpBnTqFBRy2aZbDyRUX9/+9rexWq3odDo6Ojr49Kc/
      LVVK+NGPfrTmM1//+tdpbm7m5ZdfZu/evfeZRifE4glj7WPHjvHd736XQCBAdnY2hw8fprKy
      ckPat7i4yJtvvskbb7wB3BvtampqeOmll6ivr8fj8fCd73wHp9NJe3s7+/fvR6fT8cMf/pCK
      igo6Ojo4e/Ys3//+96Vjvv766zQ1NXH48GH0ej0rKyvU1tai0+nuU8AlPcKSbFqSHmFJNj3/
      D2m5vZFGh0SXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Time distribution (Gender)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Time distribution (age)' width='192'>
      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
      yKUSCMb68P8BBMylUaP7ZKwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Times by year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weather analysis' width='192'>
      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
      /wdxH7cVc3ckagAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Weather summary' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z3ib15Xv+0MHCAJgr2CnWET1QvUuy7ZkSZbkGpfYie0kTplkkszcmfuc
      c3PO85y5986c5xzPnPEkGZ+xIzuuslUsWVShKkWJpNh7p9gJkgDRO/DeDzQRy3ZCO0NKviP8
      vpEA3r2w8a6997vXf68lEgRBIEyYexTx3TYgTJi7SdgBwtzThB0gzD1N2AHC3NOEHSDMPU3Y
      AcLc04QdIMw9jeRXv/rVr+62EfNOYJI3//6/004yi9Jjv9ZHfS4rHx/+H7x/7CwXy8ppHhdY
      WZCBWCz6s82x9tfy6zfeJhhXQFqs6mt91nGrkld+e5iST85wrbIKV1Q+uYnqP8uOwHgtv/pv
      76DLLyRZ+/XssE90crS0gUUFWfSUvcd7DW5W5ydTffEjJiSpqHAjkysQi75ePznHu/ndv77K
      REQhOUlqvm4vX33v73nj2BVu1rajSc8lQav8k9e4J2YAV281fcEo2pqacH/Nz8pUWg688Dc8
      uCiTFbuf4sePbUUq+fNvfoCuhkbkShn1tZ1f+7PqzDX81V+/wAJlAo//5G94YEnCn2lFgI5r
      F5AnqqhvGfran5ZLFLS2NOPCx3BXFz2Do/ix0lHXhVgqpb6+Frcv8LWvO9LdTEClobm8Fk/w
      a38ck9XBg8/8hBcf1HPi/SvYZ3m/9Os38f8zBB+NN5tZ+sAepkqO0TYRwHbxf+MqfIhdmRP8
      0+EhHtqm4+iJywgSEcGYlfzkpQeJ+BOXvFVdwpHztXh8AmsPvsS2RQlIvrJBfloHx1hWvIWS
      C/X4hQKO/fMbFDz+Q1QtH1EjXcJibxNHyruRBQXStxzk6W1Ff+L7eagtOUppUz8BWRJPPv84
      mdGzj+ZB9xTXmiU8+uwKPjjSxOSWVD78zZvs/873mSp/k9akh0jqPcnl1kkknkkWPv5f2b9Y
      E/q8TKMj3++gy2JgmEVsUNoZmRzAQB5JUQHKWxtZsnozX29uCtDV00P26gepPfMxFscaLr/z
      OprdPyJz8jLnhyPZlmDirTMNSMQitIXb+OGh9V9yHRFShRJJ0MN49Yf89zIL+ngde/buJ0Un
      u+2d/+FngKDHwc1OC1qZCI3WQWPbELkLUulo66K7/Bq6VcX01Fwmf/eL/PKpbTi9AWbThlTV
      1LH18Zf5q5/cT/XRC9h9X90ewdlDb18AmVSOZOQWnU4tOdkaWlp7qO+aID9e4HTFOM/+/P/g
      0PY8/Fbvn76grZ9jJ8uweANM9jTRNeH4SnY4jCP0+r3IgjKUplZuTSpIi4SO/m6qWv2sTLNS
      2STi2Z//nF2L4/F9bjQXySJZlCfQeK0Djz6HZWlOaqpvIc7OQEsQt9tF8GuKbAT3EO1tdhQS
      MSqnmXYjFC5JobG2nbbOPtKSoim52MbDP/w5zz1aTMDo/MI1vOZh3v3X/8H/+qCBTQ+tQ+11
      YxNiePTRh79w88M94ABO2yATFjcD9TVMiSLpra8nPn8xiq4qfl8nYdfKBKRiCW6PF7fbTTA4
      +7wrF4HF6cYzZcKrUiP5yr0oMFFXzoRGR2drG7E6I1drxskoWMxQ+0UmHRoyEnXI/F7c/gBu
      p5NZFxEyObFxmTz6wk/5u//n/2S1XveVLJm41UwgKOPGjXZEyiDNnYOsXpbGldIybMnZZEXK
      wO/G7wvgdrm/ZFCQkrekgOsXaklKiSYpO4VrZ6vJzkz+M28qgamOegblEQy11CCL8FBVP0h8
      fjHegXN09gXJy05CFvTj8gXwOl182bgjj0rlyZf+kr/565+yqSARkVhGanYOGsWXL3b+wz8E
      uyYGIXMzB3ZvYUlRAVbLOHmFK9AKAxh1C9lapCc6Wkvd+RPcbOrEpMxiY7aH42fbyMnNRPbp
      2sbjsKGISyUlWk1aWhI1545xsS3AMy8cQhgo52y9lST6Kbk5SnZOypevLQU/A10jrNjzODvX
      LWPVogz6B90sXpKN81Y7upUPUpSVRIrGwbEPjtPaZyAqsxDlcAXNjngyE2YWZgHsZg/J+blo
      lDr0CX7OHTtGZds46TlJNJ4/gTt+CZ2X3sWk0pOk+/ySSGBseICF2x9h18ZVFGTHYjYLLF29
      EENjDwUbt5CWkIJGNMipk6V0dI+gX3MfQkcJzVYtGQkaRIAsKpKBpiFWbV5NfIKOweZxirev
      JkYhxeZwkKVPoOyTEwQSF9N8/m0cmgwSNMov/6EEgbGBIXLW7uGBLcWsWJTN+IiD3KJcROPd
      BBdso7ggmfQECaeOfER91xDS6AUkB9q40S9mgT4aAIdtihh9ATER079AwOPAo0ggN0WHdbCa
      j68NkaI08cm1TrLzMhCF1aBgaL3E709W4hNHsOnhJ1i/IOFr7z7MHW4azn1MSXU3ipgs9h7c
      R27Cn7fL8+/Dw9Ujh7nebUQRm8/TT+8jPuJuPzL66L5xlmOXGxGpE9l14BGWpH21Ge+PEXaA
      MPc0X3Bpr9eL2Wy+G7aECXPH+cIMEAgE8Hg8d8ueMGHuKOElUJh7mv/w26BhwvwpZn2s97nG
      OfPeEVpGzaiTF/PUU3sZvv4BZ653I4rJ54XvPoKnr4L3jpfikiaw78lHEFrP83FVLz6nmUlv
      Bv/5/32ZOMA9NcCxDz6k3+RGo1/CY4ceID5Cim2kjdf+5Z+J3vXXPL85/Q587dkJBAJUVVXR
      0NDAo48+SnR0NBUVFVy7dg21Ws3+/fvR6/UA9Pb2cvLkSZxOJ8XFxWzduhWJ5KvHhv8cvF4v
      V69epbq6mgULFrB//36kUimCINDU1MTp06dJSEjg4MGDREVFzWnbvb29nD17FrPZzNatW8nM
      zOTkyZNYrVa2bt3KihUrEIvFCIJAX18fH3/8MVKplEOHDpGcnDyntnweQRDo6enh6NGjaLVa
      Dh48SELCtFzEbrdz/fp1DAYDjzzyCCqVavY4QMDnQKzNY8+etfRd/AhPeh43jpWz7+Ufkjh4
      hopgNhNlx0jd9TI7E0b4qMHLQ/seZMumTaTIpzCpMtmyOBMRAo3n36RNuZGfPr8Xb8clqozR
      LMuKov7qaZw+AZN2IetyY+a1g74qwWAQn8+HVColLi4OsVhMZWUl3/72t1Gr1UxMTJCePu2s
      MpmMFStWsHbtWqqrq8nNzUUul8+rfcPDw7S3t/Piiy+yYMECZDIZIpEIp9NJWVkZzzzzDD6f
      D4vFQmpq6py27XQ6Wbp0KZs3b6a6uhqn00leXh4PPPAAtbW1pKamolQq8Xq9nDt3jn379rFp
      0ybUajVi8fwuOnw+HxcvXuSRRx5BrVYzMjJCZmYmMD1oKJVKnE4n6enpyOXy2ZdA8ogECgqS
      6Sw/y6AkjzzFGA75AhLiNCxanE1HWx1jBg2Z6TGk5ObiuzWIFUCwca2shZVrln/aiIPBvglW
      rFqOVBZB7pIsRlq6sQ3cpMGYxvqlifPYLV8fqVR6242sUqlITU3l7bffpqamJnTzAygUCioq
      KnjzzTfJz88nIuJPKYnmhsnJSWw2G2+99RYNDQ3MPMq53W7i4+OJjIwkPT0dh+OrSSO+Dqmp
      qURERHDjxg3y8/OJi4vjypUrvPfee/T394d2Ee12O06nkwsXLnD69Ol5seXzeDweIiMjiY2N
      JT09HZfLFXotMjKSrKys25xwVgcI+BxceudfuDwWw7dffJyESDnigItAQMBpt6NS65BLffh8
      QfwuFz6VEjkCpqZLjMasY2mG9tMrSZErxDicTgTA7/Kh1Ko5f+xjPFIHra0DDPd2Y3F/DWHN
      HcTtdmM2m9mxYwe5ubkMDf1BQSmRSFi1ahXbtm1jcHDwtk6fL6RSKWlpadx///0MDg7S19cH
      gFgsxuPxIAgCfr8fmeyL+pd/LxaLhbKyMrKysli8eDELFy7kqaeeYvfu3SQmJqJSTUeeRSIR
      kZGRbN26lbi4OCorK+fcls8jFovxer2hGXy27z+rA9gGqylpDnDfxqWIPDbcymwSlN00NbZy
      sWKQ1UtXkLNASvXNeqqq6kjJX0CE382FC/Ws3LKSSOlMTFVJwbKFVJWeYai/ndJLzRSsXMjS
      bXtYlv7NWPZ8lkAgwOTkJGazOTTa2mw2RJ/q261WKx6PB4/HQ3d3N0ajkYiIiND/55vExERs
      NhuCICCRSJBIJNjtdlQqFQ6Hg7a2Nurr6+d8/Q+ErqtSqTCbzTidTux2OwMDA0gkEqKiorDb
      7URGRqJWq7FarYjF4nlxxs+jVCoRi8U0NDRQV1eHVqvF653WeXk8HgwGAxaLBaPRiM/n+wrP
      AHYzY1NGBnq66OkfITq1iFVFSTTfrCNiyS7uW5xCSkY2po5KxlVF7N++BBk+jH45axbnI5f+
      wceikhaQKBrh2s1mRsatpBQuoXjpIjIyMkhNiCYhq4icuxL2/yIul4uzZ88yNTXF0NAQSUlJ
      ZGdnU1ZWhlgsZtOmTUxOTuJwOJDJZFRUVNDT08PGjRtJTk4OOcp8oVarkcvlXLlyhQULFpCf
      n09rayvx8fFkZGRw7do19Ho9S5cunfN1t8FgoLm5mc7OTqxWK/Hx8Vy/fh2r1cr999+PXC6n
      tbWVhIQE9Ho9FRUVeL1eNmzYMO/PRmKxGL1eT2VlJTqdjuLi4tBA5vF4OHv2LG63m9HRUVJT
      U+9WHEDA63ISECtQ/RGVXpgwd4JwICzMPc0Xht9gMIjf778btoQJc8f5ggPM7B6ECXMvEJZC
      hLmnCTtAmHuaWbdgPI4hjr5xhGGnm6BSz7MvPk3f+X/lSrMRnzSBF3/yAt72c7x7uoqAKIKd
      TzxHgbiX3/y+hKBYStyibTy3dy1SwGFo5803j+JAjKDS88Qzj6Oxd1NacpYqRxJ//xdP3IGv
      /NV57bXXMBqNqNVqnnnmGTo6Orhy5QoRERE89thjIY1JZ2cnZ86cIRgMsm7dOoqLi+d9G9Tt
      dlNSUkJPTw/Z2dns3bsXmUwWkgI0NTWhUCjYvXs3OTk5c9p2dXU1ZWVl+P1+iouL2bhxI8Fg
      kF//+tekpaVx4MCBkI1nzpyhu7sbmUzGvn37yMrKmlNbPs+MFurMmTMolUoOHjwY0mxZrVbe
      e+89pqamWLlyJTt27PhiHEAQBAKBzxzFFkQkLVjG9q3LGa44j5Cup6a0l8d/8jILXJVcssRh
      vnmFxYd+zAOZTo7XWEh01zOVcZDvbNNz/nwDSzetQEWAunPvYMs5wEtPPIDG0sS1ATkr8vXo
      NCpuGUxsWLF4Xjvn6+D3+xkdHeXpp59m/fr1BINB6uvr+da3voVarcZkMoU0Ng0NDaxZs4at
      W7fS2NhIenr6vAd9hoaGMJlMPPvss+Tl5SGVSkNaoJaWFp599ll0Oh1Wq3XOtUDR0dGsXbuW
      goIC2traWLBgAa2trQiCQGRkZMjhxGIxGRkZbNiwAUEQCAaDJCUlzaktn8fj8VBZWckTTzxB
      fHw8w8PDZGRkANDV1UV0dDT79++ntbWVtLS02ZdAUnkk8TEqas8dZ1y7lMIIMx55ChqNgsws
      PcP9nZjMkcTHqolOTkU0YkC3ZAv2qnd45XclZKxexfRxZRcTYzZyc7ORSOQkZiYy2TOIQq0j
      Wqf+xq3FfD4fzc3NvPrqq5w7dw6n04lWqyUiIiIUhZ0hMTGR48eP89prr9HT04PT+cV0HXON
      2Wymr6+PV155hStXroQGrYiICDIzM3n11VeprKy8TbM0VwiCwHvvvceRI0dYvXo1drud0dFR
      li5detvMJxaLMZlM/OM//iMGg4Hs7Ow5t+Xz+Hw+1Go1kZGRxMXF3fZbuN1ukpOTUalUaLVa
      7Hb77EuggNfKqd/9FlvWTl54bjkR3jYkfjt+v4B7yoQmeikqRQcebxCf3YZHq2SoopT4rS/w
      3ZwpXn+jnLEty0iWy1FFSDFbrAhpUXhtbiLjv1kCuM+iUqn427/9W/x+P2fOnGFgYACXy0Uw
      GMTlct0meCsqKqKoqAi/38+xY8dQKv9I5oM5RKFQsGLFCtasWcP58+fp7e0lLy8Pu93OyMgI
      P/jBD+jo6KCzs5PExLnt54iICJ566ikMBgM3btzA5/MxPj7OwMAAZrOZhQsXkpKSAoBer+en
      P/0p169fp6uri5UrV86pLZ9HIpHgdrtDJxtndEkzrzkcjpBOSKlUzu4A1luVXO2TcGB5kI6W
      FtJzs8mIK+Fq6QVMrUY2Pb0EMa2Ul56l09VFweKH0DknMfU1Uu9w45MpkUkB5CwqLubwuWPE
      WNO5cbmV4ie2MTXSQ2tLBxNjw9S09FCUl4lSNr9a+q+CyWSiuroanU6HyWRi+fLljI+Pc+HC
      BSYnJ1mzZg0WiwWYXi719vYyPDxMfHw8avX8yzkSExNpbm6mtrYWh8OBRqNhZGQElUqFx+Oh
      oaGB8fFxYmO/Xi7Ur0JVVRXBYDB0I23evDm0ZOzv70en0zEyMoJSqaSlpQWVSsXk5OScL8W+
      DKVSiUajobS0FKvVSlFREVarlUAgQHJyMqWlpYyOjuJyudBoNLM/A4hEEiI0KoI+L15/kOiE
      NIoKsnBabOiXb2V5ehTx+kwUXjPylKVsWJZFYkY+kT4TtmAk63dsIlmtAEAdk0ZWvJRxsxPX
      1CSShGySZHbGbQI56Sl4BBmpifHIpHd/QaRQKAgGg5jNZoqKikhPTyc5OZmpqSmys7PJzs4O
      jSZyuZzR0VFiY2NZuXIlUun8yzuUSiUxMTGMjY2Rn5+PXq/HaDQSFxdHcnIyBoOB+Ph4lixZ
      Muf2iEQijEYjwWCQDRs2EBsbi06nIzo6muTkZLRaLSaTiZiYGHw+HyaTieTkZBYtWjTvfSMS
      iUK/k16vJz8/H7fbjc/nCw1OXq+XNWvWoFKpwofiw9zb3P2hNkyYu8gXZoCZ7aowYe4FwmrQ
      MPc04SVQmHuaWR/JBSGI3TzJlM2DShtDXJQav8vGhNGMJCKKhBgNgt+DcWICnziC+LgopKIg
      UxMGHD4x0XFxRCqno6JCMIDdbGTK7iFCF0usLgIh4ME0MYnTB9HxiUQqpXcxMe3teDweJicn
      EYvFJCQk4Ha7mZycRCQSERsbG9ruFAQBu93O1NQUWq0WnU4351KIYDAYOgKp0+lCRza9Xi9R
      UVFoNBpEIhGCIGC1WrFYLCgUCuLi4uY8RYvf78doNOL1eomPj0cul2M2m7Hb7bfZAmCz2TCZ
      TIhEIuLj42/bl58v/H4/BoMBuVxObGxs6EScIAg4HA48Hg/R0dGIxeLZHcBt6+XDN04jjlEy
      ZvDx+Ms/oPPEb2m3qLFNuvnWL36Gr/4kRytGUfodLNn7PMtELfzz8XqStWJsuiJ+9PR9yAHr
      UB2/PnyelLRYhse9HHz+BRSDlzlbMYhS7sAiK+S737of9fwfHZ0VQRA4e/YsBoOBmJgYdu/e
      zfXr1+ns7CQmJoZ169aFHMBsNvPRRx+hUCjIzs5m3bp1c+4AXV1dVFVVERERwYEDBzAYDJSW
      liISifD7/Tz++OOo1Wo8Hg/l5eUYjUbsdjubNm1i0aJFc2pLXV0dTU1NiEQioqOjWbp0KRcv
      XkQmk+H3+3nssceIjIwE4OLFi4yNjaHT6di0adO8xwIEQeDmzZvU19cTDAa5//77yc3NBaYz
      aVy4cAGXy8Vjjz02/fsJsxDweQSXxy/43ePC4b/7T0J5d5PwD//5fwsGV0AYOP9Pwv88Wy+8
      /fd/J9SNegVnV6nwq9+UCI1n/5fw2vkewT5QLfyn//JbwSgIgiD4hItv/Ffhg8oRIRgMCJ1X
      3hH+8b0Kwet2CV5/QHAZG4X/8p9fESYcgdlMuiNMTEwIR44cEXw+nxAMBoVgMCicOnVKMJlM
      X3jvzZs3hYqKitD7gsHgnNvj9/sFk8kklJaWCoFAQAgGg0IgEBBMJpNw5MgRYWpqShAEQQgG
      g4Lf7xd8Pp9w5coVobq6es5t8fl8gt/vFxwOh3D8+HHB6XQKPp9P8Pl8QklJiWA0GkM2Hzt2
      THA4HHNuwx/D4XAIH3zwgeD1eoXe3l7hwoULodcCgUDIRrvdLgiCIMw6A4glMnCMc/r4u3hy
      d7BU6+KKPBalUowuKQlj/QARDjWRkTJUslgUxna0D23Cevgt/qEMMor3MJ3B3Y3F7CU5KRGR
      SExkvBZbzTgyuQxDbyOnTpZQvP9ZopTfjMcSu91Of38/r7zyCjqdjkOHDjE1NcWrr75KQkIC
      e/fuDWU5M5vNNDQ0cOnSJZYtW8b27dvn/PD3TOaHGYLBIBcuXKCpqYl169ah0UzX7xKJRIyP
      j3P48GGys7PZuXPnnNoxY8vo6Ci1tbWsW7cOpVKJzWbjxo0bZGZmhjJRBINBTCYTr7zyCsnJ
      yTz00EPEx8fPuT2fJRAIEBERgUwmIzIyErf7D2URxWIxYrH4ttl59tSIbhPv/ubXRG16nGfX
      FKDwtSP1TuH1CtgnxomOW0fEcDNOVwCPzYw7RsVAWQn6+3/Mvhwj//bqWYZ2rCJDqUCjlTI+
      aURIj8c95SAyOR1L/03eeO8G27/1IsVZcfPTK38GSqWSwsJCdu3aRW1tLW1tbTz99NMIgkBz
      czONjY0hB9Bqtdx3330sXLiQkydPYjAYSEtLm1f7JBIJu3btYsOGDVy4cAGDwRDS3yQnJ/PL
      X/6Suro6Wlpa2LRp05y2PTo6SmtrK5s3bw6Jym7cuMGSJUtISkoK3WAymYzvfOc7CIJATU0N
      LS0tbN26dU5t+TwSiQSn00kgEMDpdM6qy5rVASwdl7h6K8D92S2cPn2LlRu2syj7JB/87nUs
      ow4O/WwFwYhuTrzzGmU+I2vvex690821sqMcbQxg1yURrQSQsWr7g/zzm6/ja4+lunaAp36+
      j+sf/V9Y5DkM1FzG0J/JjvUriJDf/Vlg5qH3gw8+wGazsWPHDk6cOIHX68VoNLJ+/XpGR0cB
      yMzM5PTp07S3t+Pz+YiJmfs8R52dnVRXV9PX10cwGCQmJoa2tjYUCgUWiyWUiiQ+Pp5r167h
      9/uxWCwsXjz3EvPr169jsVgwm80kJiYik8loa2vDZrOhVqtZu3Yto6OjJCcnc+nSJQKBACaT
      ic2bN8+5LZ9HpVKRkpLC66+/TiAQYOfOnYyPj+P1epHJZJSXl9Pc3IzD4WDbtm2zxwF8DiN9
      w0YARBIpiakZKAM2RsYmkWji0CdEEfS5GBsZwSvRkJochxQfhqFh7D4RsUnJxEROe6EQDGCZ
      HGXCbKOjsgwW7mKjXsy4ZXqakqi0pKckIvt31uGdKxwOBwaDAaVSSVJSEna7HYPBgEqlIikp
      KTS9zpwPMJlMxMfHz8su0NTUFBMTE8C0Tik2NpbJyUl8Ph+xsbFERUWFdqGmpqYwm80hO+f6
      bML4+Hgo/WFERAQajYbx8XEEQUAmk5GcnIzD4SAqKgqbzcbExARqtZrExMR5TxoM05LooaEh
      FAoFiYmJeDweAoEAYrGYkZGRUDKxu5gXKEyYbwZ3f60RJsxd5AvPAIFAAK93luLMYcL8B+HL
      y9mGV0Vh7hHCS6Aw9zSznggTgn7G+ztobuvFEVQQE6XGbR6juakVo1dKfHQkAbeNzpZGBowe
      omJ0SAQvfW0NdA6MI1NHEamUhq5luNVOc0cvLlREayPw2CZoa26hb2gMmSYOtULyjdACWa1W
      6uvrGRgYYHBwMKRv6e7uRi6Xo1AoQu/1+Xx0dXXR29tLRETEvOhdAoEAw8PDWK1WtFotgUCA
      9vZ2urq6mJqaIiYmBolEgiAIWCwWGhoasNlsREVFzfnOi8fjoaOjg76+PrRaLXK5HKPRSGNj
      Ix6Ph6ioqNAumNvtpqurC5VKNe+ZoT9rX2NjI1arlaioqJAWKBgM0t/fT1dXF5GRkdOp1Ge7
      mNs+wJVLjXg8U1z86F26prycP/o23aMTXP/oHVpMflqvfcyV5mF6Kz7hQsMwE03nOVrejWW4
      lbeOnGOmXMRkVzlvHivH6zZTevRd6gZsmMYGmLS4cBvbefv9czi+YfUxBEGgvr4ei8VCVVUV
      jY2NDA4O3vaezs5OGhsbsdvtlJaW3hZ9nCt6enqora2lqakpJL6rrq7+wvs8Hk9I79Lc3ExL
      S8uc29LS0kJ/fz8OhyN0RrqkpASv14vdbg8tof1+Pzdu3KC+vh6DwTDndnwZwWCQiooKhoeH
      qa2tpaurK/TaxMQEV69eZWJiIhSfmDUQplRncOi5bPCM0V9Zg83cTu9YMs8+sxtfzBjv3Wwg
      oXmcTc/9BQvs1/mHcy3k5I8TnbmJdfkWbh5pxQeo8NJUcZ2i+77PpsXRZKpdnLzRwg8fX0ty
      jp+RlgvUDc39jfPnotVqWbNmDTabDYvFQkpKChkZGXR1dX0hd6rH4yEzM5OioiIuX748L89Q
      eXl5JCcnU1NTA0zXu0pLS2P9+vW3vS8QCBAMBikuLqa7u3teDjctX74cmI6TXLlyheHhYRYs
      WMDatWtve59UKmXbtm00NjbOe22wGWYq+Tz00EOMjo7S09NDYWEhACMjI6xcuZLCwkLOnTuH
      zWab3QFEYhGOsU6OHzuFeu0BlulcXJFpkMpEqGNisA2No/GoUCrEyNCisIwRkbUS95FjvFoj
      kLZ8J9MJRLw4HX5io3SIALlWhWNiCtzjHHvnQ7qNfpbveAiFRIBvxCJoevTv6OggJyfnTx7m
      1uv1lJSUUF5eTnFx8R2phAKEskJkZWWxe/dulEolSqWSrKwsfvvb36LT6XjggQfmpe3u7m66
      urrYvn07jY2NVFRUUF5eTkpKCnv37g2pQe80gUAApVKJRCJBqVTeNhsHAgEiIyND1Wrcbvfs
      SyCPbYR33jrOgp1PsG9TIVJNLHLvGHa7l8H+YZL0OUTr7BinXFgMowQSdQxdP0fythf52cuP
      4qqvYtgNoCI2PpK+vn6CQR+Tg5PEZqfiRcPeZ7/Hj76zl6bLJzG7vjnHMe12O+Pj42RlZf3J
      yG5bWxvFxcW8/PLLjI2NYbVa5902nU7HCy+8wI9//GNkMlkoSmw2mxkeHuaHP/XCH80AACAA
      SURBVPwha9asoaOjY87b7uvrw2g0sn37dlQqFVFRURQXF/PTn/6U2NjYO7bc+TJkMhkOhwOn
      04nJZLotf5NCocBgMOB2u0OyjVlnAFtvBdc7xvCcPUr9VQ3b9z7GiqIA7/z6n/AEI3nux3n4
      I4p4/51/4hISNhx8jmyPwPVPXuc3MgGJfinxSgAJizfdT82b7/NqLdwaE3jxl4/SXXWKy40j
      BIJuNGmrUX8DdEAz9Pb2otfrkcvloQRZMzrzDRs2hFIAJiYmUlpaSmlpKcnJyfNSJbKuro7L
      ly9jMBgYHR1l+fLllJeX43A4SEhIICYmhqqqKvLy8hAEgd/+9reIRCK2bNky57bcvHmTW7du
      UV1dTVpaGhs3bqShoYHa2lpiYmJYvXo1VVVVFBQUcPHiRerr65HJZGzZsoWNGzfOuT2fZeZM
      xm9+8xsUCgX79u1jaGgIt9tNeno677//PuXl5SxevJjIyMjZ06IIAT8e3/SaVyQSIZXJERHE
      5/MjEkuRySQgBPH7fAQRI5NJESFM/y2ARCpDKvnDiZyg34c/4KPt2jkm4layY3EKPv/0rpNU
      JkcsFn1DFkDTfSESiUJFn30+X2hNLZFIQutasViMz+dDEASkUukXJLdzgd/vDz17iMVipFJp
      aL0/02YgEEAikYSKnIhEolD94LnE5/OFdgpnlhMzbc7Itmds+WyfSaXSO5IzSRAEvF5vqJ8E
      QUAQhFAfBQIBZDLZ9O80mwOECfMfmW/OeiNMmLtAWA0a5p4mPAOEuacJO0CYe5pZK8ULAS/d
      dVc5f6UKU0CNPika+2gn589eZMApJzMlFp99kmvnT9Mw6CA1NRGZ4ObmpVNcq+9DGZNETOS0
      bkbwe+iqvcr5qzexoiElQYcY8DunKLtQglGaTErU/OfW/yoIgkBrayuXLl3C4/GQlJREf38/
      n3zyCS0tLWg0mtDh70AgQHd3N319fSQkJNyRqKff7w+VKlIqlURHR4fyAk1MTHDmzBkGBwdJ
      Skqacw3O8PAwpaWlNDU1kZycHCrLVFNTg0KhICYm5ra8QNevX0en092RnEAwHaEuKSlhfHyc
      5OTkkBbK5/NRU1NDWVkZEomEuLi4r6AFcgzS2utj5co82kt+T4PBzvF3PkCpz2HiyvtcG3Jy
      88x79JGKbrKSY+U9DNw4wpUxLQuTgrz15jFmaqkM1p3i/XIDq1YU0HnhPS62TAACt5rKqL52
      mSvtxnnslq+HyWSirq6O5cuX097ezsjICJ2dneTl5bFhw4bbshuMjo4yMDDA8PDw7eWl5pG+
      vj4GBwdZuXIllZWVTE1NAdMSiaamJoqKipBIJDQ2Ns55206nk8LCQoqKiigpKcFms5GcnMyq
      VatC54Vh2klramqwWCyYTKY5t+PLCAQCXLp0icTERKampmhqagq9Njo6itVqZcWKFdTW1mKz
      2WZ3AGVkJnsfuQ99XCRBvwixq4tRRzYrVi1n59pErtfW0dXhZs36NWxct4ze5g7ccikqpQat
      OgKJVPppI25aaxtZdd8ecvKWsH3DApputhJ0jnCzwcra9Qvnr1f+DMRiMXK5HK1Wi1arRSaT
      4XQ6SU5OJjY29rbRTK/Xs3Xr1tsUonfCPoVCgVarnS708OkoJ5fL2b59O7m5uURFRc2LJCEn
      J4eUlBQcDgfx8fEkJiaSl5cXKk800w9SqZStW7eSmZl5R7VAPp+P4uJiVq1aFTq7DJCWlsaO
      HTtISEhAp9NNxwJmu6BIJMLYVcmvXztK5p5nWKr1E5REIJWK0Gh0OG1TeH1yZDIx0gg1cocL
      aVwW/sFyjpbWkJiRwbQyxo/bHUSjViMCZGo5brONhovnkS9ZS1bk3a8K81kiIiJQKBQcPXoU
      s9mMQqFAp9Nx4sQJXnvtNdra2u6qfdHR0djtdj788ENEIlHophOJRHi9Xi5duoRIJJrzrHAw
      Lf47d+4cbW1toUxvlZWVlJeXk5CQcEeCXX+MmYIlMwPY50839vb2Ul5ezvr161GpVLM7gNPY
      xWtvX2XPc99n1/J0RFGpRHh7mDTZaW3tIWfBUhITbAwMTzHW2404PZ6R66WkbP42L79wEG9D
      JdMizwj0GbE01Dfi97nobR4gpSiXwcFums6/x798WEZV6RkGLa7ZTLoj3Lp1C5VKxYsvvkhi
      YiK3bt2ioKCA73//++zYsYPh4eG7al9PTw/p6el873vfIxgMhlK0+P1+ysvLWbhwIcuXL5+X
      kdflcrF//34eeeQRampqQiWjnn32WYxGI2NjY3Pe5ldFLpeH8rQODQ3dJkuZmJigt7eXnTt3
      Eh09Xbpx1jiAseEYv/jny+RmJSGL0LH7sefxtXzE2cpboMvihZeewtdbxrvHL+OWRrP7iadJ
      87Xx1geXcQZFpCzawpP71qEAXMY+jrx7hBGzg5EpKS/88ucsSZo2cKzyXU661vPi1ox565yv
      g9Pp5OjRowwNDREVFcWhQ4eor6+ntraWiIgI9u/fHxpdvF4vH3/8MePj42RnZ/P444/Pewa0
      8fFxjh8/jslkIjMzkz179lBfX09+fj5vvvkmXq8XkUjEpk2b5lx/M/PAGwwGWb9+PdHR0Zw/
      fx6Px0Nubi67du2ioaGBJUuW8Mknn9DU1IRUKmXLli3zkqnuswiCQGdnJ8ePH0er1XLw4EFc
      Lhculwu73c5HH32ETqdDp9Px5JNP3q1AWIDum1cYjyxgfWHKnW8+TJhPCUeCw9zTfOFpZUY5
      FybMvcAXHCAYDIbVoGHuGcJSiDD3NGEHCHNPM2teoKDfTdPVj3nv2HnG/RpyMuIx99fz3jsf
      0mlTsjArEa9lhFMfvEV5h5WsnHRkngmOv32YK40jJGZmovs0L1DQ76bh8nHeP3EBE9Fk6WMR
      Bdx0VF3iQtsUi3Lu3o5QMBikpaWFuro6MjIykEgkDA0NcfHiRVJTU5HJZFRWVvLhhx/S399P
      RkZGKPjkdrs5d+4cp0+fJjIykvj4+Dk/hfXHKC8vZ2xs7LbSQ5OTkxw+fBiTyRT6LnOJzWbj
      xIkTXLhwgdTUVNRqNR0dHdTU1JCenn5be2azmdOnTxMTE3PHDspbrVbeeusthoaGyMjICAXm
      /H4/V69epaSkhKSkJHQ63Vc4FO8cxRTM5Xs/eBJH1RGqh0x89E4Jq/c9TmzXKc50Wyk/+S7i
      hfvYFDvE+xdruPz271Cte5qDq7R8cPwiM0lEeq5/wJlbUXz/+0/jb/qYU9XDTPS10z9hp6ev
      cx67ZHZmirwFg0GCwSBer5dbt26h0WhwuVwEg0GSk5P54Q9/SFZW1m0am9HRUTIzM3nppZdo
      b2/HbrffEZsnJydpbGwMHYiH6ShtaWkpjz76KCKRiNbW1jlvt7+/nzVr1vDd736Xa9euMTo6
      itlsDtUIm8Hv99PW1kZcXBxOp3PO7fgy/H4/paWl3H///URHR1NfX3+b3TabjYMHD1JWVjZ9
      bHK2Cyo1GWzZthjbSB9mIY5Y+rGJ80lLiWP1qkyaW+oYGlZQmJdK7sKFWHoGEUdHYuhpw+AI
      4OoZYBIAFz0dg6zZvAG5MpqVaxfS39RJQu4y1i1fgOIuL8ZiYmJYu3btbZqajRs3hiKJUqmU
      hIQE2tvbGRoaQq/Xhz6bmZlJQUFBqKDebFVJ5gKPx8PNmzfZvHnzbWlYnE4nMTExxMbGkp+f
      j8PhmPO2i4qKSE1NZXR0lNTUVJKTkykuLv5C1FkqlbJu3bqQavZO4PF4UCgU6PV68vLycLn+
      oCwwm80UFhaSkJBAQkICVqt19qwQEGSo7iIfXrvFxocfI1c9iCCWIhJNH3j3+7wEAxLE4ukC
      GiK/hCV7niCisgaDwYTD60f49DoBfxD5pz+WWCom4PX/qYa/cXi9XkZGRr6wpBAEgcbGRmw2
      G+vWrbsjeYFmZqeIiAj8fn/oEPpM8QcgdJh/rgkEAty8eROADRs2hA6bfxP4/Pf/bGKwL3tt
      1nHXMdbC4VNdPPXid1idG48oOoNIXwdj4xbqG7opKFhOSoqd7t4JBjrbUGamEynIWbZ5B9lx
      cjS5mSQAoCZrQTJVN6rwe2201HSRtiRvPvpgXvB4PLhcLu677z7y8/NvE8PdunULt9vNpk2b
      7pjm3WAwUF9fz/vvv8+1a9e4desWMF0iaHJyEovFEspVOtc0NTURHR3NunXr7pjK86uiUChw
      OByMj4/T19d32++h1Wrp7OxkamoKg8GAVqudPSuEueMC//DWNaKjIpFGaNl18GkixsopudyE
      NHUJTx3Ygc/QyomPz2KV69l74CF01mbeOX4VQZPKzj17yE+armDoc0xy+fTHNPePM2kRc/DF
      76EZuswnV1swOj1EZy3n+cd2E6O+M0lUP8vQ0BDvv/8+DocDnU7Hvn37OH/+POPj48hkMnbu
      3InBYKC9vZ2oqCgeeOCB0PRqNBq5cOFCqDDzoUOHQlUb55vJyUlu3brF8uXLqaysZPny5YyO
      jnLq1CnS0tK4//7759wJTp8+HdL3ZGRksGTJEkpKSrBarcTExLB3716GhoYoKiri7NmzdHd3
      IxaLWbt27bwXyRMEgdHRUY4dO0ZsbCy7d+/GbDbjcrnIyMjg3Llz9Pf3s3PnTgoKCu5WWpQg
      Yz2tWJSp5KdGz3NbYcL8ccJ5gcLc03zhIXgmE1qYMPcCYTVomHua8FAf5p4m7ABh7mlmzQvk
      95i5cvwdPvj4LF2GAAvyMhiqO8ubv/+I2n4XRQtzcIw08/bv3uBK/SDJ2TlIpjr5/euHuVTd
      iToxnaSo6W04n32C8x/9no8+uUivUSArW49vspMP336bUxeu4VKlkpEUhfgupIf2eDzcuHGD
      yspKFixYEAoqVVdXc+nSJQoLC2lububtt9+mvb0dvV6PWq3+Qz/5/bz55psEAgFSUuZe02Sx
      WLh8+TI9PT1kZ2fjdDopKSnh+PHjWCwWsrKyQkGeiooK3njjDSorK4mNjSUuLm5ObTGbzVy4
      cIGBgQGys7Ox2WwcO3aM06dPIwgCqampoSDc2NgYb731Fjdv3iQtLW3e9UCCIDAyMsLrr79O
      R0cHmZmZoci82+3m5MmTfPLJJ2g0mukcTrNdMOCzo8nczM9+9iKKnnPUDRs4/XENu559iUWu
      Ck63TXK95ARJm5/j4QI/Ry9VcfXIcdL2/IDn7svmk5KrzJzL77j2IQ3+Qn72s++TYKrkVGU/
      VqubVbuf4S+/v5fKjz9k6i4VyPB4PERHRxMRERGKHhqNRtra2hCJRDgcDpqamvjBD34QyhU0
      w8w5VKvVOm87aDabjZSUlJCwy+12k5eXxy9+8QsEQcBonM6pFAwGGR8f50c/+hF/9Vd/RUFB
      wZzbYrVa0ev1IYfr7u4mJSWFv/iLv8BgMIRyAM0kzNqzZw/f/e53iY2NnXNbPo/f7+fatWs8
      8cQT5OXl3ZYXqK+vD4VCwfPPP099fT0ej2d2B5CrU1m5MpuhxusMCxlkSgexyQtJSYxi5Yoc
      mptuMjysIT8ngczCQpzdo2hy42goPUlF6wDW1j7GAXDQ2znCuk3rkCm0LCnOZ6ChneTcJWTH
      S6m7egltzirUirtTHUCr1bJo0aLbKgrW19ezatUq5HI5SqWSxMREzpw5E5oBZjCbzXR1dbFp
      06Z520HT6/VkZmaG/o6JiaGgoICuri4UCkUoy0EgEMBoNHL16lWqqqrmxSHT09NJT08P/Z2U
      lMTw8DAlJSUolUp0Oh0w7bQ+n4/29naqqqruSAF2t9uNWq0mMTGRnJyc20R4NpuN/Px8YmJi
      SEpKwmKxzO4AQtBDbcnbfNzgZP+3n0AfKUUU9CMI0x4ulSuQSAIEgiD4/QRlChbf9xQHtiwm
      LSEWQSX9NC+QCIlEhPfTYhtBXxCJXIbfaeDEm7+jNZDPtx/diEr6zSiP0dvbGyqnMz4+zsTE
      BD6fj7S0NHQ6XSgT28wySaFQMDIywtjY2G0CrPkiEAhQV1fH1NQUGzZsCEmzJRIJO3fuJCsr
      K1Qpcb5xOp3odDr0ej1er/e27y8Wi0lMTMRms1FVVTXvtohEopAuKRgM3jYgfdlrszqAfaSB
      E1UOnnn6EfKStIh02WiDbQwMT1BR2cWiopXo9R6a24fobGpAm5WFwuklKbcQqWscdU4u0yvQ
      CHIXZlB+8Qpel4nK8maylxXSdO4oY7HFPL1/G1Gqb0aNYJi+kSIiImhvb2d4eJiBgQGMRmNI
      CTmTF0gQBCIjI7Hb7fT09DA4OHhHpL8GgwGLxcK6detukzq43W4mJycpLCwkOTn5jtgyNjaG
      RqNhyZIluFyuUGrEGbFeSkoKmZmZd2QGUCqVeDweBgcHaW9vv61voqKiaGlpwWAwMDY2hk6n
      mz0OYO0u59UjVwGQqKbzAiV7WvnoxFXUC7fy5K7leC3DnPrwCBOqQh4/sB3pRCOH3z+PLGUJ
      B/bfR2Lk9BwQ9Lmov3yCCzW9TFmDPPDcS0T2lnC2bgSACP1innvkQXSqO58lbnBwkN///vfA
      tBT62WefJT4+Ho/HQ3NzM8uWLaOnp4eTJ08SHx/Pvn37mJycFnrn5uYC00ljvV4vWVlZc25f
      ZWUlly5dQhAEEhISWL58OaWlpQQCATQaDYcOHaK7u5sVK1bQ09PD2bNnQ/mC5loLVF5eTllZ
      GYIgkJSUxN69eykrK6Orq4tt27axdOlSKisrKS4uxuFwcOTIEVQqFfv37w8tj+YTi8XCO++8
      Q1JSErt372Z0dBSXy8WCBQu4cuUKra2tPPzww6Slpd2tQJiAdWIUlyyKxKi5VyuGCfNVCUeC
      w9zTfGlalG/K4YYwYeabL02M5fP57oYtYcLcccJSiDD3NGEHCHNPM+uheK9rnLPvf0TnpA1l
      bD5PfGsfw9ffp/TmAGizeO47j+Ltu86Hp8pwS2J44NHHSHQ08/4nlXjEEazeuZfNRdM5a9ym
      fo4eOcaYzYcqoYBDhx4kOHyTU2crMbvdZKzaz/4thcjvgls6HA7KysqYmJjgscceQyQScfLk
      Sfr7+4mPj+fhhx+mra2NGzduIBKJ2LNnDzk5OcB0IOj8+fN0d3ezbNkytm3bNucRYYPBwPXr
      15FKpezZswe/38+VK1dobGwkJyeHhx56KFQVvb+/n1OnTiGVSnnooYdui1rPBT09PVy8eBGL
      xcL69etZtGgRp0+fZmhoiPXr17N27VrEYjEmk4njx48zNTWF1Wpl69atbNu2bU5t+TyCINDV
      1cUnn3yCWq1m//79JCYmAtO/8bFjxzAYDCE7v1JiLEVsPrvuW81A2Ul8adlUfVLLvu99j2TD
      JSp8aRgrTpO26yV2JE1yonECd9NNUve+zN4CKScutrJiVSEygjRdeJdb2i18/+kHEfqvc3NS
      y7KCLBatXs/qwihKz1SyaOUKVHehwMjMfrrD4SArKyt0cPrJJ5/EZDKFQvxbtmwhLi4Oo9EY
      urE6OztxOp1861vfIi0tDYlEMueJsbxeL1FRUbjdbjIyMhgdHaWvr49vf/vb5ObmIpVKQ9Vh
      ZvQ3GzZsIDIycs6d0efzsWTJEtavX09DQwOCICCTyThw4AB1dXWkpaWhUChQqVQsX76cdevW
      IZFIyM3NRavVzqktn8fr9XLt2jUOHDiAVqtldHQ0JNvo7u4ODQq1tbVkZWXNvgSSqWLJzo6n
      o/wMw7J8FigmcMkziYlRU1CYQU9XMxMTGtJSokjMzCQwYCJxaTo3jvwbH5ZWYmwfZFqm5WR4
      wMiipUVIpSoyC9MZbe8jQuaj7MS7/ObfzrB414No71yZrdtQqVTo9frQzRIbG4sgCBw+fBij
      0UhSUhJ6vR6Hw0F3d/dtwa7JyUmGh4c5fPgwHR0d85KKJCYm5raiG0ajEaPRyOHDh6mtrQ21
      6XK5cDqdnD17lhMnTmCz2f7YJf9sEhMTUSgU3Lhxg/z8fARBQK/Xo1KpQvl2PovZbMbpdJKU
      lDTntnwen89HZGQk0dHRpKSk3CbLcDqdZGRkoNFoiI2N/WpF8gI+Oxfe/hcqzKk8+/xB4iLl
      iAMuAgEBu81KRKQOucyL1xfE73Tii4ikYP0hfvKDb7Nv2xoi4iOYDnXJUCgl2B1OBMDn9KLS
      aUAezaYH9/PovvW0lF3E5rk7atDPYzKZkMlkPPzww6jVaiYmJhgaGqKmpoatW7eSkJAQeq9c
      LmfRokXs37+f9vb22zK1zRcymYycnBwOHjzIxMQEfX19wLTeJTIykt27d5Obm0tFRcWct22x
      WCgvLyc/P386s4JIhMfjCe0gfrYsazAYpK6ujiVLltyR2mEzs2AwGPyCLWKxGLfbTTAYxO/3
      I5PJZn8GsA/WcKEDnn4uE5d5Amd8FonqEhpqG5ioGmX1gceR+Rqpqapmwl6PvmAHwuQoY84A
      I431xBUUMZ0XTEHB0iLeuXiWHGkeVy63UvjAC/S3N+CQRqOUyMHnJhi8O3E5j8fD+Pg4JpMp
      pPNxOp3Y7Xbcbjd2u5329nYWLlyIyWTC7/eHOjclJYXGxkbi4+ORSCTzkhjLZrMxPDyM0WjE
      YDAQGxtLR0cHFosFQRCQy+VYLBZUKhUajYbh4WFcLte85ClqaGhArVYTCASYnJwkKiqKmzdv
      EgwGmZycRKPRYLFY0Gg02Gw2vF7vvJeMmkGpVCKVSqmpqWF8fJzU1NTQTR8fH09FRQVutztk
      3+zPAC4nFped8ZEhRgxGopLzWFqYQm9rB9rF29lckEBiWhaOgRasmiLu31CI2DNJ1Y1qAjGF
      PLhtFRGy6YlGm5hNksxEfWsv44YporMXkqnx0tzUxOC4ly2795ISrbgrgripqSmuXr2KSCRi
      YmKChQsXIpVKaW5uJj09nfz8fCYnJ+nt7WVwcBC5XI5IJMLtdpOSkkIgEKCxsZGlS5eSkpIy
      588At27dorGxkWAwiMViYcGCBWi1WmpqasjNzSU7O5uenh5iYmLQ6/U0Nzfj9/tZs2bNnBfK
      NplMoX5wuVyhWaCnp4fNmzejVqvp7e0lJiYGr9dLdHT0tPDsDiQMFovFpKSk0NLSQnR0NMuW
      LQvlfU1JScHv9zMwMMDmzZvRaDR3Ky2KQMDvJyiSIJOEd2LD3D3uUkFXERKpjG9WZeAw9yJf
      mhfoTiR3DRPmm0BYDRrmnia8AA9zTzPrM4AgCAT8PvyBIGKpDJlUghDw4/P7EYmlyGRSEIL4
      vD4EkRiZTIoIAZ/Xi4AYmUyG+NM8J5+9lkQqQyqdPgIpCNN7tiKJ7K49FAuCEKoOMyMp+OwR
      vpldH5/PF4p8fvYA/Wf/P9clif6YvX6/n2AweJstM9/D5/MhkUhCEeK5JBAI4Pf7Q9uvM/0y
      c85WJpMhEolCJXd9Pl9oaX0ndoJmfrvPtznTZ4FAAKlUOt0/s13M4xjgg3/9gImAHzfxPPfy
      d+k5/S9c67TjCep46Rc/xNt8mrfP1CEgY/sT30Fvvs7b57uQiAXytzzMw+um6wA4Rlt47Y2P
      CMoVuCXxfOv5Z8iKljPVV8P//Pt/IPrh/5u/fCBnfnvnj2CxWDh79iwmk4nnn3+eyclJjh8/
      jtfrpb+///9r702D4jrzNN9fLmSSK2QCyb6DFiQhIZAsa7FkWbJctiVbsq0q1XQtXRPV1e12
      VVfNRE9Mx52YiY7piTs3emqio6url5oqL2W3bVmytaAVJCRAYhOL2HeU7CSQJLnvee4HzGnj
      cje+dwBNtPhF8IUk8/zzZL6857z/530e/uiP/ohQKMT169fF7X3p6ekA9Pf3c+PGDXE75Cuv
      vLLq91FjY2NcvHiRYDBIQUEBR48eRSaT4ff7uXLlCiMjI+h0Ok6cOCFqYVaKpqYmampqCAaD
      FBUVsX37dt5++22ioqJITU3lxIkTqFQqgsEgt27dore3l1AoxPHjx1fFpuWLCIJAc3Mz5eXl
      KBQKXnvtNTIzM4GFKKtLly7hdruJj4/nW9/6FgjLEPI5hRmrUwj6Z4T3/+//JNwb7BF+/p9/
      KYw5/UJv6f8U/q6yW/jkf/43oXbYLcy3XxX+4u1Lwmc//69C+aBLcI81C3/xP94XHAuvJNz7
      8L8L71YMCOFQQGi98Y7wtxeaBSHkFso/+rXw6bv/Q/j59YHlylk1AoGAMD8/L1y5ckXwer3i
      791ut3D58mXBbrcLH330kTA7OyuEw2EhHA6Lf+P3+wW/3y/Mzs4KH3/8seB2u1e93rq6OqG5
      uVkIBAJCaWmpMD09LQiCIExNTQkXL14UQqGQ0NraKtTV1a34sX0+nxAIBITJyUnh7Nmzgtls
      FsrLy3/n70KhkGCz2cRampqaVryWL+P1eoWzZ88Kbrdb6O7uFioqKpY85nA4BL/fL5SWlgrz
      8/PCsjOATKEhVuKh5vInzMbv5mWtgypFCjqtgvisNMYf9iO1aykyqonRpCCb7CL3hR1cfO/n
      tGqlTPYrmAd0eJmxuMjdl41UJiUhI4G5G2PM9M4yLNvE4ewuzGuTo/aVREVF/U6zRhAERkdH
      iY+PJxKJYLVa+eCDD1AoFLzyyiuiA5wgCFy5ckUMXliLlJjk5GQ+/fRTysvLEQSBzZs3k5CQ
      QExMDIFAgL/8y78kEolQUFCw4scOhUKcPXsWl8vFiRMnxPTFlpYWnnnmGXbt2oVUKkUmk6HX
      6zGbzYyPj7N3794Vr+XLBINBNBoNarWauLg4hoaGxMeUSiVSqZR79+6RkpKCTqdb/hIo5Lfz
      6T/8gsDml/jRq0Wogl3Igg6CQQGPdRa9sRiVsgufL0LQZccbG0Pezpf4zztfxjfewn97u56F
      rBQFGq0cq20eIcOI3+5Fm5jCtU/ewazexqX2bjql0UztTyNJ+5gUcV/C7/fT1dXFsWPHRDeG
      48ePMzExQW1tLa+99hqwcGJPnTqF1WqloqKCrKysVVc9ZmRk8LOf/YxIJMKFCxfE40VHR/PG
      G28A0NbW9jvCtJVAo9Hw/e9/H4vFQnV1NSdOnODP//zP8fv9XLp0ifT0mSQYWQAAIABJREFU
      dFJSUhAEga6uLubm5jh69OiaaIFkMhk+n49wOIzP51sSWOjz+bhz586Sbv2yFdkH73F3SMqp
      7S6aGxvJ37KVvOTL3CwtxdZj48gPdyKRdXHnyme0+x5RWHSawEgndY9msfQ0klPyHAtGGAq2
      79vPry5/jH4mjZrKDp79wTG2vvAXeINgafgIl28bRtXj6UHY7Xba2tro6+tDo9FQUlLC6Ogo
      KSkpqFQqcQCUl5cTDocxmUyiBeDw8DCzs7PiyV+LGz273U5rayuzs7NERUVhMBgYHh4mMTGR
      3t5ebDYb/f39vPzyyyt+7Hv37omCs3A4zODgoJjHFQgEUKlUDA8PExMTQ01NDRs2bKC2tpbs
      7OwV35vwZaKjo4mNjeXy5cu4XC527tzJ/Pw8wWCQyclJJicn0el0TExMsHXr1uXNcWXyaIwJ
      scilEiQyOXGmFAo25yMEgmTvfpbtaTEkpOUQI/WjyypmX2EmClmYuVk78bnFHNy9CeXnKztq
      YzobUrQ4fBGCDitCfBaFuWlotVpi4lPIykgjXvd4/vv7/X4sFovov5mUlIRSqSQ5ORmlUolE
      IiEpKYlAIEBMTAzbt28XM3FjY2PxeDxIpVJ2796NwWBY9UEgCAJ2u52YmBh2796NQqHA4XCg
      1+sJBAK43W527dq1KrqkqKgo3G43CoWCffv2kZiYKCosF9//Yi3R0dHiHnODwbDqM6NEIiEl
      JQWfz0dWVhYbNmwQB6tOpxNl44uxt+uNsHWeaNYbYes80XylL9BaeDius87/CXylL9AX07XX
      WedfM+uXQOs80XwNLVAYh9XC7LwXtcFEYpyOkMfOpMWKXBtHSkIMQjiIfW6GoDyWBIMaImFs
      ljHmAzJMSUlolQuHESJhHNYpZh1+tAYTCUYtEiGMy2bFEYoi1fT4QrMFQcDpdOL1eklISEAi
      kTA/P8/c3BwxMTHExcURCASYnJxEpVKRkJAg6m9CoRATExMEAgHUajVJSUlrFjVrtVqRSqVi
      QAYsrGhNTEyg0WiIj49f8VpCoZCYnZCSkoLf7xedsuVyOSkpKSgUCgRBwOPxMDU1hVqtxmQy
      rYlOKhgMMj4+jlKpXHLMxc/Y5/OJ52XZLZE+5yM+++AmVpeF2qomkrcW03z572kanKapqp7k
      nU8x33aT8rJrVE/EsmdrCv7xh/zqw3JmJ/vonJFTlL/QMXWMNvOr317H75+juuoBxtxtCJMP
      uXb1OtfaJ3lu97ZVPzn/HHNzc5SXl9Pb28vmzZvx+/1cuHABq9VKc3MzWVlZNDc309bWRmdn
      J0lJSeKS3vT0NKWlpXg8HjEjbC0GQDgc5te//jWzs7NixzcSiVBVVUVXVxcdHR0kJyev+NJj
      c3Mzzc3NTE1NMTIygkqlEn33F50iNBoNgUCA69evMzExQWdnJ1qtdsXzyr6MIAg0NDTQ1NRE
      b28vBoMBo9EIwMzMDBUVFfT395OXl7cgXFxuAMhlerbt2UVBfjKP6qpRZBppqXbwzT/8DgXS
      di6a4zl2YBebdHZqLDr2bTXRfuN9FHv/gNP70qm5Ukva3p3oJEHqLv8jun2/z6vP7SFVOkpZ
      u5dDB3aTlaSl22xh787HNwDUajVbtmzBYrGQlZWF0+nEZrPxjW98A6/Xi1wuZ2xsjNdffx2D
      wcDU1JTY1JmZmUGv13PkyJEl1iqrSSQSoba2loSEBNEhAhbyu/r7+3n99dfR6/VYLJYVbz4l
      JSWxbds2cnNzGRkZYefOnRQUFKBWq9HpdOIeYY/Hw9DQEMePH0epVBIOh1dcmPdlvF4vra2t
      nD59msTERIaHh8VoKY1GQ0FBARaLhfT09AUV7XIvKJHJ8M9PUPrRWcIbj1KoDxBSxBKlkGCM
      j8dunSO05Bkh3K4gMTodEpUag+DB4QXw43IGSYgzIgGUsRpcU9aVPwMrxGIz65e//KWYgKLV
      apHJZGg0miXJK+FwmLt37/JXf/VX1NTUrIm79szMDD6fTwznWCQUCi1s9pZIUKlUq7K/WyKR
      MD4+zt27d9mzZw9RUVGiI9uGDRvExptGoyElJYVf/vKXNDc3r4kvUDgcRq1WI5PJUKlU+Hy+
      f/Hvl70HCHpnOffOeyQefIPTO3JRhvqRB+bw+yM4pqcxJhQjB/7pI49Cq1cyOm8nYnAxJ9UQ
      qwKIRh+jZGp6BiEtAY/ViT515ZNUVoqxsTHUajVvvfUW9+7dY2pqCpfLRSgUwuFwLIlIzc7O
      5k//9E8JBAKUlpbicDiWXJOvBvfu3aOlpYWamhpcLhfZ2dnk5+cjl8txOp1EIhHcbvcSLcxK
      MTExwdDQEAcOHBBjTx0Oh+gAsYjNZsNqtfLWW2/R3d1Nf3//Ej+l1UAul+PxeAgGg7jd7mWF
      icteAtm6y3j39hiJmhCDQ2bUKTuJmr9PdX0Hzf1eTpx8lomGMu7UNNA6MIlCrmPr9hzuXLhA
      d98Ayg0lHNiQAkgxGFRUXLrMsLmLG/dHeOmNV/Gb6yivuM/D7gHcERWZaSkoo9Z+cWpmZoYr
      V67Q1tbG7OwsaWlpPHz4kP7+fiYmJiguLsbj8XD37l3MZjMlJSU4nU6cTidjY2OUl5fT1dWF
      Uqlc0Jis8s1eQUEBhw8fJi8vD51OR0lJCZ2dnZhMJqanp6msrMRsNlNcXIxOp1vRY9+6dYux
      sTGGh4dF17z6+nqKiorQ6/WEQiG6urowGAx0d3fT2dmJ2WwmJydn1S+B5HI5DoeDsrIyBgcH
      KSoqIhAIYLPZ8Hq9XL9+ndbWVmw2G0lJScvbooS8DiZnF0LPJFIZhoQkFBEPs1Y7MnUMCQY1
      jhkLDt/ChVCUUkd8gh631YIrKMMYF4dKsXgXHsE9b2Xe5aa3vppQ7kEO5KiZc3gRAOQqkkzG
      x7IrbNEYCxameJPJJBpjqdVqDAYDwWCQ2dlZUXC1eJ6ioqKwWq2EQiGMRuOayKEXCYVC+P1+
      1Go1DocDrVYrZgWr1WpiY2NXXAtks9lwuVzAgvjMaDTi8XjQaDRIpVIikQhOpxOdTofX68Vm
      s6FUKjEajWuyChQKhZiZmSEqKkr0Jlrcrbbo2ieVShdW+5YbAOus86+Z9UbYOk80vzMDCJ9v
      ZF5nnSeBdTn0Ok8065dA6zzRLLsjTIgEGe9vo/FhD85INPFGHV7rKE0PWpj2y0mO1xMJeBjt
      72TSrSAuVgXhIEMdDbQPWFAb4tAsaoHCQcb7W2ls68WNmniDhojfQVdLI+19w0TFmNCroh6L
      O3QkEqG7u5uOjg7RY7+jo4OOjg78fj9xcXHY7XYaGhqYmprCaDQusT5Z3P8aiUTEtfGVJBwO
      YzabsdlsxMbGEolEGBwc5OHDhwDias/iTrH6+nqmp6d/p86VIBQKMTQ0hN1ux2AwMDo6yoMH
      DxgaGmJycpK4uDhRCzQ7O0tDQwNOp3PNVoG8Xi/19fXYbDbi4uLEY0YiEaamphgdHcVgMCCV
      SpefAXzOYe7f70epDFF5/n16rD6unf2AcZefxgsf0DITwvywkrqqG5yrHiQM2Prv8smdAbzT
      nXxcel9sklm6K3j3ciPRihCVn71P/ZCdkc56eifcRAsWPv7HSzj8j+eKbHJyku7ubuRyORUV
      FczPz2O1WlGr1dy/f5+JiQnq6+sRBIGxsTHa29vF5wqCgNVq5fz58/T19a1KfQMDA7S3t9PZ
      2YkgCFgsFtrb28X6bDYbsBARVFdXh1QqZXR0dEmdK0Vvby8dHR10d3cDC6ZhMTExaDQa2tra
      xP0kXq+XW7duERUVRVdXF11dXStey5eJRCLcu3cPu91OZ2cnPT094mOzs7M0NjbS3t4urnQu
      2wmO1mbz+vfzwDdBd8U93PYeHk2n8W9/+DxB3SPebzDz71/6BqkaP/+9BSBIT0MNBUf+lGOZ
      M/T+/CoT4cOkywK01day/dif8HShgZQoOxdr2vnJmcNkFcnwTjdSXtVAOCLAY5gDUlJSOHXq
      FD6fTwx5ePbZZ3E4HAwNDaFUKnn++eeRSCS0trYuaRaGQiFqamo4cODAinvxL7Jx40aSk5N5
      8OABsGCLcvLkSUKhEHNzc+Jav0Kh4NixY19Z50qxZcsWUlJSxNknMTERk8nEwMAAhYWFxMYu
      RKIs7ivZuXOn6CC32ni9XhwOB6+++ioTExP09/eLjy26ety8eVP83bIDQCKV4Bzr4ONPSkl4
      9gzFsU5uR+mIipKgNcbhGJln6SkO4fMG0arVSKJVGPDh9ALaAB53mPjYmAUtkD4a94wNqTRM
      T80NSqu7efWHb2KIfny3JePj47S2toqbzJuamqioqGDr1q3odDqCwSCNjY2Ew2H27NkjPq+/
      v5+kpCSio6OXaIRWm+npaerq6igpKRG/dIsRQfX19chkMnbv3r0mtUQiEXp6eti3b5/4RY+O
      jiYzM5Nf/OIXGI3GVXGo+Ko6oqOjkclkREdH/+9rgXz2Ed599zJPn/kBxTmJyCLDRAfqsTt8
      uAaHScvc/yUtkJL4xFhaxsbxaeaZiorBpAZQkZiso7tvgKdTs5gaspCQX8JYSxmXm+Z544d/
      RHac+n/z7f//x+l00t7ezv79+0VzqS1btlBYWMjt27d59OgRDoeDmJgYNm/eLCo+w+Ew9fX1
      mM1m0SkhPT2d1NTUVa130Rbl0KFD6PV68UsXDod58OABiYmJ5Obmrsk1NyxISZRKJTExMeLv
      FuOcfvazn9HZ2Ulvby/JycmrWseiY4XL5WJmZga1+l/+Ti27DDrT9BF/+Jd3KCrMRqGO4cXT
      32e+7m0qWmcJRiXwh//u3zJ09bdUNjTSMqvhhaOv8OqRRN77uw9woSRv/0l+77kFmbN7qotf
      /+YT3JEQY3MKfvKf/iMD7/8HLprV5CbqUKdt4/uvf4MY1dpHZ9TX13P27FkSEhJQq9UcO3aM
      W7du4XQ6ReOrDz74AIlEglQqZe/eveKXfFGR2dbWhsfjWTI7rGR9ZWVlWCwWduzYQV5eHqWl
      pcTHx6PT6XjttdcYGBhgw4YN/OpXvxKjWg8cOMD+/ftXtJb79+9z69YtZmZmKC4u5rXXXqO6
      upo9e/YQFxdHMBikrq6OwsJCbt68yeDgoBhPunnz5hWt5csIgsDDhw+5cuUKGo2GN954g3A4
      jNfrRalUcv78ecxmM3l5eZw5c+Zx9QFCdFSUMhZbxAs7s9b+8Ous8znrjbB1nmi+0hVinXWe
      FL7SF2hdDbrOk8K6FGKdJ5r1AbDOE82yWyKFcID+5rvcrKjHGtKQnmzAOdnLzeu3GHYryE2N
      I+xz0tN8nwF7NCkJOggHaKu+QmWLmZjEVGI+tzwXQn76Gu9SdrcBOzpSE2PxzAxx++ZNGlp7
      USVkYdQ+Pi1QbW0t1dXV4o6wuro6Kioq6OrqIisrC7vdzrVr1zCbzaJrNCz4zldXV1NfX79q
      DsjBYJDOzk6mpqbEbYVjY2NcuXIFh8NBamqq2Juw2WyUlpZit9tJTk5ecZcKt9vN3bt3qa+v
      x2QyoVQqaWpq4s6dO8hkMtFXaRGbzUZNTQ3JyclrEsHrcrm4evWq6Pa92AsJh8M0Nzdz//59
      4uLi0Gq1X0ML5B5naFLBgYNFDN/5hLYpJ5fPXiR+43Y8DReoGvUx1v2A0Uc93G2bIALMtF2l
      YljDtlSBTy/eYdFpdKT5ChebXTzzzE7G7n9GRcc0Xl+IvO17eWaHkc/+8VMcj+n2w2KxEA6H
      2bdvn7iePzY2xsGDBzly5AhRUVH09PRQUlJCTEwMHR0d4nM7OzuJRCLs2bOHe/fu4Xa7V7y+
      4eFhbDYbMzMzovbo9u3bHDp0SLREgQUt0J07dygsLGR2dnaJFGClGBgYIDExkb1791JVVcXo
      6CiBQIDDhw/T3d0t6pJgYeDW1tYyMDCwbFd2JQiHw1RWVpKTk4Pf71/yOS3uY96yZQuVlZUE
      g8HlB0C0NpPnX96PQQmBUBRR/kFmfTls2bqJZ3Yl09g6QkbRYQ4Wpi/s6yXAYGcXm/ccYPPW
      bWgso0wGAXz0tvdQ/OwRUtM3sP/pfHpaeklIzSYhRsHM2BT61AwUjym7Pikpif3796PVaomN
      jRU3BikUCqKjo1EqlRw4cID09PTf6XhGR0eL/2X1ev2qJKHk5eWxc+dO8bVnZmZEbxudTice
      3+12o1ar2bhxI4WFhdjt9hWvpbCwkG3btqFUKjEYDGRkZLBv3z7RF2hRD7UoHNRoNKvuBrGI
      z+cjEomwbds2CgsLlyTkWK1Wtm7dyqZNmzAajTidzq/hCySB2b463v7gJnkvfost+jARWTRS
      mQSNRoPP42GplW6EQCBCtFKJRKFAJQTxBQFCBPwR1GoVEkCuisLvdEPISfO9SlqGHCSaDEh5
      fMuwg4ODtLS0sGfPHhQKBUqlkrKyMj788EPm5ubw+/1UV1ejUCjYuHGj+LxFo6zKykoxh2q1
      8Xq99Pf3c/36dc6fPy+m1SwOWolEglwuF8MpVhJBEGhpaaGrq4tnn30WmUyG2WymtraWp556
      SpSDu91uent72bNnz5oI4RZrUygUYlzrF99/JBIRPx+ZTEYwGFxeC+SZ7eOdc/WcfvOHZBrU
      SAQ56sA9Zq0ubJ1D5OY/iwy+YI6lJDXDRGVvP8VyN1MqI8kqAA3pWfHUNLeyO2kTgx1mUrY8
      h8MdYc+Lr7PPb+Fv/+Ej7LsKMGnXfhqYm5tjeHiYAwcOoFQq8Xg8PPXUU8TFxVFRUcHMzAxd
      XV3k5+eTmpq65APt6emhqKiInJwcLl68iMPhIC4ublXrjY+PJzc3l8OHD1NVVYXVaiUuLo7o
      6GisVisul4vR0dEl/kUrRVdXFwqFgkOHDiGTybBYLGJA4BdnP6vVKtqiPHr0iEgkwqlTp1a8
      ni+iUChwuVzMzc2J3k6LaDQaHj16hNFoZHZ2dkFDtZwrxFzHNf7Lr6vJSIsnSq3n+VO/h9B/
      jfL6ISSGXL77nRfpvvoR99v7GHEpKC45wivHcrj24cdM+pRsP/QyR4uyAPDNj3Ll00uMzDmw
      zMv4N2+9hWrkLmV1vfjDkL3zGC8eKEApW/vb4NbWVi5cuIBOp0OtVnPq1Cmqq6sZGRkhOTmZ
      o0ePcvbsWTEK6amnnhKFXQqFguvXr+NyuSgsLOTgwYMrfrPX2NjInTt3sNvt5Ofn89JLL9HS
      0kJ7ezvZ2dk8//zztLa2smPHDh49esTNmzdJTEzk5ZdfXnK5thJcvHhR9EDKzMwkPT2dsrIy
      1Go1er2e48ePMzQ0RHFxsbhQcOvWLXbt2rXitXwZQRAYGhqitLSUmJgYjh8/jsfjwev1kp6e
      zuXLl5mcnOTAgQMUFxc/LluUMObWeqyaXIrzVtcoaZ11/iXWfYHWeaL5yovttbphWWedx826
      GnSdJ5p1KcQ6TzTrA2CdJ5plfYEiIQ+NZef58NObjHtV5OckYR2o5/3fnqVzTs7W/FSCrhnq
      b1/i4YyGvHQDQsDN3U9/w4XKTvQp2Zj0Cx714YCLhpuf8OGFcixBHbkZJmQSCQH7JOfe/xVj
      UXnkJa78uvXXIRQKcfXqVUpLSwmHw6Snp9PQ0MDZs2eZnJwkLy+P6elp3n33XaampsjKyhLX
      vOfn5/nkk0+4f/8+6enpaDSaVb+Pam1t5Z133hFzArKyssQGlCAITE9Pc+nSJbKzs8WlyJXC
      ZrNx/vx5ysrKxAimzs5O3nvvPex2Ozk5OUilUrET/Pbbb2Oz2cjMzFz1PcqCIGCz2Xj77bcx
      m81kZ2eLS9KhUIi2tjYaGxvJzMxELpcvPwP4PRbc0Vv5yZ98j0DTeR6MWTn3YRn73vguKcPX
      uNrnYmqom3DARfOQlQgwVvcxTZFd/N6RHC58cgPv56/VX/0x5eOJ/MlPfoC05yoX68cAgd6m
      O8zNWumacK7emVmGRWnBm2++ycjIiGij/eabb6JWq3n06BF3797l9ddfR6lULvG4aWpqoqSk
      hNOnT1NdXb0q3dcvs337dv7sz/6Mn/70p2RlZS0R4IVCIe7fv4/L5VoV/c34+DgHDx7kzTff
      pLa2lqGhIZqamvjpT3/KwYMHxcHv8/morKzku9/9LuFwmN7e3hWv5cuEQiFu3brFiRMnSEpK
      orm5WXxsfn6eQCCAVColFFpo3S6vBdJlcfDgVubM3cwKiSQyjFO2mfSUeHbvyqGt7RFp259h
      d/6i1sPPo75hCkt2kJCRi8k+xbgPwMNA9wh7nz2AItpAyd4CzK09+Ge7aRpSsW9X1sqfjf8P
      JCUlUVhYKLq+xcXFsXv3btxuN+FwGJVKhV6vJykpiYKCgiUaE7lcTn9/P4ODg9jtdpzOtRvI
      PT09ZGRkiEkwgiAwMDBAUlLSqgXSbdmyheTkZIaHh8nIyGB+fh6DwSAGTywOAJfLhclkwmg0
      UlBQIGYKrCZ+v5/o6GjS0tLYsGEDXq9XfCw+Pp7du3cvmYWWvwcQQgzWlvLBjR4OfPPb5OoE
      BIkUiQRkMhmRSORL6p0FEZlUKgWpFCkCEWHh9xFBQPa5TkYilSJEwjSU30a9IR9lKIDf6yX0
      mEK6BUGgra2N0dFR9u/fj0wmY3R0lKamJnbt2oVerxc1PovT+yK7du0iMTFRTIlcq2XkSCSC
      2WwmKytLPKbD4aCjo4P8/Hz8fv+SL8BKEQqFqKurw+FwsG/fPsLhME6nk7m5OW7duiUGjQDi
      OVu0bVxtBEEQz8XXOeayA8A12c57181870c/oDgnHklsDrpgN+OTNhob+yjYkvOlZkI0Wfnp
      tLe0MTf6iAltAqmfa4FyN6ZRW11D0G+ntb6HzB2bQSlntqOKS3fb6GlqYNod+Mo6Vpvp6Wms
      Viv79+8Xk03a2tp45plnSExMRK1WMz8/z8zMDD09PUsuOaRSKUVFRaSmphITE7Mq+wG+CrPZ
      jMlkWiIv8Hg8OJ1Ozp07R319vegkt5K0trYSHx/Pnj17kEqlJCUlYTQaee655zCZTOJ/eo1G
      w9TUFHa7nd7e3lXxTP0yi+Zkk5OTDAwMLJvWs2wfYL7nNv/PbyvRaVXI1TG8ePr30c/WcLms
      GUVmCd859TSNn/2W6u4xHAEZeQUHef3kdu6de59uWzSHXj7JrtwEAEKeOSqvXaCpf4JZu4RT
      P3qTPdkLGa7WzptU+wp5tXh1jZP+OTo6Ovj0009RKBSo1Wpefvllzp8/L9r7fetb30IikXDx
      4kXS0tJ48cUXmZiYAEClUnH+/Hmio6M5deoUCQkJq15vOBymrq6OoqIi1Go14XCYmpoaSkpK
      xA+9traWgoKCFdffXL16lZaWFmQyGVlZWRw/flwM7Nu5cyf79++nsbGRXbt2MTY2xqVLl8jL
      y+PYsWOrEtr3RRZ9Uxc9no4fP47VahV9gc6dO4fH48FoNHL69OnH1QiLMP2oF0d0MnnJsWt/
      +HXW+Zz1TvA6TzRf6Qu0FkHP66zzfwJf6Qu06O++zjr/2lmXQqzzRLM+ANZ5olnWFyjkt3H3
      4lkuXr9N76Sf3PwsRltu8OHZUpofOdi0OQ/f9ACV185TO6mhICeeiHuWujulXKuaYENRLotK
      lIDTws3PPuJKeSX9liBZ2WngmaGuvJSLzRae2pqzhm99KR6PhwsXLlBWVsb8/Dy5ubl0dXVx
      7tw5uru72bhxI1arlbNnz1JXV0dqaio6nQ5Y2E98+fJlysrKCAaDpKWlrfrG+FAoRENDA598
      8gkzMzPk5uaKKe0jIyNcvnwZvV6PwWBY8WOPj4/z2WefUVFRgVqtRi6X89lnn1FZWYlOpyM+
      Ph6JRCJKMj777DOsVitpaWmr7gu0qD96//336e3tJSMjQ1wWXswOe/DgATk5Ocjl8uU3xYdD
      fuI3HOKPT+i59Le/oG1yE+03Ozn2wx9iLfsHynr2sF/jIzlOTeOMGwEQfC6ijQZczY4vbJaH
      vtrL9Mu28dZbW7l3/l1uNKbzQg4oY+LxTE7/cyWsCT6fj5KSEl555RWuXbuGzWajubmZM2fO
      oFarkclk1NTUcOjQITIyMpY8NxgMsnfvXhITE7lx4wZut3vVm2EWi4WhoSF+/OMfEw6HxQEn
      CAI+n49Nmzat2mJGKBTipZdeQqfTce3aNRwOBzt27CAnJ4dbt26RkZGBVqvFarXi8Xj48Y9/
      zIMHDzCbzRQUFKxKTV+sraGhgdOnTzM8PExXVxf79u0DFj4nk8mEx+MR+zvL/ptSapIoLMxg
      9OE9xoRscqImcCs2kmiKoXB7Dt3dZozZW8lP+admiyIui50bUpAveXU35oEpdu3ZRZRCy+ad
      +Yy19xGTnM3G7GSiHvMmNKPRSFZWFn19fcTGxuJyuRAEgdraWlpaWnA6nbhcLvr6+qiqqloi
      MktMTCQ1NZWOjg7i4+PXpOM5OzsLwPXr1xkYGBB/L5PJ2Lhx46rWkJmZiV6v5+HDh2RnZxMT
      E0NDQwPl5eVMTU2JxlgqlQqLxcKVK1fo7e0VG4erid/vF32IsrOzl0hB9Ho9GzZsWDI7LzsD
      REJemm6eo9EWy8nvvEaScgBJJEAkIhDw+VAolV/TylBKVJQUn9+PgJpwIESUavW/KF+XxWgh
      lUrF3r17mZ6eRqVSkZeXR29vLxKJhKioKLKzs5mZmaG2tpbnn38eWDjpjY2NxMbGsm3btjXx
      BZJIJOj1evLz8+no6ECv1//OzLRauN1uHjx4QEpKCvn5+YTDYYxGIz6fT+y4Auh0OrETOzIy
      suKy7K9CIpEQDoeJRCKEQqFl5dfLa4Em2rje4ufkiSMk6+RENNnESvp5ZB6nrtHMtoIMhIAf
      fyBEJBQkEAgRDgXx+QOEwyEC/sDnYjgVeQXZNFRW4bRPUVfTRU7hRsKhIIFAkHA4hM8fJPKY
      +nKTk5N4vV42bNgAIF7HGo1GDAaD6AanUCgwmUzivdJifq9MJiM3N1d0lFttTCYToVCItLQ0
      NBoN4XCYUCiEIAgEAgHxZzWk2R0dHSQmJpKRkUEwGCQYDKLVakWOxe70AAAH9UlEQVQhYGxs
      LKFQaEEoKQgkJSUxNTVFSkrKitfyZZRKJcFgkEePHtHT04NGoyESiYiDwufzEQwGCQQCRCKR
      5V0hXOYHvHulHgBZtI7Dx7+JKdDPtbI61Pl7efWZPB5cOU+DeWHai0srZmemnfL7C9OyQp3E
      8TOvk6yCSMhHZ81N7rePMGv1cOCb3yfV3sSthqGFewVDNr/36vPEalbfQPXLDA4Ocv36dWBh
      6j59+jQ2m43bt2+TmJjI0aNH8fl8XL16FYAXXniB+fl5YCFgr7KyEli4lDp+/Lh4g7xaCIJA
      T08Pd+/epaioiJKSEpqbm9m4cSNVVVUMDw8DsHXrVg4dOrSix66urqa1tRWA9PR0du/eze3b
      t5FIJLz00ktotVqam5vZtm0bDx48oKOjgwMHDrB169Y1Uco6nU4uXLiAyWTi8OHDTE9P4/P5
      UCgUXLlyhUgkIuq9HpMtioB73kpArsWgXV1x1Drr/Eus+wKt80TzOzfBi6aq66zzJLCuBl3n
      iWZdCrHOE836AFjniWbZi/2AZ4JL751lYM5FlCGf7/7gm4zceYeyB+NEtBn86I+/R2S4gdvl
      N5k0vcxP3ihCmHvEtetXeWg28ZP/6zTGz1/LMzvAh++fY8YbRhG3gTPfPol8qpFPL1cz5/WR
      XvQSp18oJnp1rWO+ksnJST788EMCgQC5ubm89tprSCQSysrK6O3t5Q/+4A+orKzk4cOHmEwm
      Xn31VYzGhXc2NjbG1atXsVqtFBQU8NJLL6245mViYoKqqiqioqI4efIkFouF8+fP43K5yM7O
      5uTJkyiVSgKBAOXl5bS3t5OUlMSJEyfEOleK3t5eysrKcDqd7N27l82bN3P16lWmpqbEWqKj
      o5mbm+PcuXPMzc1hs9k4cuSI2DxcLQRBoLu7m0uXLqHRaHj99dfF/oPT6eTs2bNYLBb27dvH
      wYMHv44xVhBdyja+cWwXw5WXCWfmUHellTf+5MdkWu9Q6c1nW7KKeLmDBquBZwpTkYZCRGsk
      9HU42XlwKwsRBREe3niPcdM3+PH3jiMfr6NmUsO2rAQ2FB/k2afSuPbpLbbveQr1Y9BFyOVy
      SkpKKCkpoauri02bNjE1NcXg4CAajYakpCRGR0f5zne+g1QqxWq1kpqauvDOIhE2bdrEoUOH
      GBgYICMjY8W7nuFwmLi4OLxer2h2VVhYyNNPP01/fz9paWmo1WqsViujo6N873vfAxaEeivd
      gIpEIhQXF7N//37a2trIzs4mLy+Po0ePMjY2hslkQq1Wo1KpKCkpYf/+/cjlcjZv3rzqGqlA
      IEBVVRVnzpzBYDAwNjZGVlYWAH19fajVak6ePElzc/OCgddyLxilMpKVGUdHxWXGorewSTWL
      V5GN0aBm46ZsHvWPojalk2z8J0c3uS6BnBQj0iXfYw/jIza2FhYgl0eTuSmNqZ4hYhPTMSq9
      lH96geSS59ApH89VmVKppKqqit/85jfk5uaiUCjo6OiguLgYmUyGVqvFbrfzN3/zN9y5c0ds
      NAHExsZiMBioqakRO7MrTWxs7JLUGblczoMHD/j7v/97UlJSRNWnVqtlfn6ev/7rv+bWrVuM
      j4+veC0mk4moqCiqqqrYsmULcXFxJCQkiCmZsbFL93nbbDa8Xq+YbrmaBAIBtFotMTExJCcn
      4/F4xMc8Ho8o1DMajTgcjq+hBg04ufHe3zEW9zR/+KO96MOdSENuQiEBn92GJkaHDFhedxiF
      Si3D7nAhEEPA5UdtTMAz08M7v7lAxnPf5PeLc1gDGc1XIpFIeO655ygsLOTu3buik5nb7aaj
      o4PCwkLOnDlDKBSiu7t7icmT2+2murqagoKCNZFCw4IVy/79+9myZQtVVVXMzc0RHx+PSqXi
      29/+tljnaph0zc3N0dDQwI4dO0hMTMTv91NbWytqg774/hc1Vl8M+FtNpFIpfr9f3Nn4RRcK
      mUwmKkFDoRBKpXL5AeAw13OrX8p39iYwPT6MJDWHtJhS6mvqmKmfYu+ZDGzjZiZHLDhmBEbG
      sknQBJh6NMK8fQbz4AjqrAxUMiVbSop4p/wyWZEN3CnvoPDkH9N843/hNG0jTx/GPG4hIyWR
      qMcQkdTf34/b7SYqKgqPx0NaWhoxMTF4PB7Gx8fRarUMDw8TCAR4+PAhhw8fFgdBf38/fr8f
      n8/HyMgIqampK34PYLPZMJvNTE5OMjw8TDgcxmazodVq8Xq9+P1+rFYrOp2O0dFR/H6/WOdK
      09zcjFKpxOFwEAqFcDgcWK1WUlJSGB4eJjk5GbfbTWxsLA6Hg3A4vCZWMbDgCxQdHc29e/eY
      nZ0lOztbNCxLTEyksrISh8OBw+FAr9cvfw8gBPz4I0Fss9PM2hwYk/PZUZDB+JCZuKIjHNgQ
      g7m9ke45GekxAt5ANFrpDM09cySn6XDP+0jOzkYtB50phzS1m67BMWanptFkFpCXpMbvcTIz
      bcHml5KZlvxYBoBEIqGnp4eZmRl27dpFbm4uiYmJ4k9qaipTU1P09vZSXFxMdnY2c3Nzotfk
      xMQEFosFt9u9KgNgdHSUvr4+ZDIZXq+X5ORkRkZGmJycZPv27WRmZjI8PExsbCwWi4W+vj5K
      SkrIyclZcf2N0+lkfHwci8VCMBgkLi4Oi8WCxWLB4XCI4jej0Sg+rtfr10QHJJVKSU1Npb+/
      H5PJxI4dO3A4HHg8HlJSUpBKpVgsFp555hm0Wi3/LwUd/W6wLGeeAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
